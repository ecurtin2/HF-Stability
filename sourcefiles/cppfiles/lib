/* Generated by Cython 0.24.1 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "cppfiles/HFSnamespace.h"
        ], 
        "extra_compile_args": [
            "-O0", 
            "-std=c++11", 
            "-Wno-unused-variable", 
            "-Wno-unused-function", 
            "-DPYREX_WITHOUT_ASSERTIONS"
        ], 
        "language": "c++", 
        "libraries": [
            "armadillo"
        ]
    }, 
    "module_name": "HFS_CythonGenerated"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_24_1"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
  #define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__HFS_CythonGenerated
#define __PYX_HAVE_API__HFS_CythonGenerated
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "math.h"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "armadillo"
#include "cppfiles/HFSnamespace.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* None.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "pyfiles/lib/cyarma.pyx",
  "HFS_CythonGenerated.pyx",
  "__init__.pxd",
  "stringsource",
  "type.pxd",
};
/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":725
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":726
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":727
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":728
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":732
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":733
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":734
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":735
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":739
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":740
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":749
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":750
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":751
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":754
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":755
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":757
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":758
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":761
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* None.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

/* None.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":764
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":765
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":766
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* BufferFormatCheck.proto */
static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type); // PROTO

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* BufferFallbackError.proto */
static void __Pyx_RaiseBufferFallbackError(void);

/* PyThreadStateGet.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

#define __Pyx_BufPtrStrided2d(type, buf, i0, s0, i1, s1) (type)((char*)buf + i0 * s0 + i1 * s1)
/* PyFloatBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_DivideCObj(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_DivideCObj(op1, op2, floatval, inplace)\
    ((inplace ? __Pyx_PyNumber_InPlaceDivide(op1, op2) : __Pyx_PyNumber_Divide(op1, op2)))
    #endif

/* PyFloatBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_SubtractCObj(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_SubtractCObj(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyFloatBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_AddCObj(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_AddCObj(op1, op2, floatval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyIntBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_SubtractCObj(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_SubtractCObj(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyIntBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddCObj(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_AddCObj(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyIntBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_EqObjC(op1, op2, intval, inplace)\
    PyObject_RichCompare(op1, op2, Py_EQ)
    #endif

/* PyFloatBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_DivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace);
#else
#define __Pyx_PyFloat_DivideObjC(op1, op2, floatval, inplace)\
    ((inplace ? __Pyx_PyNumber_InPlaceDivide(op1, op2) : __Pyx_PyNumber_Divide(op1, op2)))
    #endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ListCompAppend.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* pyobject_as_double.proto */
static double __Pyx__PyObject_AsDouble(PyObject* obj);
#if CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyObject_AsDouble(obj)\
(likely(PyFloat_CheckExact(obj)) ? PyFloat_AS_DOUBLE(obj) :\
 likely(PyInt_CheckExact(obj)) ?\
 PyFloat_AsDouble(obj) : __Pyx__PyObject_AsDouble(obj))
#else
#define __Pyx_PyObject_AsDouble(obj)\
((likely(PyFloat_CheckExact(obj))) ?\
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* None.proto */
static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};
static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_PY_LONG_LONG(unsigned PY_LONG_LONG value);

/* None.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX         && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* None.proto */
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* None.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* None.proto */
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

/* None.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_As_unsigned_PY_LONG_LONG(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libcpp' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libc.math' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'HFS_CythonGenerated' */
static arma::mat *__pyx_f_19HFS_CythonGenerated_numpy_to_mat(PyArrayObject *); /*proto*/
static arma::mat __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(PyArrayObject *); /*proto*/
static arma::umat *__pyx_f_19HFS_CythonGenerated_numpy_to_umat(PyArrayObject *); /*proto*/
static arma::umat __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(PyArrayObject *); /*proto*/
static arma::vec *__pyx_f_19HFS_CythonGenerated_numpy_to_vec(PyArrayObject *); /*proto*/
static arma::vec __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(PyArrayObject *); /*proto*/
static arma::uvec *__pyx_f_19HFS_CythonGenerated_numpy_to_uvec(PyArrayObject *); /*proto*/
static arma::uvec __pyx_f_19HFS_CythonGenerated_numpy_to_uvec_d(PyArrayObject *); /*proto*/
static PyArrayObject *__pyx_f_19HFS_CythonGenerated_mat_to_numpy(arma::mat const &); /*proto*/
static PyArrayObject *__pyx_f_19HFS_CythonGenerated_umat_to_numpy(arma::umat const &); /*proto*/
static PyArrayObject *__pyx_f_19HFS_CythonGenerated_vec_to_numpy(arma::vec const &); /*proto*/
static PyArrayObject *__pyx_f_19HFS_CythonGenerated_uvec_to_numpy(arma::uvec const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_double_t = { "double_t", NULL, sizeof(__pyx_t_5numpy_double_t), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t = { "uint64_t", NULL, sizeof(__pyx_t_5numpy_uint64_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_uint64_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_uint64_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_unsigned_PY_LONG_LONG = { "unsigned long long", NULL, sizeof(unsigned PY_LONG_LONG), { 0 }, 0, IS_UNSIGNED(unsigned PY_LONG_LONG) ? 'U' : 'I', IS_UNSIGNED(unsigned PY_LONG_LONG), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
#define __Pyx_MODULE_NAME "HFS_CythonGenerated"
int __pyx_module_is_main_HFS_CythonGenerated = 0;

/* Implementation of 'HFS_CythonGenerated' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static const char __pyx_k_F[] = "F";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_k[] = "k-";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_fc[] = "fc";
static const char __pyx_k_gm[] = "gm";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_pi[] = "pi";
static const char __pyx_k_sp[] = "sp";
static const char __pyx_k__22[] = ".";
static const char __pyx_k__32[] = "*";
static const char __pyx_k_gca[] = "gca";
static const char __pyx_k_k_2[] = "k:";
static const char __pyx_k_k_3[] = "k--";
static const char __pyx_k_k_4[] = "k";
static const char __pyx_k_loc[] = "loc";
static const char __pyx_k_log[] = "log";
static const char __pyx_k_off[] = "off";
static const char __pyx_k_plt[] = "plt";
static const char __pyx_k_sns[] = "sns";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_D_rs[] = "D, rs = ";
static const char __pyx_k_VAL1[] = "VAL1";
static const char __pyx_k_VAL2[] = "VAL2";
static const char __pyx_k_VAL3[] = "VAL3";
static const char __pyx_k_VAL4[] = "VAL4";
static const char __pyx_k_VAL5[] = "VAL5";
static const char __pyx_k_amax[] = "amax";
static const char __pyx_k_amin[] = "amin";
static const char __pyx_k_axis[] = "axis";
static const char __pyx_k_copy[] = "copy";
static const char __pyx_k_fill[] = "fill";
static const char __pyx_k_hist[] = "hist";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mask[] = "mask";
static const char __pyx_k_math[] = "math";
static const char __pyx_k_none[] = "none";
static const char __pyx_k_norm[] = "norm";
static const char __pyx_k_plot[] = "plot";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_val1[] = "val1";
static const char __pyx_k_val2[] = "val2";
static const char __pyx_k_val3[] = "val3";
static const char __pyx_k_val4[] = "val4";
static const char __pyx_k_val5[] = "val5";
static const char __pyx_k_val6[] = "val6";
static const char __pyx_k_val7[] = "val7";
static const char __pyx_k_xlim[] = "xlim";
static const char __pyx_k_xmax[] = "xmax";
static const char __pyx_k_ylim[] = "ylim";
static const char __pyx_k_Count[] = "Count";
static const char __pyx_k_Total[] = "Total";
static const char __pyx_k_alpha[] = "alpha";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_const[] = "const";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_empty[] = "empty";
static const char __pyx_k_flags[] = "flags";
static const char __pyx_k_label[] = "label";
static const char __pyx_k_mask2[] = "mask2";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_order[] = "order";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_scale[] = "scale";
static const char __pyx_k_scipy[] = "scipy";
static const char __pyx_k_title[] = "title";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_where[] = "where";
static const char __pyx_k_Circle[] = "Circle";
static const char __pyx_k_circle[] = "circle";
static const char __pyx_k_double[] = "double";
static const char __pyx_k_ellipe[] = "ellipe";
static const char __pyx_k_ellipk[] = "ellipk";
static const char __pyx_k_exch_x[] = "exch_x";
static const char __pyx_k_get_Nk[] = "get_Nk";
static const char __pyx_k_get_kf[] = "get_kf";
static const char __pyx_k_get_rs[] = "get_rs";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_kvir_y[] = "kvir_y";
static const char __pyx_k_legend[] = "legend";
static const char __pyx_k_linalg[] = "linalg";
static const char __pyx_k_py_f2D[] = "py_f2D";
static const char __pyx_k_py_f3D[] = "py_f3D";
static const char __pyx_k_radius[] = "radius";
static const char __pyx_k_set_Nk[] = "set_Nk";
static const char __pyx_k_set_kf[] = "set_kf";
static const char __pyx_k_set_rs[] = "set_rs";
static const char __pyx_k_square[] = "square";
static const char __pyx_k_uint64[] = "uint64";
static const char __pyx_k_xlabel[] = "xlabel";
static const char __pyx_k_ylabel[] = "ylabel";
static const char __pyx_k_Kinetic[] = "Kinetic";
static const char __pyx_k_Polygon[] = "Polygon";
static const char __pyx_k_Virtual[] = "Virtual";
static const char __pyx_k_get_vol[] = "get_vol";
static const char __pyx_k_is_spec[] = "is_spec";
static const char __pyx_k_owndata[] = "owndata";
static const char __pyx_k_scatter[] = "scatter";
static const char __pyx_k_seaborn[] = "seaborn";
static const char __pyx_k_set_vol[] = "set_vol";
static const char __pyx_k_special[] = "special";
static const char __pyx_k_Exchange[] = "Exchange";
static const char __pyx_k_Occupied[] = "Occupied";
static const char __pyx_k_analytic[] = "analytic";
static const char __pyx_k_energy_x[] = "energy_x";
static const char __pyx_k_get_Nexc[] = "get_Nexc";
static const char __pyx_k_get_Nocc[] = "get_Nocc";
static const char __pyx_k_get_Nvir[] = "get_Nvir";
static const char __pyx_k_get_kmax[] = "get_kmax";
static const char __pyx_k_get_ndim[] = "get_ndim";
static const char __pyx_k_linspace[] = "linspace";
static const char __pyx_k_row_norm[] = "row_norm";
static const char __pyx_k_set_Nexc[] = "set_Nexc";
static const char __pyx_k_set_Nocc[] = "set_Nocc";
static const char __pyx_k_set_Nvir[] = "set_Nvir";
static const char __pyx_k_set_kmax[] = "set_kmax";
static const char __pyx_k_set_ndim[] = "set_ndim";
static const char __pyx_k_add_patch[] = "add_patch";
static const char __pyx_k_edgecolor[] = "edgecolor";
static const char __pyx_k_get_kgrid[] = "get_kgrid";
static const char __pyx_k_itertools[] = "itertools";
static const char __pyx_k_kinetic_x[] = "kinetic_x";
static const char __pyx_k_linewidth[] = "linewidth";
static const char __pyx_k_py_is_vir[] = "py_is_vir";
static const char __pyx_k_set_kgrid[] = "set_kgrid";
static const char __pyx_k_spec_virs[] = "spec_virs";
static const char __pyx_k_sqrpoints[] = "sqrpoints";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_frac_k_k_f[] = "$\\frac{k}{k_f}$";
static const char __pyx_k_get_N_elec[] = "get_N_elec";
static const char __pyx_k_get_deltaK[] = "get_deltaK";
static const char __pyx_k_get_states[] = "get_states";
static const char __pyx_k_logical_or[] = "logical_or";
static const char __pyx_k_plot_1stBZ[] = "plot_1stBZ";
static const char __pyx_k_py_calc_1A[] = "py_calc_1A";
static const char __pyx_k_py_calc_1B[] = "py_calc_1B";
static const char __pyx_k_py_calc_3A[] = "py_calc_3A";
static const char __pyx_k_py_calc_3B[] = "py_calc_3B";
static const char __pyx_k_py_calc_3H[] = "py_calc_3H";
static const char __pyx_k_py_calc_kf[] = "py_calc_kf";
static const char __pyx_k_set_N_elec[] = "set_N_elec";
static const char __pyx_k_set_deltaK[] = "set_deltaK";
static const char __pyx_k_set_states[] = "set_states";
static const char __pyx_k_spec_alpha[] = "spec_alpha";
static const char __pyx_k_Discretized[] = "Discretized";
static const char __pyx_k_active_virs[] = "active_virs";
static const char __pyx_k_center_left[] = "center left";
static const char __pyx_k_get_dav_its[] = "get_dav_its";
static const char __pyx_k_get_mattest[] = "get_mattest";
static const char __pyx_k_logical_not[] = "logical_not";
static const char __pyx_k_plot_energy[] = "plot_energy";
static const char __pyx_k_py_exchange[] = "py_exchange";
static const char __pyx_k_pyfiles_lib[] = "pyfiles.lib";
static const char __pyx_k_set_dav_its[] = "set_dav_its";
static const char __pyx_k_set_mattest[] = "set_mattest";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_f_contiguous[] = "f_contiguous";
static const char __pyx_k_get_dav_vals[] = "get_dav_vals";
static const char __pyx_k_get_dav_vecs[] = "get_dav_vecs";
static const char __pyx_k_get_out_vec1[] = "get_out_vec1";
static const char __pyx_k_get_out_vec2[] = "get_out_vec2";
static const char __pyx_k_py_kb_j_to_t[] = "py_kb_j_to_t";
static const char __pyx_k_set_dav_vals[] = "set_dav_vals";
static const char __pyx_k_set_dav_vecs[] = "set_dav_vecs";
static const char __pyx_k_set_out_vec1[] = "set_out_vec1";
static const char __pyx_k_set_out_vec2[] = "set_out_vec2";
static const char __pyx_k_color_palette[] = "color_palette";
static const char __pyx_k_plot_exc_hist[] = "plot_exc_hist";
static const char __pyx_k_py_k_to_index[] = "py_k_to_index";
static const char __pyx_k_bbox_to_anchor[] = "bbox_to_anchor";
static const char __pyx_k_get_occ_states[] = "get_occ_states";
static const char __pyx_k_get_vir_states[] = "get_vir_states";
static const char __pyx_k_py_calc_params[] = "py_calc_params";
static const char __pyx_k_py_to_first_BZ[] = "py_to_first_BZ";
static const char __pyx_k_set_occ_states[] = "set_occ_states";
static const char __pyx_k_set_vir_states[] = "set_vir_states";
static const char __pyx_k_general_methods[] = "general_methods";
static const char __pyx_k_get_dav_message[] = "get_dav_message";
static const char __pyx_k_get_excitations[] = "get_excitations";
static const char __pyx_k_get_two_e_const[] = "get_two_e_const";
static const char __pyx_k_py_occ_idx_to_k[] = "py_occ_idx_to_k";
static const char __pyx_k_py_print_params[] = "py_print_params";
static const char __pyx_k_py_two_electron[] = "py_two_electron";
static const char __pyx_k_py_vir_idx_to_k[] = "py_vir_idx_to_k";
static const char __pyx_k_set_dav_message[] = "set_dav_message";
static const char __pyx_k_set_excitations[] = "set_excitations";
static const char __pyx_k_set_two_e_const[] = "set_two_e_const";
static const char __pyx_k_Orbital_Energies[] = "Orbital Energies\n";
static const char __pyx_k_get_bzone_length[] = "get_bzone_length";
static const char __pyx_k_get_exc_energies[] = "get_exc_energies";
static const char __pyx_k_get_fermi_energy[] = "get_fermi_energy";
static const char __pyx_k_get_inp_test_vec[] = "get_inp_test_vec";
static const char __pyx_k_get_occ_energies[] = "get_occ_energies";
static const char __pyx_k_get_vir_energies[] = "get_vir_energies";
static const char __pyx_k_py_analytic_exch[] = "py_analytic_exch";
static const char __pyx_k_py_build_mattest[] = "py_build_mattest";
static const char __pyx_k_py_calc_energies[] = "py_calc_energies";
static const char __pyx_k_set_bzone_length[] = "set_bzone_length";
static const char __pyx_k_set_exc_energies[] = "set_exc_energies";
static const char __pyx_k_set_fermi_energy[] = "set_fermi_energy";
static const char __pyx_k_set_inp_test_vec[] = "set_inp_test_vec";
static const char __pyx_k_set_occ_energies[] = "set_occ_energies";
static const char __pyx_k_set_vir_energies[] = "set_vir_energies";
static const char __pyx_k_matplotlib_pyplot[] = "matplotlib.pyplot";
static const char __pyx_k_py_matvec_prod_3A[] = "py_matvec_prod_3A";
static const char __pyx_k_py_matvec_prod_3B[] = "py_matvec_prod_3B";
static const char __pyx_k_py_matvec_prod_3H[] = "py_matvec_prod_3H";
static const char __pyx_k_py_matvec_prod_me[] = "py_matvec_prod_me";
static const char __pyx_k_Spectator_Virtuals[] = "Spectator Virtuals";
static const char __pyx_k_py_analytic_energy[] = "py_analytic_energy";
static const char __pyx_k_py_calc_exc_energy[] = "py_calc_exc_energy";
static const char __pyx_k_py_calc_occ_states[] = "py_calc_occ_states";
static const char __pyx_k_HFS_CythonGenerated[] = "HFS_CythonGenerated";
static const char __pyx_k_py_calc_excitations[] = "py_calc_excitations";
static const char __pyx_k_py_calc_inv_exc_map[] = "py_calc_inv_exc_map";
static const char __pyx_k_py_davidson_wrapper[] = "py_davidson_wrapper";
static const char __pyx_k_get_inv_exc_map_test[] = "get_inv_exc_map_test";
static const char __pyx_k_py_calc_occ_energies[] = "py_calc_occ_energies";
static const char __pyx_k_py_calc_vir_energies[] = "py_calc_vir_energies";
static const char __pyx_k_set_inv_exc_map_test[] = "set_inv_exc_map_test";
static const char __pyx_k_py_two_electron_check[] = "py_two_electron_check";
static const char __pyx_k_py_calc_vir_N_to_1_map[] = "py_calc_vir_N_to_1_map";
static const char __pyx_k_The_First_Brillouin_Zone[] = "The First Brillouin Zone";
static const char __pyx_k_Excitation_Energy_Histogram[] = "Excitation Energy Histogram";
static const char __pyx_k_frac_epsilon_k_HF_epsilon_F[] = "$\\frac{\\epsilon_k^{HF}}{\\epsilon_F}$";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_py_calc_vol_and_two_e_const[] = "py_calc_vol_and_two_e_const";
static const char __pyx_k_Only_2d_is_supported_right_now[] = "Only 2d is supported right now";
static const char __pyx_k_epsilon__vir_epsilon__occ_Hartr[] = "$\\epsilon_{vir} - \\epsilon_{occ}$ (Hartree)";
static const char __pyx_k_home_evan_git_HF_Stability_sour[] = "/home/evan/git/HF-Stability/sourcefiles/HFS_CythonGenerated.pyx";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_n_s_Circle;
static PyObject *__pyx_n_s_Count;
static PyObject *__pyx_kp_s_D_rs;
static PyObject *__pyx_n_s_Discretized;
static PyObject *__pyx_n_s_Exchange;
static PyObject *__pyx_kp_s_Excitation_Energy_Histogram;
static PyObject *__pyx_n_s_F;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_HFS_CythonGenerated;
static PyObject *__pyx_n_s_Kinetic;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_Occupied;
static PyObject *__pyx_kp_s_Only_2d_is_supported_right_now;
static PyObject *__pyx_kp_s_Orbital_Energies;
static PyObject *__pyx_n_s_Polygon;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_kp_s_Spectator_Virtuals;
static PyObject *__pyx_kp_s_The_First_Brillouin_Zone;
static PyObject *__pyx_n_s_Total;
static PyObject *__pyx_n_s_VAL1;
static PyObject *__pyx_n_s_VAL2;
static PyObject *__pyx_n_s_VAL3;
static PyObject *__pyx_n_s_VAL4;
static PyObject *__pyx_n_s_VAL5;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_Virtual;
static PyObject *__pyx_kp_s__22;
static PyObject *__pyx_n_s__32;
static PyObject *__pyx_n_s_active_virs;
static PyObject *__pyx_n_s_add_patch;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_amax;
static PyObject *__pyx_n_s_amin;
static PyObject *__pyx_n_s_analytic;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_axis;
static PyObject *__pyx_n_s_bbox_to_anchor;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_kp_s_center_left;
static PyObject *__pyx_n_s_circle;
static PyObject *__pyx_n_s_color_palette;
static PyObject *__pyx_n_s_const;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_s_double;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_edgecolor;
static PyObject *__pyx_n_s_ellipe;
static PyObject *__pyx_n_s_ellipk;
static PyObject *__pyx_n_s_empty;
static PyObject *__pyx_n_s_energy_x;
static PyObject *__pyx_kp_s_epsilon__vir_epsilon__occ_Hartr;
static PyObject *__pyx_n_s_exch_x;
static PyObject *__pyx_n_s_f_contiguous;
static PyObject *__pyx_n_s_fc;
static PyObject *__pyx_n_s_fill;
static PyObject *__pyx_n_s_flags;
static PyObject *__pyx_kp_s_frac_epsilon_k_HF_epsilon_F;
static PyObject *__pyx_kp_s_frac_k_k_f;
static PyObject *__pyx_n_s_gca;
static PyObject *__pyx_n_s_general_methods;
static PyObject *__pyx_n_s_get_N_elec;
static PyObject *__pyx_n_s_get_Nexc;
static PyObject *__pyx_n_s_get_Nk;
static PyObject *__pyx_n_s_get_Nocc;
static PyObject *__pyx_n_s_get_Nvir;
static PyObject *__pyx_n_s_get_bzone_length;
static PyObject *__pyx_n_s_get_dav_its;
static PyObject *__pyx_n_s_get_dav_message;
static PyObject *__pyx_n_s_get_dav_vals;
static PyObject *__pyx_n_s_get_dav_vecs;
static PyObject *__pyx_n_s_get_deltaK;
static PyObject *__pyx_n_s_get_exc_energies;
static PyObject *__pyx_n_s_get_excitations;
static PyObject *__pyx_n_s_get_fermi_energy;
static PyObject *__pyx_n_s_get_inp_test_vec;
static PyObject *__pyx_n_s_get_inv_exc_map_test;
static PyObject *__pyx_n_s_get_kf;
static PyObject *__pyx_n_s_get_kgrid;
static PyObject *__pyx_n_s_get_kmax;
static PyObject *__pyx_n_s_get_mattest;
static PyObject *__pyx_n_s_get_ndim;
static PyObject *__pyx_n_s_get_occ_energies;
static PyObject *__pyx_n_s_get_occ_states;
static PyObject *__pyx_n_s_get_out_vec1;
static PyObject *__pyx_n_s_get_out_vec2;
static PyObject *__pyx_n_s_get_rs;
static PyObject *__pyx_n_s_get_states;
static PyObject *__pyx_n_s_get_two_e_const;
static PyObject *__pyx_n_s_get_vir_energies;
static PyObject *__pyx_n_s_get_vir_states;
static PyObject *__pyx_n_s_get_vol;
static PyObject *__pyx_n_s_gm;
static PyObject *__pyx_n_s_hist;
static PyObject *__pyx_kp_s_home_evan_git_HF_Stability_sour;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_is_spec;
static PyObject *__pyx_n_s_itertools;
static PyObject *__pyx_kp_s_k;
static PyObject *__pyx_kp_s_k_2;
static PyObject *__pyx_kp_s_k_3;
static PyObject *__pyx_n_s_k_4;
static PyObject *__pyx_n_s_kinetic_x;
static PyObject *__pyx_n_s_kvir_y;
static PyObject *__pyx_n_s_label;
static PyObject *__pyx_n_s_legend;
static PyObject *__pyx_n_s_linalg;
static PyObject *__pyx_n_s_linewidth;
static PyObject *__pyx_n_s_linspace;
static PyObject *__pyx_n_s_loc;
static PyObject *__pyx_n_s_log;
static PyObject *__pyx_n_s_logical_not;
static PyObject *__pyx_n_s_logical_or;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mask;
static PyObject *__pyx_n_s_mask2;
static PyObject *__pyx_n_s_math;
static PyObject *__pyx_n_s_matplotlib_pyplot;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_none;
static PyObject *__pyx_n_s_norm;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_off;
static PyObject *__pyx_n_s_order;
static PyObject *__pyx_n_s_owndata;
static PyObject *__pyx_n_s_pi;
static PyObject *__pyx_n_s_plot;
static PyObject *__pyx_n_s_plot_1stBZ;
static PyObject *__pyx_n_s_plot_energy;
static PyObject *__pyx_n_s_plot_exc_hist;
static PyObject *__pyx_n_s_plt;
static PyObject *__pyx_n_s_py_analytic_energy;
static PyObject *__pyx_n_s_py_analytic_exch;
static PyObject *__pyx_n_s_py_build_mattest;
static PyObject *__pyx_n_s_py_calc_1A;
static PyObject *__pyx_n_s_py_calc_1B;
static PyObject *__pyx_n_s_py_calc_3A;
static PyObject *__pyx_n_s_py_calc_3B;
static PyObject *__pyx_n_s_py_calc_3H;
static PyObject *__pyx_n_s_py_calc_energies;
static PyObject *__pyx_n_s_py_calc_exc_energy;
static PyObject *__pyx_n_s_py_calc_excitations;
static PyObject *__pyx_n_s_py_calc_inv_exc_map;
static PyObject *__pyx_n_s_py_calc_kf;
static PyObject *__pyx_n_s_py_calc_occ_energies;
static PyObject *__pyx_n_s_py_calc_occ_states;
static PyObject *__pyx_n_s_py_calc_params;
static PyObject *__pyx_n_s_py_calc_vir_N_to_1_map;
static PyObject *__pyx_n_s_py_calc_vir_energies;
static PyObject *__pyx_n_s_py_calc_vol_and_two_e_const;
static PyObject *__pyx_n_s_py_davidson_wrapper;
static PyObject *__pyx_n_s_py_exchange;
static PyObject *__pyx_n_s_py_f2D;
static PyObject *__pyx_n_s_py_f3D;
static PyObject *__pyx_n_s_py_is_vir;
static PyObject *__pyx_n_s_py_k_to_index;
static PyObject *__pyx_n_s_py_kb_j_to_t;
static PyObject *__pyx_n_s_py_matvec_prod_3A;
static PyObject *__pyx_n_s_py_matvec_prod_3B;
static PyObject *__pyx_n_s_py_matvec_prod_3H;
static PyObject *__pyx_n_s_py_matvec_prod_me;
static PyObject *__pyx_n_s_py_occ_idx_to_k;
static PyObject *__pyx_n_s_py_print_params;
static PyObject *__pyx_n_s_py_to_first_BZ;
static PyObject *__pyx_n_s_py_two_electron;
static PyObject *__pyx_n_s_py_two_electron_check;
static PyObject *__pyx_n_s_py_vir_idx_to_k;
static PyObject *__pyx_n_s_pyfiles_lib;
static PyObject *__pyx_n_s_radius;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_row_norm;
static PyObject *__pyx_n_s_scale;
static PyObject *__pyx_n_s_scatter;
static PyObject *__pyx_n_s_scipy;
static PyObject *__pyx_n_s_seaborn;
static PyObject *__pyx_n_s_set_N_elec;
static PyObject *__pyx_n_s_set_Nexc;
static PyObject *__pyx_n_s_set_Nk;
static PyObject *__pyx_n_s_set_Nocc;
static PyObject *__pyx_n_s_set_Nvir;
static PyObject *__pyx_n_s_set_bzone_length;
static PyObject *__pyx_n_s_set_dav_its;
static PyObject *__pyx_n_s_set_dav_message;
static PyObject *__pyx_n_s_set_dav_vals;
static PyObject *__pyx_n_s_set_dav_vecs;
static PyObject *__pyx_n_s_set_deltaK;
static PyObject *__pyx_n_s_set_exc_energies;
static PyObject *__pyx_n_s_set_excitations;
static PyObject *__pyx_n_s_set_fermi_energy;
static PyObject *__pyx_n_s_set_inp_test_vec;
static PyObject *__pyx_n_s_set_inv_exc_map_test;
static PyObject *__pyx_n_s_set_kf;
static PyObject *__pyx_n_s_set_kgrid;
static PyObject *__pyx_n_s_set_kmax;
static PyObject *__pyx_n_s_set_mattest;
static PyObject *__pyx_n_s_set_ndim;
static PyObject *__pyx_n_s_set_occ_energies;
static PyObject *__pyx_n_s_set_occ_states;
static PyObject *__pyx_n_s_set_out_vec1;
static PyObject *__pyx_n_s_set_out_vec2;
static PyObject *__pyx_n_s_set_rs;
static PyObject *__pyx_n_s_set_states;
static PyObject *__pyx_n_s_set_two_e_const;
static PyObject *__pyx_n_s_set_vir_energies;
static PyObject *__pyx_n_s_set_vir_states;
static PyObject *__pyx_n_s_set_vol;
static PyObject *__pyx_n_s_sns;
static PyObject *__pyx_n_s_sp;
static PyObject *__pyx_n_s_spec_alpha;
static PyObject *__pyx_n_s_spec_virs;
static PyObject *__pyx_n_s_special;
static PyObject *__pyx_n_s_sqrpoints;
static PyObject *__pyx_n_s_square;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_title;
static PyObject *__pyx_n_s_uint64;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_val;
static PyObject *__pyx_n_s_val1;
static PyObject *__pyx_n_s_val2;
static PyObject *__pyx_n_s_val3;
static PyObject *__pyx_n_s_val4;
static PyObject *__pyx_n_s_val5;
static PyObject *__pyx_n_s_val6;
static PyObject *__pyx_n_s_val7;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_where;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_xlabel;
static PyObject *__pyx_n_s_xlim;
static PyObject *__pyx_n_s_xmax;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_ylabel;
static PyObject *__pyx_n_s_ylim;
static PyObject *__pyx_pf_19HFS_CythonGenerated_py_f2D(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_2py_f3D(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_4py_analytic_exch(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_k); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_6py_analytic_energy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_k); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_8plot_1stBZ(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_spec_alpha); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_10plot_energy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_analytic, PyObject *__pyx_v_Discretized); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_12plot_exc_hist(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_14py_calc_kf(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_16py_calc_vol_and_two_e_const(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_18py_print_params(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_20py_calc_occ_states(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_22py_calc_occ_energies(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_24py_calc_vir_energies(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_26py_calc_excitations(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_28py_is_vir(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_val); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_30py_calc_exc_energy(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_32py_calc_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, PyArrayObject *__pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_34py_exchange(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_36py_two_electron(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, PyArrayObject *__pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_38py_two_electron_check(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, PyArrayObject *__pyx_v_val2, PyArrayObject *__pyx_v_val3, PyArrayObject *__pyx_v_val4); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_40py_calc_1B(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_42py_calc_3B(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_44py_calc_1A(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_46py_calc_3A(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_48py_calc_3H(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_50py_to_first_BZ(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_52py_calc_params(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_54py_calc_inv_exc_map(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_56py_calc_vir_N_to_1_map(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_58py_k_to_index(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_60py_k_to_index(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_62py_build_mattest(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_64py_matvec_prod_me(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_66py_matvec_prod_3H(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_68py_davidson_wrapper(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2, int __pyx_v_val3, int __pyx_v_val4, PyArrayObject *__pyx_v_val5, float __pyx_v_val6, int __pyx_v_val7); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_70py_kb_j_to_t(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, int __pyx_v_val2); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_72py_matvec_prod_3A(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_74py_matvec_prod_3B(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_76py_occ_idx_to_k(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_78py_vir_idx_to_k(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_80get_bzone_length(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_82set_bzone_length(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_84get_vol(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_86set_vol(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_88get_rs(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_90set_rs(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_92get_kf(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_94set_kf(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_96get_kmax(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_98set_kmax(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_100get_fermi_energy(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_102set_fermi_energy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_104get_two_e_const(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_106set_two_e_const(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_108get_deltaK(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_110set_deltaK(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_112get_Nocc(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_114set_Nocc(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_116get_Nvir(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_118set_Nvir(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_120get_Nexc(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_122set_Nexc(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_124get_N_elec(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_126set_N_elec(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_128get_Nk(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_130set_Nk(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_132get_ndim(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_134set_ndim(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_136get_occ_energies(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_138set_occ_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_140get_vir_energies(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_142set_vir_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_144get_exc_energies(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_146set_exc_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_148get_kgrid(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_150set_kgrid(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_152get_inp_test_vec(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_154set_inp_test_vec(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_156get_out_vec1(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_158set_out_vec1(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_160get_out_vec2(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_162set_out_vec2(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_164get_mattest(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_166set_mattest(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_168get_occ_states(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_170set_occ_states(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_172get_vir_states(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_174set_vir_states(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_176get_excitations(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_178set_excitations(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_180get_dav_vals(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_182set_dav_vals(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_184get_dav_vecs(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_186set_dav_vecs(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_188get_states(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_190set_states(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_192get_dav_its(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_194set_dav_its(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_196get_dav_message(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_198set_dav_message(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_200get_inv_exc_map_test(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_19HFS_CythonGenerated_202set_inv_exc_map_test(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_2_0;
static PyObject *__pyx_float_0_20;
static PyObject *__pyx_float_0_95;
static PyObject *__pyx_float_10eneg_10;
static PyObject *__pyx_float_neg_2_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_30;
static PyObject *__pyx_int_500;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_slice__3;
static PyObject *__pyx_slice__5;
static PyObject *__pyx_slice__7;
static PyObject *__pyx_slice__9;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_slice__11;
static PyObject *__pyx_slice__13;
static PyObject *__pyx_slice__15;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_tuple__87;
static PyObject *__pyx_tuple__89;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__103;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__109;
static PyObject *__pyx_tuple__112;
static PyObject *__pyx_tuple__115;
static PyObject *__pyx_tuple__118;
static PyObject *__pyx_tuple__121;
static PyObject *__pyx_tuple__124;
static PyObject *__pyx_tuple__127;
static PyObject *__pyx_tuple__130;
static PyObject *__pyx_tuple__133;
static PyObject *__pyx_tuple__136;
static PyObject *__pyx_tuple__139;
static PyObject *__pyx_tuple__142;
static PyObject *__pyx_tuple__145;
static PyObject *__pyx_tuple__148;
static PyObject *__pyx_tuple__151;
static PyObject *__pyx_tuple__154;
static PyObject *__pyx_tuple__157;
static PyObject *__pyx_tuple__160;
static PyObject *__pyx_tuple__163;
static PyObject *__pyx_tuple__166;
static PyObject *__pyx_tuple__169;
static PyObject *__pyx_tuple__172;
static PyObject *__pyx_tuple__175;
static PyObject *__pyx_tuple__178;
static PyObject *__pyx_tuple__181;
static PyObject *__pyx_tuple__184;
static PyObject *__pyx_tuple__187;
static PyObject *__pyx_tuple__190;
static PyObject *__pyx_codeobj__34;
static PyObject *__pyx_codeobj__36;
static PyObject *__pyx_codeobj__38;
static PyObject *__pyx_codeobj__40;
static PyObject *__pyx_codeobj__42;
static PyObject *__pyx_codeobj__44;
static PyObject *__pyx_codeobj__45;
static PyObject *__pyx_codeobj__46;
static PyObject *__pyx_codeobj__47;
static PyObject *__pyx_codeobj__48;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__50;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__52;
static PyObject *__pyx_codeobj__54;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__59;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__63;
static PyObject *__pyx_codeobj__65;
static PyObject *__pyx_codeobj__67;
static PyObject *__pyx_codeobj__69;
static PyObject *__pyx_codeobj__71;
static PyObject *__pyx_codeobj__73;
static PyObject *__pyx_codeobj__75;
static PyObject *__pyx_codeobj__76;
static PyObject *__pyx_codeobj__77;
static PyObject *__pyx_codeobj__78;
static PyObject *__pyx_codeobj__80;
static PyObject *__pyx_codeobj__82;
static PyObject *__pyx_codeobj__83;
static PyObject *__pyx_codeobj__84;
static PyObject *__pyx_codeobj__86;
static PyObject *__pyx_codeobj__88;
static PyObject *__pyx_codeobj__90;
static PyObject *__pyx_codeobj__92;
static PyObject *__pyx_codeobj__94;
static PyObject *__pyx_codeobj__96;
static PyObject *__pyx_codeobj__98;
static PyObject *__pyx_codeobj__99;
static PyObject *__pyx_codeobj__101;
static PyObject *__pyx_codeobj__102;
static PyObject *__pyx_codeobj__104;
static PyObject *__pyx_codeobj__105;
static PyObject *__pyx_codeobj__107;
static PyObject *__pyx_codeobj__108;
static PyObject *__pyx_codeobj__110;
static PyObject *__pyx_codeobj__111;
static PyObject *__pyx_codeobj__113;
static PyObject *__pyx_codeobj__114;
static PyObject *__pyx_codeobj__116;
static PyObject *__pyx_codeobj__117;
static PyObject *__pyx_codeobj__119;
static PyObject *__pyx_codeobj__120;
static PyObject *__pyx_codeobj__122;
static PyObject *__pyx_codeobj__123;
static PyObject *__pyx_codeobj__125;
static PyObject *__pyx_codeobj__126;
static PyObject *__pyx_codeobj__128;
static PyObject *__pyx_codeobj__129;
static PyObject *__pyx_codeobj__131;
static PyObject *__pyx_codeobj__132;
static PyObject *__pyx_codeobj__134;
static PyObject *__pyx_codeobj__135;
static PyObject *__pyx_codeobj__137;
static PyObject *__pyx_codeobj__138;
static PyObject *__pyx_codeobj__140;
static PyObject *__pyx_codeobj__141;
static PyObject *__pyx_codeobj__143;
static PyObject *__pyx_codeobj__144;
static PyObject *__pyx_codeobj__146;
static PyObject *__pyx_codeobj__147;
static PyObject *__pyx_codeobj__149;
static PyObject *__pyx_codeobj__150;
static PyObject *__pyx_codeobj__152;
static PyObject *__pyx_codeobj__153;
static PyObject *__pyx_codeobj__155;
static PyObject *__pyx_codeobj__156;
static PyObject *__pyx_codeobj__158;
static PyObject *__pyx_codeobj__159;
static PyObject *__pyx_codeobj__161;
static PyObject *__pyx_codeobj__162;
static PyObject *__pyx_codeobj__164;
static PyObject *__pyx_codeobj__165;
static PyObject *__pyx_codeobj__167;
static PyObject *__pyx_codeobj__168;
static PyObject *__pyx_codeobj__170;
static PyObject *__pyx_codeobj__171;
static PyObject *__pyx_codeobj__173;
static PyObject *__pyx_codeobj__174;
static PyObject *__pyx_codeobj__176;
static PyObject *__pyx_codeobj__177;
static PyObject *__pyx_codeobj__179;
static PyObject *__pyx_codeobj__180;
static PyObject *__pyx_codeobj__182;
static PyObject *__pyx_codeobj__183;
static PyObject *__pyx_codeobj__185;
static PyObject *__pyx_codeobj__186;
static PyObject *__pyx_codeobj__188;
static PyObject *__pyx_codeobj__189;
static PyObject *__pyx_codeobj__191;

/* "pyfiles/lib/cyarma.pyx":208
 * ##### Tools to convert numpy arrays to armadillo arrays ######
 * #mat (doubles)
 * cdef mat * numpy_to_mat(np.ndarray[np.double_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")
 */

static arma::mat *__pyx_f_19HFS_CythonGenerated_numpy_to_mat(PyArrayObject *__pyx_v_X) {
  arma::mat *__pyx_v_aR_p;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_X;
  __Pyx_Buffer __pyx_pybuffer_X;
  arma::mat *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("numpy_to_mat", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_X);
  __pyx_pybuffer_X.pybuffer.buf = NULL;
  __pyx_pybuffer_X.refcount = 0;
  __pyx_pybuffernd_X.data = NULL;
  __pyx_pybuffernd_X.rcbuffer = &__pyx_pybuffer_X;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 208, __pyx_L1_error)
  }
  __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];

  /* "pyfiles/lib/cyarma.pyx":209
 * #mat (doubles)
 * cdef mat * numpy_to_mat(np.ndarray[np.double_t, ndim=2] X):
 *     if not (X.flags.f_contiguous and X.flags.owndata):             # <<<<<<<<<<<<<<
 *         X = X.copy(order="F")
 *     cdef mat *aR_p  = new mat(<double*> X.data, X.shape[0], X.shape[1], False, True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_X), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_f_contiguous); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_1 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_X), __pyx_n_s_flags); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_owndata); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  __pyx_t_4 = ((!__pyx_t_1) != 0);
  if (__pyx_t_4) {

    /* "pyfiles/lib/cyarma.pyx":210
 * cdef mat * numpy_to_mat(np.ndarray[np.double_t, ndim=2] X):
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")             # <<<<<<<<<<<<<<
 *     cdef mat *aR_p  = new mat(<double*> X.data, X.shape[0], X.shape[1], False, True)
 *     return aR_p
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_X), __pyx_n_s_copy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 210, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 210, __pyx_L1_error)
    __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
      __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_7 < 0)) {
        PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        }
      }
      __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 210, __pyx_L1_error)
    }
    __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_X, ((PyArrayObject *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "pyfiles/lib/cyarma.pyx":209
 * #mat (doubles)
 * cdef mat * numpy_to_mat(np.ndarray[np.double_t, ndim=2] X):
 *     if not (X.flags.f_contiguous and X.flags.owndata):             # <<<<<<<<<<<<<<
 *         X = X.copy(order="F")
 *     cdef mat *aR_p  = new mat(<double*> X.data, X.shape[0], X.shape[1], False, True)
 */
  }

  /* "pyfiles/lib/cyarma.pyx":211
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")
 *     cdef mat *aR_p  = new mat(<double*> X.data, X.shape[0], X.shape[1], False, True)             # <<<<<<<<<<<<<<
 *     return aR_p
 * 
 */
  __pyx_v_aR_p = new arma::mat(((double *)__pyx_v_X->data), (__pyx_v_X->dimensions[0]), (__pyx_v_X->dimensions[1]), 0, 1);

  /* "pyfiles/lib/cyarma.pyx":212
 *         X = X.copy(order="F")
 *     cdef mat *aR_p  = new mat(<double*> X.data, X.shape[0], X.shape[1], False, True)
 *     return aR_p             # <<<<<<<<<<<<<<
 * 
 * cdef mat numpy_to_mat_d(np.ndarray[np.double_t, ndim=2] X):
 */
  __pyx_r = __pyx_v_aR_p;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":208
 * ##### Tools to convert numpy arrays to armadillo arrays ######
 * #mat (doubles)
 * cdef mat * numpy_to_mat(np.ndarray[np.double_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_mat", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_X);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":214
 *     return aR_p
 * 
 * cdef mat numpy_to_mat_d(np.ndarray[np.double_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     cdef mat * aR_p = numpy_to_mat(X)
 *     cdef mat aR = deref(aR_p)
 */

static arma::mat __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(PyArrayObject *__pyx_v_X) {
  arma::mat *__pyx_v_aR_p;
  arma::mat __pyx_v_aR;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_X;
  __Pyx_Buffer __pyx_pybuffer_X;
  arma::mat __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numpy_to_mat_d", 0);
  __pyx_pybuffer_X.pybuffer.buf = NULL;
  __pyx_pybuffer_X.refcount = 0;
  __pyx_pybuffernd_X.data = NULL;
  __pyx_pybuffernd_X.rcbuffer = &__pyx_pybuffer_X;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 214, __pyx_L1_error)
  }
  __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];

  /* "pyfiles/lib/cyarma.pyx":215
 * 
 * cdef mat numpy_to_mat_d(np.ndarray[np.double_t, ndim=2] X):
 *     cdef mat * aR_p = numpy_to_mat(X)             # <<<<<<<<<<<<<<
 *     cdef mat aR = deref(aR_p)
 *     del aR_p
 */
  __pyx_v_aR_p = __pyx_f_19HFS_CythonGenerated_numpy_to_mat(((PyArrayObject *)__pyx_v_X));

  /* "pyfiles/lib/cyarma.pyx":216
 * cdef mat numpy_to_mat_d(np.ndarray[np.double_t, ndim=2] X):
 *     cdef mat * aR_p = numpy_to_mat(X)
 *     cdef mat aR = deref(aR_p)             # <<<<<<<<<<<<<<
 *     del aR_p
 *     return aR
 */
  __pyx_v_aR = (*__pyx_v_aR_p);

  /* "pyfiles/lib/cyarma.pyx":217
 *     cdef mat * aR_p = numpy_to_mat(X)
 *     cdef mat aR = deref(aR_p)
 *     del aR_p             # <<<<<<<<<<<<<<
 *     return aR
 * 
 */
  delete __pyx_v_aR_p;

  /* "pyfiles/lib/cyarma.pyx":218
 *     cdef mat aR = deref(aR_p)
 *     del aR_p
 *     return aR             # <<<<<<<<<<<<<<
 * 
 * #umat (long long unsigned int)
 */
  __pyx_r = __pyx_v_aR;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":214
 *     return aR_p
 * 
 * cdef mat numpy_to_mat_d(np.ndarray[np.double_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     cdef mat * aR_p = numpy_to_mat(X)
 *     cdef mat aR = deref(aR_p)
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_mat_d", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":221
 * 
 * #umat (long long unsigned int)
 * cdef umat * numpy_to_umat(np.ndarray[np.uint64_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")
 */

static arma::umat *__pyx_f_19HFS_CythonGenerated_numpy_to_umat(PyArrayObject *__pyx_v_X) {
  arma::umat *__pyx_v_aR_p;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_X;
  __Pyx_Buffer __pyx_pybuffer_X;
  arma::umat *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("numpy_to_umat", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_X);
  __pyx_pybuffer_X.pybuffer.buf = NULL;
  __pyx_pybuffer_X.refcount = 0;
  __pyx_pybuffernd_X.data = NULL;
  __pyx_pybuffernd_X.rcbuffer = &__pyx_pybuffer_X;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 221, __pyx_L1_error)
  }
  __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];

  /* "pyfiles/lib/cyarma.pyx":222
 * #umat (long long unsigned int)
 * cdef umat * numpy_to_umat(np.ndarray[np.uint64_t, ndim=2] X):
 *     if not (X.flags.f_contiguous and X.flags.owndata):             # <<<<<<<<<<<<<<
 *         X = X.copy(order="F")
 *     cdef umat *aR_p  = new umat(<long long unsigned int*> X.data, X.shape[0], X.shape[1], False, True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_X), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_f_contiguous); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_1 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_X), __pyx_n_s_flags); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_owndata); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  __pyx_t_4 = ((!__pyx_t_1) != 0);
  if (__pyx_t_4) {

    /* "pyfiles/lib/cyarma.pyx":223
 * cdef umat * numpy_to_umat(np.ndarray[np.uint64_t, ndim=2] X):
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")             # <<<<<<<<<<<<<<
 *     cdef umat *aR_p  = new umat(<long long unsigned int*> X.data, X.shape[0], X.shape[1], False, True)
 *     return aR_p
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_X), __pyx_n_s_copy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 223, __pyx_L1_error)
    __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
      __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_7 < 0)) {
        PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        }
      }
      __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 223, __pyx_L1_error)
    }
    __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_X, ((PyArrayObject *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "pyfiles/lib/cyarma.pyx":222
 * #umat (long long unsigned int)
 * cdef umat * numpy_to_umat(np.ndarray[np.uint64_t, ndim=2] X):
 *     if not (X.flags.f_contiguous and X.flags.owndata):             # <<<<<<<<<<<<<<
 *         X = X.copy(order="F")
 *     cdef umat *aR_p  = new umat(<long long unsigned int*> X.data, X.shape[0], X.shape[1], False, True)
 */
  }

  /* "pyfiles/lib/cyarma.pyx":224
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")
 *     cdef umat *aR_p  = new umat(<long long unsigned int*> X.data, X.shape[0], X.shape[1], False, True)             # <<<<<<<<<<<<<<
 *     return aR_p
 * 
 */
  __pyx_v_aR_p = new arma::umat(((unsigned PY_LONG_LONG *)__pyx_v_X->data), (__pyx_v_X->dimensions[0]), (__pyx_v_X->dimensions[1]), 0, 1);

  /* "pyfiles/lib/cyarma.pyx":225
 *         X = X.copy(order="F")
 *     cdef umat *aR_p  = new umat(<long long unsigned int*> X.data, X.shape[0], X.shape[1], False, True)
 *     return aR_p             # <<<<<<<<<<<<<<
 * 
 * cdef umat numpy_to_umat_d(np.ndarray[np.uint64_t, ndim=2] X):
 */
  __pyx_r = __pyx_v_aR_p;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":221
 * 
 * #umat (long long unsigned int)
 * cdef umat * numpy_to_umat(np.ndarray[np.uint64_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     if not (X.flags.f_contiguous and X.flags.owndata):
 *         X = X.copy(order="F")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_umat", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_X);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":227
 *     return aR_p
 * 
 * cdef umat numpy_to_umat_d(np.ndarray[np.uint64_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     cdef umat * aR_p = numpy_to_umat(X)
 *     cdef umat aR = deref(aR_p)
 */

static arma::umat __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(PyArrayObject *__pyx_v_X) {
  arma::umat *__pyx_v_aR_p;
  arma::umat __pyx_v_aR;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_X;
  __Pyx_Buffer __pyx_pybuffer_X;
  arma::umat __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numpy_to_umat_d", 0);
  __pyx_pybuffer_X.pybuffer.buf = NULL;
  __pyx_pybuffer_X.refcount = 0;
  __pyx_pybuffernd_X.data = NULL;
  __pyx_pybuffernd_X.rcbuffer = &__pyx_pybuffer_X;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) __PYX_ERR(0, 227, __pyx_L1_error)
  }
  __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];

  /* "pyfiles/lib/cyarma.pyx":228
 * 
 * cdef umat numpy_to_umat_d(np.ndarray[np.uint64_t, ndim=2] X):
 *     cdef umat * aR_p = numpy_to_umat(X)             # <<<<<<<<<<<<<<
 *     cdef umat aR = deref(aR_p)
 *     del aR_p
 */
  __pyx_v_aR_p = __pyx_f_19HFS_CythonGenerated_numpy_to_umat(((PyArrayObject *)__pyx_v_X));

  /* "pyfiles/lib/cyarma.pyx":229
 * cdef umat numpy_to_umat_d(np.ndarray[np.uint64_t, ndim=2] X):
 *     cdef umat * aR_p = numpy_to_umat(X)
 *     cdef umat aR = deref(aR_p)             # <<<<<<<<<<<<<<
 *     del aR_p
 *     return aR
 */
  __pyx_v_aR = (*__pyx_v_aR_p);

  /* "pyfiles/lib/cyarma.pyx":230
 *     cdef umat * aR_p = numpy_to_umat(X)
 *     cdef umat aR = deref(aR_p)
 *     del aR_p             # <<<<<<<<<<<<<<
 *     return aR
 * 
 */
  delete __pyx_v_aR_p;

  /* "pyfiles/lib/cyarma.pyx":231
 *     cdef umat aR = deref(aR_p)
 *     del aR_p
 *     return aR             # <<<<<<<<<<<<<<
 * 
 * #cube
 */
  __pyx_r = __pyx_v_aR;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":227
 *     return aR_p
 * 
 * cdef umat numpy_to_umat_d(np.ndarray[np.uint64_t, ndim=2] X):             # <<<<<<<<<<<<<<
 *     cdef umat * aR_p = numpy_to_umat(X)
 *     cdef umat aR = deref(aR_p)
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_umat_d", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":248
 * 
 * #vec
 * cdef vec * numpy_to_vec(np.ndarray[np.double_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()
 */

static arma::vec *__pyx_f_19HFS_CythonGenerated_numpy_to_vec(PyArrayObject *__pyx_v_x) {
  arma::vec *__pyx_v_ar_p;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  arma::vec *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("numpy_to_vec", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_x);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 248, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "pyfiles/lib/cyarma.pyx":249
 * #vec
 * cdef vec * numpy_to_vec(np.ndarray[np.double_t, ndim=1] x):
 *     if not (x.flags.f_contiguous and x.flags.owndata):             # <<<<<<<<<<<<<<
 *         x = x.copy()
 *     cdef vec *ar_p = new vec(<double*> x.data, x.shape[0], False, True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_f_contiguous); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_1 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_flags); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_owndata); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  __pyx_t_4 = ((!__pyx_t_1) != 0);
  if (__pyx_t_4) {

    /* "pyfiles/lib/cyarma.pyx":250
 * cdef vec * numpy_to_vec(np.ndarray[np.double_t, ndim=1] x):
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()             # <<<<<<<<<<<<<<
 *     cdef vec *ar_p = new vec(<double*> x.data, x.shape[0], False, True)
 *     return ar_p
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 250, __pyx_L1_error)
    __pyx_t_6 = ((PyArrayObject *)__pyx_t_2);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
      __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_7 < 0)) {
        PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        }
      }
      __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 250, __pyx_L1_error)
    }
    __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_x, ((PyArrayObject *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "pyfiles/lib/cyarma.pyx":249
 * #vec
 * cdef vec * numpy_to_vec(np.ndarray[np.double_t, ndim=1] x):
 *     if not (x.flags.f_contiguous and x.flags.owndata):             # <<<<<<<<<<<<<<
 *         x = x.copy()
 *     cdef vec *ar_p = new vec(<double*> x.data, x.shape[0], False, True)
 */
  }

  /* "pyfiles/lib/cyarma.pyx":251
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()
 *     cdef vec *ar_p = new vec(<double*> x.data, x.shape[0], False, True)             # <<<<<<<<<<<<<<
 *     return ar_p
 * 
 */
  __pyx_v_ar_p = new arma::vec(((double *)__pyx_v_x->data), (__pyx_v_x->dimensions[0]), 0, 1);

  /* "pyfiles/lib/cyarma.pyx":252
 *         x = x.copy()
 *     cdef vec *ar_p = new vec(<double*> x.data, x.shape[0], False, True)
 *     return ar_p             # <<<<<<<<<<<<<<
 * 
 * cdef vec numpy_to_vec_d(np.ndarray[np.double_t, ndim=1] x):
 */
  __pyx_r = __pyx_v_ar_p;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":248
 * 
 * #vec
 * cdef vec * numpy_to_vec(np.ndarray[np.double_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_vec", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":254
 *     return ar_p
 * 
 * cdef vec numpy_to_vec_d(np.ndarray[np.double_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     cdef vec *ar_p = numpy_to_vec(x)
 *     cdef vec ar = deref(ar_p)
 */

static arma::vec __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(PyArrayObject *__pyx_v_x) {
  arma::vec *__pyx_v_ar_p;
  arma::vec __pyx_v_ar;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  arma::vec __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numpy_to_vec_d", 0);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 254, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "pyfiles/lib/cyarma.pyx":255
 * 
 * cdef vec numpy_to_vec_d(np.ndarray[np.double_t, ndim=1] x):
 *     cdef vec *ar_p = numpy_to_vec(x)             # <<<<<<<<<<<<<<
 *     cdef vec ar = deref(ar_p)
 *     del ar_p
 */
  __pyx_v_ar_p = __pyx_f_19HFS_CythonGenerated_numpy_to_vec(((PyArrayObject *)__pyx_v_x));

  /* "pyfiles/lib/cyarma.pyx":256
 * cdef vec numpy_to_vec_d(np.ndarray[np.double_t, ndim=1] x):
 *     cdef vec *ar_p = numpy_to_vec(x)
 *     cdef vec ar = deref(ar_p)             # <<<<<<<<<<<<<<
 *     del ar_p
 *     return ar
 */
  __pyx_v_ar = (*__pyx_v_ar_p);

  /* "pyfiles/lib/cyarma.pyx":257
 *     cdef vec *ar_p = numpy_to_vec(x)
 *     cdef vec ar = deref(ar_p)
 *     del ar_p             # <<<<<<<<<<<<<<
 *     return ar
 * 
 */
  delete __pyx_v_ar_p;

  /* "pyfiles/lib/cyarma.pyx":258
 *     cdef vec ar = deref(ar_p)
 *     del ar_p
 *     return ar             # <<<<<<<<<<<<<<
 * 
 * #uvec
 */
  __pyx_r = __pyx_v_ar;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":254
 *     return ar_p
 * 
 * cdef vec numpy_to_vec_d(np.ndarray[np.double_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     cdef vec *ar_p = numpy_to_vec(x)
 *     cdef vec ar = deref(ar_p)
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_vec_d", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":261
 * 
 * #uvec
 * cdef uvec * numpy_to_uvec(np.ndarray[np.uint64_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()
 */

static arma::uvec *__pyx_f_19HFS_CythonGenerated_numpy_to_uvec(PyArrayObject *__pyx_v_x) {
  arma::uvec *__pyx_v_ar_p;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  arma::uvec *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("numpy_to_uvec", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_x);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 261, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "pyfiles/lib/cyarma.pyx":262
 * #uvec
 * cdef uvec * numpy_to_uvec(np.ndarray[np.uint64_t, ndim=1] x):
 *     if not (x.flags.f_contiguous and x.flags.owndata):             # <<<<<<<<<<<<<<
 *         x = x.copy()
 *     cdef uvec *ar_p = new uvec(<long long unsigned int*> x.data, x.shape[0], False, True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_f_contiguous); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
  } else {
    __pyx_t_1 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_flags); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_owndata); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  __pyx_t_4 = ((!__pyx_t_1) != 0);
  if (__pyx_t_4) {

    /* "pyfiles/lib/cyarma.pyx":263
 * cdef uvec * numpy_to_uvec(np.ndarray[np.uint64_t, ndim=1] x):
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()             # <<<<<<<<<<<<<<
 *     cdef uvec *ar_p = new uvec(<long long unsigned int*> x.data, x.shape[0], False, True)
 *     return ar_p
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_x), __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 263, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 263, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 263, __pyx_L1_error)
    __pyx_t_6 = ((PyArrayObject *)__pyx_t_2);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
      __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_7 < 0)) {
        PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
        }
      }
      __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 263, __pyx_L1_error)
    }
    __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_x, ((PyArrayObject *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "pyfiles/lib/cyarma.pyx":262
 * #uvec
 * cdef uvec * numpy_to_uvec(np.ndarray[np.uint64_t, ndim=1] x):
 *     if not (x.flags.f_contiguous and x.flags.owndata):             # <<<<<<<<<<<<<<
 *         x = x.copy()
 *     cdef uvec *ar_p = new uvec(<long long unsigned int*> x.data, x.shape[0], False, True)
 */
  }

  /* "pyfiles/lib/cyarma.pyx":264
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()
 *     cdef uvec *ar_p = new uvec(<long long unsigned int*> x.data, x.shape[0], False, True)             # <<<<<<<<<<<<<<
 *     return ar_p
 * 
 */
  __pyx_v_ar_p = new arma::uvec(((unsigned PY_LONG_LONG *)__pyx_v_x->data), (__pyx_v_x->dimensions[0]), 0, 1);

  /* "pyfiles/lib/cyarma.pyx":265
 *         x = x.copy()
 *     cdef uvec *ar_p = new uvec(<long long unsigned int*> x.data, x.shape[0], False, True)
 *     return ar_p             # <<<<<<<<<<<<<<
 * 
 * cdef uvec numpy_to_uvec_d(np.ndarray[np.uint64_t, ndim=1] x):
 */
  __pyx_r = __pyx_v_ar_p;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":261
 * 
 * #uvec
 * cdef uvec * numpy_to_uvec(np.ndarray[np.uint64_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     if not (x.flags.f_contiguous and x.flags.owndata):
 *         x = x.copy()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_uvec", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":267
 *     return ar_p
 * 
 * cdef uvec numpy_to_uvec_d(np.ndarray[np.uint64_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     cdef uvec *ar_p = numpy_to_uvec(x)
 *     cdef uvec ar = deref(ar_p)
 */

static arma::uvec __pyx_f_19HFS_CythonGenerated_numpy_to_uvec_d(PyArrayObject *__pyx_v_x) {
  arma::uvec *__pyx_v_ar_p;
  arma::uvec __pyx_v_ar;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_x;
  __Pyx_Buffer __pyx_pybuffer_x;
  arma::uvec __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("numpy_to_uvec_d", 0);
  __pyx_pybuffer_x.pybuffer.buf = NULL;
  __pyx_pybuffer_x.refcount = 0;
  __pyx_pybuffernd_x.data = NULL;
  __pyx_pybuffernd_x.rcbuffer = &__pyx_pybuffer_x;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_x.rcbuffer->pybuffer, (PyObject*)__pyx_v_x, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 267, __pyx_L1_error)
  }
  __pyx_pybuffernd_x.diminfo[0].strides = __pyx_pybuffernd_x.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_x.diminfo[0].shape = __pyx_pybuffernd_x.rcbuffer->pybuffer.shape[0];

  /* "pyfiles/lib/cyarma.pyx":268
 * 
 * cdef uvec numpy_to_uvec_d(np.ndarray[np.uint64_t, ndim=1] x):
 *     cdef uvec *ar_p = numpy_to_uvec(x)             # <<<<<<<<<<<<<<
 *     cdef uvec ar = deref(ar_p)
 *     del ar_p
 */
  __pyx_v_ar_p = __pyx_f_19HFS_CythonGenerated_numpy_to_uvec(((PyArrayObject *)__pyx_v_x));

  /* "pyfiles/lib/cyarma.pyx":269
 * cdef uvec numpy_to_uvec_d(np.ndarray[np.uint64_t, ndim=1] x):
 *     cdef uvec *ar_p = numpy_to_uvec(x)
 *     cdef uvec ar = deref(ar_p)             # <<<<<<<<<<<<<<
 *     del ar_p
 *     return ar
 */
  __pyx_v_ar = (*__pyx_v_ar_p);

  /* "pyfiles/lib/cyarma.pyx":270
 *     cdef uvec *ar_p = numpy_to_uvec(x)
 *     cdef uvec ar = deref(ar_p)
 *     del ar_p             # <<<<<<<<<<<<<<
 *     return ar
 * 
 */
  delete __pyx_v_ar_p;

  /* "pyfiles/lib/cyarma.pyx":271
 *     cdef uvec ar = deref(ar_p)
 *     del ar_p
 *     return ar             # <<<<<<<<<<<<<<
 * 
 * #### Get subviews #####
 */
  __pyx_r = __pyx_v_ar;
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":267
 *     return ar_p
 * 
 * cdef uvec numpy_to_uvec_d(np.ndarray[np.uint64_t, ndim=1] x):             # <<<<<<<<<<<<<<
 *     cdef uvec *ar_p = numpy_to_uvec(x)
 *     cdef uvec ar = deref(ar_p)
 */

  /* function exit code */
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_WriteUnraisable("HFS_CythonGenerated.numpy_to_uvec_d", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_x.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":301
 * # otherwise. Maybe this can be improved. #######
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.double_t, ndim=2] mat_to_numpy(const mat & X):             # <<<<<<<<<<<<<<
 *     cdef const double * Xptr = X.memptr()
 *     cdef np.ndarray[np.double_t, ndim=2] D
 */

static PyArrayObject *__pyx_f_19HFS_CythonGenerated_mat_to_numpy(arma::mat const &__pyx_v_X) {
  double const *__pyx_v_Xptr;
  PyArrayObject *__pyx_v_D = 0;
  double *__pyx_v_Dptr;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_D;
  __Pyx_Buffer __pyx_pybuffer_D;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  __Pyx_RefNannySetupContext("mat_to_numpy", 0);
  __pyx_pybuffer_D.pybuffer.buf = NULL;
  __pyx_pybuffer_D.refcount = 0;
  __pyx_pybuffernd_D.data = NULL;
  __pyx_pybuffernd_D.rcbuffer = &__pyx_pybuffer_D;

  /* "pyfiles/lib/cyarma.pyx":302
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.double_t, ndim=2] mat_to_numpy(const mat & X):
 *     cdef const double * Xptr = X.memptr()             # <<<<<<<<<<<<<<
 *     cdef np.ndarray[np.double_t, ndim=2] D
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.double, order="F")
 */
  __pyx_v_Xptr = __pyx_v_X.memptr();

  /* "pyfiles/lib/cyarma.pyx":304
 *     cdef const double * Xptr = X.memptr()
 *     cdef np.ndarray[np.double_t, ndim=2] D
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.double, order="F")             # <<<<<<<<<<<<<<
 *     cdef double * Dptr = &D[0,0]
 *     for i in range(X.n_rows*X.n_cols):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_X.n_rows); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_X.n_cols); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_double); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 304, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_v_D, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
    }
    __pyx_pybuffernd_D.diminfo[0].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_D.diminfo[0].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_D.diminfo[1].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_D.diminfo[1].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 304, __pyx_L1_error)
  }
  __pyx_t_6 = 0;
  __pyx_v_D = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "pyfiles/lib/cyarma.pyx":305
 *     cdef np.ndarray[np.double_t, ndim=2] D
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.double, order="F")
 *     cdef double * Dptr = &D[0,0]             # <<<<<<<<<<<<<<
 *     for i in range(X.n_rows*X.n_cols):
 *         Dptr[i] = Xptr[i]
 */
  __pyx_t_11 = 0;
  __pyx_t_12 = 0;
  __pyx_v_Dptr = (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_D.rcbuffer->pybuffer.buf, __pyx_t_11, __pyx_pybuffernd_D.diminfo[0].strides, __pyx_t_12, __pyx_pybuffernd_D.diminfo[1].strides)));

  /* "pyfiles/lib/cyarma.pyx":306
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.double, order="F")
 *     cdef double * Dptr = &D[0,0]
 *     for i in range(X.n_rows*X.n_cols):             # <<<<<<<<<<<<<<
 *         Dptr[i] = Xptr[i]
 *     return D
 */
  __pyx_t_7 = (__pyx_v_X.n_rows * __pyx_v_X.n_cols);
  for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_7; __pyx_t_13+=1) {
    __pyx_v_i = __pyx_t_13;

    /* "pyfiles/lib/cyarma.pyx":307
 *     cdef double * Dptr = &D[0,0]
 *     for i in range(X.n_rows*X.n_cols):
 *         Dptr[i] = Xptr[i]             # <<<<<<<<<<<<<<
 *     return D
 * 
 */
    (__pyx_v_Dptr[__pyx_v_i]) = (__pyx_v_Xptr[__pyx_v_i]);
  }

  /* "pyfiles/lib/cyarma.pyx":308
 *     for i in range(X.n_rows*X.n_cols):
 *         Dptr[i] = Xptr[i]
 *     return D             # <<<<<<<<<<<<<<
 * 
 * @cython.boundscheck(False)
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_D));
  __pyx_r = ((PyArrayObject *)__pyx_v_D);
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":301
 * # otherwise. Maybe this can be improved. #######
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.double_t, ndim=2] mat_to_numpy(const mat & X):             # <<<<<<<<<<<<<<
 *     cdef const double * Xptr = X.memptr()
 *     cdef np.ndarray[np.double_t, ndim=2] D
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.mat_to_numpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_D);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":311
 * 
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.uint64_t, ndim=2] umat_to_numpy(const umat & X):             # <<<<<<<<<<<<<<
 *     cdef const long long unsigned int * Xptr = X.memptr()
 *     cdef np.ndarray[np.uint64_t, ndim=2] D
 */

static PyArrayObject *__pyx_f_19HFS_CythonGenerated_umat_to_numpy(arma::umat const &__pyx_v_X) {
  unsigned PY_LONG_LONG const *__pyx_v_Xptr;
  PyArrayObject *__pyx_v_D = 0;
  __pyx_t_5numpy_uint64_t *__pyx_v_Dptr;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_D;
  __Pyx_Buffer __pyx_pybuffer_D;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_t_13;
  __Pyx_RefNannySetupContext("umat_to_numpy", 0);
  __pyx_pybuffer_D.pybuffer.buf = NULL;
  __pyx_pybuffer_D.refcount = 0;
  __pyx_pybuffernd_D.data = NULL;
  __pyx_pybuffernd_D.rcbuffer = &__pyx_pybuffer_D;

  /* "pyfiles/lib/cyarma.pyx":312
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.uint64_t, ndim=2] umat_to_numpy(const umat & X):
 *     cdef const long long unsigned int * Xptr = X.memptr()             # <<<<<<<<<<<<<<
 *     cdef np.ndarray[np.uint64_t, ndim=2] D
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.uint64, order="F")
 */
  __pyx_v_Xptr = __pyx_v_X.memptr();

  /* "pyfiles/lib/cyarma.pyx":314
 *     cdef const long long unsigned int * Xptr = X.memptr()
 *     cdef np.ndarray[np.uint64_t, ndim=2] D
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.uint64, order="F")             # <<<<<<<<<<<<<<
 *     cdef np.uint64_t* Dptr = &D[0,0]
 *     for i in range(X.n_rows*X.n_cols):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_X.n_rows); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_X.n_cols); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_uint64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 314, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 314, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_v_D, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
    }
    __pyx_pybuffernd_D.diminfo[0].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_D.diminfo[0].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_D.diminfo[1].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_D.diminfo[1].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[1];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 314, __pyx_L1_error)
  }
  __pyx_t_6 = 0;
  __pyx_v_D = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "pyfiles/lib/cyarma.pyx":315
 *     cdef np.ndarray[np.uint64_t, ndim=2] D
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.uint64, order="F")
 *     cdef np.uint64_t* Dptr = &D[0,0]             # <<<<<<<<<<<<<<
 *     for i in range(X.n_rows*X.n_cols):
 *         Dptr[i] = Xptr[i]
 */
  __pyx_t_11 = 0;
  __pyx_t_12 = 0;
  __pyx_v_Dptr = (&(*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_uint64_t *, __pyx_pybuffernd_D.rcbuffer->pybuffer.buf, __pyx_t_11, __pyx_pybuffernd_D.diminfo[0].strides, __pyx_t_12, __pyx_pybuffernd_D.diminfo[1].strides)));

  /* "pyfiles/lib/cyarma.pyx":316
 *     D = np.empty((X.n_rows, X.n_cols), dtype=np.uint64, order="F")
 *     cdef np.uint64_t* Dptr = &D[0,0]
 *     for i in range(X.n_rows*X.n_cols):             # <<<<<<<<<<<<<<
 *         Dptr[i] = Xptr[i]
 *     return D
 */
  __pyx_t_7 = (__pyx_v_X.n_rows * __pyx_v_X.n_cols);
  for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_7; __pyx_t_13+=1) {
    __pyx_v_i = __pyx_t_13;

    /* "pyfiles/lib/cyarma.pyx":317
 *     cdef np.uint64_t* Dptr = &D[0,0]
 *     for i in range(X.n_rows*X.n_cols):
 *         Dptr[i] = Xptr[i]             # <<<<<<<<<<<<<<
 *     return D
 * 
 */
    (__pyx_v_Dptr[__pyx_v_i]) = (__pyx_v_Xptr[__pyx_v_i]);
  }

  /* "pyfiles/lib/cyarma.pyx":318
 *     for i in range(X.n_rows*X.n_cols):
 *         Dptr[i] = Xptr[i]
 *     return D             # <<<<<<<<<<<<<<
 * 
 * @cython.boundscheck(False)
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_D));
  __pyx_r = ((PyArrayObject *)__pyx_v_D);
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":311
 * 
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.uint64_t, ndim=2] umat_to_numpy(const umat & X):             # <<<<<<<<<<<<<<
 *     cdef const long long unsigned int * Xptr = X.memptr()
 *     cdef np.ndarray[np.uint64_t, ndim=2] D
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.umat_to_numpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_D);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":321
 * 
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.double_t, ndim=1] vec_to_numpy(const vec & X):             # <<<<<<<<<<<<<<
 *     cdef const double * Xptr = X.memptr()
 * 
 */

static PyArrayObject *__pyx_f_19HFS_CythonGenerated_vec_to_numpy(arma::vec const &__pyx_v_X) {
  double const *__pyx_v_Xptr;
  PyArrayObject *__pyx_v_D = 0;
  double *__pyx_v_Dptr;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_D;
  __Pyx_Buffer __pyx_pybuffer_D;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("vec_to_numpy", 0);
  __pyx_pybuffer_D.pybuffer.buf = NULL;
  __pyx_pybuffer_D.refcount = 0;
  __pyx_pybuffernd_D.data = NULL;
  __pyx_pybuffernd_D.rcbuffer = &__pyx_pybuffer_D;

  /* "pyfiles/lib/cyarma.pyx":322
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.double_t, ndim=1] vec_to_numpy(const vec & X):
 *     cdef const double * Xptr = X.memptr()             # <<<<<<<<<<<<<<
 * 
 *     cdef np.ndarray[np.double_t, ndim=1] D
 */
  __pyx_v_Xptr = __pyx_v_X.memptr();

  /* "pyfiles/lib/cyarma.pyx":325
 * 
 *     cdef np.ndarray[np.double_t, ndim=1] D
 *     D = np.empty(X.n_elem, dtype=np.double)             # <<<<<<<<<<<<<<
 *     cdef double * Dptr = <double*> D.data
 *     for i in range(X.n_elem):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_X.n_elem); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_double); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 325, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_v_D, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
    }
    __pyx_pybuffernd_D.diminfo[0].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_D.diminfo[0].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 325, __pyx_L1_error)
  }
  __pyx_t_6 = 0;
  __pyx_v_D = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "pyfiles/lib/cyarma.pyx":326
 *     cdef np.ndarray[np.double_t, ndim=1] D
 *     D = np.empty(X.n_elem, dtype=np.double)
 *     cdef double * Dptr = <double*> D.data             # <<<<<<<<<<<<<<
 *     for i in range(X.n_elem):
 *         Dptr[i] = Xptr[i]
 */
  __pyx_v_Dptr = ((double *)__pyx_v_D->data);

  /* "pyfiles/lib/cyarma.pyx":327
 *     D = np.empty(X.n_elem, dtype=np.double)
 *     cdef double * Dptr = <double*> D.data
 *     for i in range(X.n_elem):             # <<<<<<<<<<<<<<
 *         Dptr[i] = Xptr[i]
 *     return D
 */
  __pyx_t_7 = __pyx_v_X.n_elem;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_7; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "pyfiles/lib/cyarma.pyx":328
 *     cdef double * Dptr = <double*> D.data
 *     for i in range(X.n_elem):
 *         Dptr[i] = Xptr[i]             # <<<<<<<<<<<<<<
 *     return D
 * 
 */
    (__pyx_v_Dptr[__pyx_v_i]) = (__pyx_v_Xptr[__pyx_v_i]);
  }

  /* "pyfiles/lib/cyarma.pyx":329
 *     for i in range(X.n_elem):
 *         Dptr[i] = Xptr[i]
 *     return D             # <<<<<<<<<<<<<<
 * 
 * @cython.boundscheck(False)
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_D));
  __pyx_r = ((PyArrayObject *)__pyx_v_D);
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":321
 * 
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.double_t, ndim=1] vec_to_numpy(const vec & X):             # <<<<<<<<<<<<<<
 *     cdef const double * Xptr = X.memptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.vec_to_numpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_D);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyfiles/lib/cyarma.pyx":332
 * 
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.uint64_t, ndim=1] uvec_to_numpy(const uvec & X):             # <<<<<<<<<<<<<<
 *     cdef const long long unsigned int * Xptr = X.memptr()
 * 
 */

static PyArrayObject *__pyx_f_19HFS_CythonGenerated_uvec_to_numpy(arma::uvec const &__pyx_v_X) {
  unsigned PY_LONG_LONG const *__pyx_v_Xptr;
  PyArrayObject *__pyx_v_D = 0;
  unsigned PY_LONG_LONG *__pyx_v_Dptr;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_D;
  __Pyx_Buffer __pyx_pybuffer_D;
  PyArrayObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("uvec_to_numpy", 0);
  __pyx_pybuffer_D.pybuffer.buf = NULL;
  __pyx_pybuffer_D.refcount = 0;
  __pyx_pybuffernd_D.data = NULL;
  __pyx_pybuffernd_D.rcbuffer = &__pyx_pybuffer_D;

  /* "pyfiles/lib/cyarma.pyx":333
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.uint64_t, ndim=1] uvec_to_numpy(const uvec & X):
 *     cdef const long long unsigned int * Xptr = X.memptr()             # <<<<<<<<<<<<<<
 * 
 *     cdef np.ndarray[np.uint64_t, ndim=1] D
 */
  __pyx_v_Xptr = __pyx_v_X.memptr();

  /* "pyfiles/lib/cyarma.pyx":336
 * 
 *     cdef np.ndarray[np.uint64_t, ndim=1] D
 *     D = np.empty(X.n_elem, dtype=np.uint64)             # <<<<<<<<<<<<<<
 *     cdef long long unsigned int * Dptr = <long long unsigned int*> D.data
 *     for i in range(X.n_elem):
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_X.n_elem); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uint64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 336, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
    __pyx_t_7 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_7 < 0)) {
      PyErr_Fetch(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_v_D, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_8, __pyx_t_9, __pyx_t_10);
      }
    }
    __pyx_pybuffernd_D.diminfo[0].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_D.diminfo[0].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 336, __pyx_L1_error)
  }
  __pyx_t_6 = 0;
  __pyx_v_D = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "pyfiles/lib/cyarma.pyx":337
 *     cdef np.ndarray[np.uint64_t, ndim=1] D
 *     D = np.empty(X.n_elem, dtype=np.uint64)
 *     cdef long long unsigned int * Dptr = <long long unsigned int*> D.data             # <<<<<<<<<<<<<<
 *     for i in range(X.n_elem):
 *         Dptr[i] = Xptr[i]
 */
  __pyx_v_Dptr = ((unsigned PY_LONG_LONG *)__pyx_v_D->data);

  /* "pyfiles/lib/cyarma.pyx":338
 *     D = np.empty(X.n_elem, dtype=np.uint64)
 *     cdef long long unsigned int * Dptr = <long long unsigned int*> D.data
 *     for i in range(X.n_elem):             # <<<<<<<<<<<<<<
 *         Dptr[i] = Xptr[i]
 *     return D
 */
  __pyx_t_7 = __pyx_v_X.n_elem;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_7; __pyx_t_11+=1) {
    __pyx_v_i = __pyx_t_11;

    /* "pyfiles/lib/cyarma.pyx":339
 *     cdef long long unsigned int * Dptr = <long long unsigned int*> D.data
 *     for i in range(X.n_elem):
 *         Dptr[i] = Xptr[i]             # <<<<<<<<<<<<<<
 *     return D
 * 
 */
    (__pyx_v_Dptr[__pyx_v_i]) = (__pyx_v_Xptr[__pyx_v_i]);
  }

  /* "pyfiles/lib/cyarma.pyx":340
 *     for i in range(X.n_elem):
 *         Dptr[i] = Xptr[i]
 *     return D             # <<<<<<<<<<<<<<
 * 
 * ### A few wrappers for much needed numpy linalg functionality using armadillo
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_D));
  __pyx_r = ((PyArrayObject *)__pyx_v_D);
  goto __pyx_L0;

  /* "pyfiles/lib/cyarma.pyx":332
 * 
 * @cython.boundscheck(False)
 * cdef np.ndarray[np.uint64_t, ndim=1] uvec_to_numpy(const uvec & X):             # <<<<<<<<<<<<<<
 *     cdef const long long unsigned int * Xptr = X.memptr()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.uvec_to_numpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_D);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":93
 * #                                                                               #
 * #################################################################################
 * def py_f2D(y):             # <<<<<<<<<<<<<<
 *     if y <= 1.0:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_1py_f2D(PyObject *__pyx_self, PyObject *__pyx_v_y); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_1py_f2D = {"py_f2D", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_1py_f2D, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_1py_f2D(PyObject *__pyx_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_f2D (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_py_f2D(__pyx_self, ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_py_f2D(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("py_f2D", 0);

  /* "HFS_CythonGenerated.pyx":94
 * #################################################################################
 * def py_f2D(y):
 *     if y <= 1.0:             # <<<<<<<<<<<<<<
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 *         return sp.ellipe(y*y)
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_float_1_0, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 94, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 94, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "HFS_CythonGenerated.pyx":96
 *     if y <= 1.0:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 *         return sp.ellipe(y*y)             # <<<<<<<<<<<<<<
 *     else:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_sp); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 96, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ellipe); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 96, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_y, __pyx_v_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 96, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 96, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 96, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 96, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "HFS_CythonGenerated.pyx":94
 * #################################################################################
 * def py_f2D(y):
 *     if y <= 1.0:             # <<<<<<<<<<<<<<
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 *         return sp.ellipe(y*y)
 */
  }

  /* "HFS_CythonGenerated.pyx":99
 *     else:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 *         x = 1.0 / y             # <<<<<<<<<<<<<<
 *         return y * (sp.ellipe(x*x) - (1.0 - x*x) * sp.ellipk(x*x))
 * 
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyFloat_DivideCObj(__pyx_float_1_0, __pyx_v_y, 1.0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 99, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "HFS_CythonGenerated.pyx":100
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 *         x = 1.0 / y
 *         return y * (sp.ellipe(x*x) - (1.0 - x*x) * sp.ellipk(x*x))             # <<<<<<<<<<<<<<
 * 
 * def py_f3D(y):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_sp); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_ellipe); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_v_x, __pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 100, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 100, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 100, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Multiply(__pyx_v_x, __pyx_v_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_0, __pyx_t_6, 1.0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_sp); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_ellipk); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_v_x, __pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 100, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_6);
    } else {
      __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 100, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 100, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_Subtract(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_y, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "HFS_CythonGenerated.pyx":93
 * #                                                                               #
 * #################################################################################
 * def py_f2D(y):             # <<<<<<<<<<<<<<
 *     if y <= 1.0:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_f2D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":102
 *         return y * (sp.ellipe(x*x) - (1.0 - x*x) * sp.ellipk(x*x))
 * 
 * def py_f3D(y):             # <<<<<<<<<<<<<<
 *     if y < 10e-10:
 *         return 1.0
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_3py_f3D(PyObject *__pyx_self, PyObject *__pyx_v_y); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_3py_f3D = {"py_f3D", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_3py_f3D, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_3py_f3D(PyObject *__pyx_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_f3D (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_2py_f3D(__pyx_self, ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_2py_f3D(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("py_f3D", 0);

  /* "HFS_CythonGenerated.pyx":103
 * 
 * def py_f3D(y):
 *     if y < 10e-10:             # <<<<<<<<<<<<<<
 *         return 1.0
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_float_10eneg_10, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 103, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "HFS_CythonGenerated.pyx":104
 * def py_f3D(y):
 *     if y < 10e-10:
 *         return 1.0             # <<<<<<<<<<<<<<
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_float_1_0);
    __pyx_r = __pyx_float_1_0;
    goto __pyx_L0;

    /* "HFS_CythonGenerated.pyx":103
 * 
 * def py_f3D(y):
 *     if y < 10e-10:             # <<<<<<<<<<<<<<
 *         return 1.0
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 */
  }

  /* "HFS_CythonGenerated.pyx":105
 *     if y < 10e-10:
 *         return 1.0
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))             # <<<<<<<<<<<<<<
 * 
 * def py_analytic_exch(k):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_y, __pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_t_1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_int_4, __pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_math); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_log); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_AddCObj(__pyx_int_1, __pyx_v_y, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_y, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Absolute(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyFloat_AddCObj(__pyx_float_0_5, __pyx_t_5, 0.5, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":102
 *         return y * (sp.ellipe(x*x) - (1.0 - x*x) * sp.ellipk(x*x))
 * 
 * def py_f3D(y):             # <<<<<<<<<<<<<<
 *     if y < 10e-10:
 *         return 1.0
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_f3D", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":107
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 * 
 * def py_analytic_exch(k):             # <<<<<<<<<<<<<<
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_5py_analytic_exch(PyObject *__pyx_self, PyObject *__pyx_v_k); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_5py_analytic_exch = {"py_analytic_exch", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_5py_analytic_exch, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_5py_analytic_exch(PyObject *__pyx_self, PyObject *__pyx_v_k) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_analytic_exch (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_4py_analytic_exch(__pyx_self, ((PyObject *)__pyx_v_k));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_4py_analytic_exch(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_k) {
  PyObject *__pyx_v_const = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("py_analytic_exch", 0);

  /* "HFS_CythonGenerated.pyx":108
 * 
 * def py_analytic_exch(k):
 *     const = -2.0 * get_kf() / math.pi             # <<<<<<<<<<<<<<
 *     if get_ndim() == 2:
 *         return const * py_f2D(k / get_kf())
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 108, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 108, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_neg_2_0, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_math); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_pi); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_const = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":109
 * def py_analytic_exch(k):
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:             # <<<<<<<<<<<<<<
 *         return const * py_f2D(k / get_kf())
 *     elif get_ndim() == 3:
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 109, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 109, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 109, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "HFS_CythonGenerated.pyx":110
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:
 *         return const * py_f2D(k / get_kf())             # <<<<<<<<<<<<<<
 *     elif get_ndim() == 3:
 *         return const * py_f3D(k / get_kf())
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_py_f2D); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 110, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 110, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_v_k, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_2) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 110, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 110, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 110, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_const, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "HFS_CythonGenerated.pyx":109
 * def py_analytic_exch(k):
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:             # <<<<<<<<<<<<<<
 *         return const * py_f2D(k / get_kf())
 *     elif get_ndim() == 3:
 */
  }

  /* "HFS_CythonGenerated.pyx":111
 *     if get_ndim() == 2:
 *         return const * py_f2D(k / get_kf())
 *     elif get_ndim() == 3:             # <<<<<<<<<<<<<<
 *         return const * py_f3D(k / get_kf())
 * 
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 111, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 111, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "HFS_CythonGenerated.pyx":112
 *         return const * py_f2D(k / get_kf())
 *     elif get_ndim() == 3:
 *         return const * py_f3D(k / get_kf())             # <<<<<<<<<<<<<<
 * 
 * def py_analytic_energy(k):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_py_f3D); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_2) {
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 112, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 112, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_v_k, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 112, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 112, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 112, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_const, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "HFS_CythonGenerated.pyx":111
 *     if get_ndim() == 2:
 *         return const * py_f2D(k / get_kf())
 *     elif get_ndim() == 3:             # <<<<<<<<<<<<<<
 *         return const * py_f3D(k / get_kf())
 * 
 */
  }

  /* "HFS_CythonGenerated.pyx":107
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 * 
 * def py_analytic_exch(k):             # <<<<<<<<<<<<<<
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_analytic_exch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_const);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":114
 *         return const * py_f3D(k / get_kf())
 * 
 * def py_analytic_energy(k):             # <<<<<<<<<<<<<<
 *     x = np.linalg.norm(k)  #works on k of any dimension
 *     return (x*x / 2.0) + py_analytic_exch(x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_7py_analytic_energy(PyObject *__pyx_self, PyObject *__pyx_v_k); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_7py_analytic_energy = {"py_analytic_energy", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_7py_analytic_energy, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_7py_analytic_energy(PyObject *__pyx_self, PyObject *__pyx_v_k) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_analytic_energy (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_6py_analytic_energy(__pyx_self, ((PyObject *)__pyx_v_k));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_6py_analytic_energy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_k) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("py_analytic_energy", 0);

  /* "HFS_CythonGenerated.pyx":115
 * 
 * def py_analytic_energy(k):
 *     x = np.linalg.norm(k)  #works on k of any dimension             # <<<<<<<<<<<<<<
 *     return (x*x / 2.0) + py_analytic_exch(x)
 * 
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_linalg); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_norm); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_k); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_k);
    __Pyx_GIVEREF(__pyx_v_k);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_k);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_x = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":116
 * def py_analytic_energy(k):
 *     x = np.linalg.norm(k)  #works on k of any dimension
 *     return (x*x / 2.0) + py_analytic_exch(x)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_x, __pyx_v_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyFloat_DivideObjC(__pyx_t_1, __pyx_float_2_0, 2.0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_py_analytic_exch); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_x);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":114
 *         return const * py_f3D(k / get_kf())
 * 
 * def py_analytic_energy(k):             # <<<<<<<<<<<<<<
 *     x = np.linalg.norm(k)  #works on k of any dimension
 *     return (x*x / 2.0) + py_analytic_exch(x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_analytic_energy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":124
 * #                                                                               #
 * #################################################################################
 * def plot_1stBZ(spec_alpha=0.20):             # <<<<<<<<<<<<<<
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_9plot_1stBZ(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_9plot_1stBZ = {"plot_1stBZ", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_9plot_1stBZ, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_9plot_1stBZ(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_spec_alpha = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("plot_1stBZ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_spec_alpha,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_float_0_20);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_spec_alpha);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "plot_1stBZ") < 0)) __PYX_ERR(1, 124, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_spec_alpha = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("plot_1stBZ", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 124, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.plot_1stBZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_8plot_1stBZ(__pyx_self, __pyx_v_spec_alpha);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_8plot_1stBZ(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_spec_alpha) {
  PyObject *__pyx_v_circle = NULL;
  PyObject *__pyx_v_sqrpoints = NULL;
  PyObject *__pyx_v_square = NULL;
  PyObject *__pyx_v_kvir_y = NULL;
  PyObject *__pyx_v_is_spec = NULL;
  PyObject *__pyx_v_mask = NULL;
  PyObject *__pyx_v_spec_virs = NULL;
  PyObject *__pyx_v_mask2 = NULL;
  PyObject *__pyx_v_active_virs = NULL;
  double __pyx_v_scale;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  __Pyx_RefNannySetupContext("plot_1stBZ", 0);

  /* "HFS_CythonGenerated.pyx":126
 * def plot_1stBZ(spec_alpha=0.20):
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'             # <<<<<<<<<<<<<<
 *     circle = plt.Circle((0, 0), radius=get_kf(), fc='none', linewidth=1)
 *     sqrpoints = [[get_kmax(), get_kmax()]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_ndim); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 126, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 126, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(1, 126, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_Only_2d_is_supported_right_now);
      __PYX_ERR(1, 126, __pyx_L1_error)
    }
  }
  #endif

  /* "HFS_CythonGenerated.pyx":127
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 *     circle = plt.Circle((0, 0), radius=get_kf(), fc='none', linewidth=1)             # <<<<<<<<<<<<<<
 *     sqrpoints = [[get_kmax(), get_kmax()]
 *                 ,[get_kmax(), -get_kmax()]
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Circle); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 127, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 127, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_radius, __pyx_t_3) < 0) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_fc, __pyx_n_s_none) < 0) __PYX_ERR(1, 127, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_linewidth, __pyx_int_1) < 0) __PYX_ERR(1, 127, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__2, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_circle = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "HFS_CythonGenerated.pyx":128
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 *     circle = plt.Circle((0, 0), radius=get_kf(), fc='none', linewidth=1)
 *     sqrpoints = [[get_kmax(), get_kmax()]             # <<<<<<<<<<<<<<
 *                 ,[get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), -get_kmax()]
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 128, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 128, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 128, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":129
 *     circle = plt.Circle((0, 0), radius=get_kf(), fc='none', linewidth=1)
 *     sqrpoints = [[get_kmax(), get_kmax()]
 *                 ,[get_kmax(), -get_kmax()]             # <<<<<<<<<<<<<<
 *                 ,[-get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), get_kmax()]]
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 129, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 129, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 129, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Negative(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":130
 *     sqrpoints = [[get_kmax(), get_kmax()]
 *                 ,[get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), -get_kmax()]             # <<<<<<<<<<<<<<
 *                 ,[-get_kmax(), get_kmax()]]
 *     square =plt.Polygon(sqrpoints, edgecolor=sns.color_palette()[0], fill=None)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 130, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Negative(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 130, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 130, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Negative(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;

  /* "HFS_CythonGenerated.pyx":131
 *                 ,[get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), get_kmax()]]             # <<<<<<<<<<<<<<
 *     square =plt.Polygon(sqrpoints, edgecolor=sns.color_palette()[0], fill=None)
 *     plt.gca().add_patch(circle)
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Negative(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_8) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 131, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;

  /* "HFS_CythonGenerated.pyx":128
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 *     circle = plt.Circle((0, 0), radius=get_kf(), fc='none', linewidth=1)
 *     sqrpoints = [[get_kmax(), get_kmax()]             # <<<<<<<<<<<<<<
 *                 ,[get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), -get_kmax()]
 */
  __pyx_t_6 = PyList_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_6, 3, __pyx_t_7);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_5 = 0;
  __pyx_t_7 = 0;
  __pyx_v_sqrpoints = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "HFS_CythonGenerated.pyx":132
 *                 ,[-get_kmax(), -get_kmax()]
 *                 ,[-get_kmax(), get_kmax()]]
 *     square =plt.Polygon(sqrpoints, edgecolor=sns.color_palette()[0], fill=None)             # <<<<<<<<<<<<<<
 *     plt.gca().add_patch(circle)
 *     plt.gca().add_patch(square)
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_Polygon); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_v_sqrpoints);
  __Pyx_GIVEREF(__pyx_v_sqrpoints);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_sqrpoints);
  __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_sns); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_color_palette); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 132, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 132, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_edgecolor, __pyx_t_2) < 0) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fill, Py_None) < 0) __PYX_ERR(1, 132, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_square = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":133
 *                 ,[-get_kmax(), get_kmax()]]
 *     square =plt.Polygon(sqrpoints, edgecolor=sns.color_palette()[0], fill=None)
 *     plt.gca().add_patch(circle)             # <<<<<<<<<<<<<<
 *     plt.gca().add_patch(square)
 * 
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_gca); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 133, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_add_patch); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_circle); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_INCREF(__pyx_v_circle);
    __Pyx_GIVEREF(__pyx_v_circle);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_circle);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":134
 *     square =plt.Polygon(sqrpoints, edgecolor=sns.color_palette()[0], fill=None)
 *     plt.gca().add_patch(circle)
 *     plt.gca().add_patch(square)             # <<<<<<<<<<<<<<
 * 
 *     # Get 'spectator virtuals'
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_gca); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 134, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_add_patch); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_square); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_INCREF(__pyx_v_square);
    __Pyx_GIVEREF(__pyx_v_square);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_square);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":137
 * 
 *     # Get 'spectator virtuals'
 *     kvir_y = get_kgrid()[get_vir_states()[:, 1]]             # <<<<<<<<<<<<<<
 *     is_spec = np.logical_or((kvir_y > get_kf()), (kvir_y < -get_kf()))
 *     mask = np.where(is_spec)
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 137, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 137, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_vir_states); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 137, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 137, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_GetItem(__pyx_t_5, __pyx_tuple__4); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_GetItem(__pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_kvir_y = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":138
 *     # Get 'spectator virtuals'
 *     kvir_y = get_kgrid()[get_vir_states()[:, 1]]
 *     is_spec = np.logical_or((kvir_y > get_kf()), (kvir_y < -get_kf()))             # <<<<<<<<<<<<<<
 *     mask = np.where(is_spec)
 *     spec_virs = get_kgrid()[get_vir_states()[mask]]
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_logical_or); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 138, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 138, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyObject_RichCompare(__pyx_v_kvir_y, __pyx_t_6, Py_GT); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 138, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 138, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Negative(__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_RichCompare(__pyx_v_kvir_y, __pyx_t_3, Py_LT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_9 = 1;
    }
  }
  __pyx_t_1 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_1, 0+__pyx_t_9, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_1, 1+__pyx_t_9, __pyx_t_6);
  __pyx_t_7 = 0;
  __pyx_t_6 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_is_spec = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":139
 *     kvir_y = get_kgrid()[get_vir_states()[:, 1]]
 *     is_spec = np.logical_or((kvir_y > get_kf()), (kvir_y < -get_kf()))
 *     mask = np.where(is_spec)             # <<<<<<<<<<<<<<
 *     spec_virs = get_kgrid()[get_vir_states()[mask]]
 *     mask2 = np.where(np.logical_not(is_spec))
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_where); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_is_spec); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 139, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  } else {
    __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 139, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(__pyx_v_is_spec);
    __Pyx_GIVEREF(__pyx_v_is_spec);
    PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_v_is_spec);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 139, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_mask = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":140
 *     is_spec = np.logical_or((kvir_y > get_kf()), (kvir_y < -get_kf()))
 *     mask = np.where(is_spec)
 *     spec_virs = get_kgrid()[get_vir_states()[mask]]             # <<<<<<<<<<<<<<
 *     mask2 = np.where(np.logical_not(is_spec))
 *     active_virs = get_kgrid()[get_vir_states()[mask2]]
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 140, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 140, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_vir_states); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 140, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 140, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_GetItem(__pyx_t_1, __pyx_v_mask); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetItem(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_spec_virs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":141
 *     mask = np.where(is_spec)
 *     spec_virs = get_kgrid()[get_vir_states()[mask]]
 *     mask2 = np.where(np.logical_not(is_spec))             # <<<<<<<<<<<<<<
 *     active_virs = get_kgrid()[get_vir_states()[mask2]]
 * 
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_where); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_logical_not); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_is_spec); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(__pyx_v_is_spec);
    __Pyx_GIVEREF(__pyx_v_is_spec);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_v_is_spec);
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_mask2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":142
 *     spec_virs = get_kgrid()[get_vir_states()[mask]]
 *     mask2 = np.where(np.logical_not(is_spec))
 *     active_virs = get_kgrid()[get_vir_states()[mask2]]             # <<<<<<<<<<<<<<
 * 
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 142, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 142, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_vir_states); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 142, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 142, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_GetItem(__pyx_t_5, __pyx_v_mask2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_GetItem(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_active_virs = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":144
 *     active_virs = get_kgrid()[get_vir_states()[mask2]]
 * 
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_scatter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_occ_states); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 144, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 144, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_GetItem(__pyx_t_1, __pyx_tuple__6); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetItem(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 144, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 144, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_occ_states); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyObject_GetItem(__pyx_t_5, __pyx_tuple__8); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_GetItem(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":145
 * 
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],
 *                 c=sns.color_palette()[0], label='Occupied')             # <<<<<<<<<<<<<<
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 *                 c=sns.color_palette()[2], label='Virtual')
 */
  __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_sns); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_color_palette); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 145, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 145, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_c, __pyx_t_2) < 0) __PYX_ERR(1, 145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_label, __pyx_n_s_Occupied) < 0) __PYX_ERR(1, 145, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":144
 *     active_virs = get_kgrid()[get_vir_states()[mask2]]
 * 
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":146
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scatter); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetItem(__pyx_v_active_virs, __pyx_tuple__10); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyObject_GetItem(__pyx_v_active_virs, __pyx_tuple__12); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
  __pyx_t_2 = 0;
  __pyx_t_7 = 0;

  /* "HFS_CythonGenerated.pyx":147
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 *                 c=sns.color_palette()[2], label='Virtual')             # <<<<<<<<<<<<<<
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')
 */
  __pyx_t_7 = PyDict_New(); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_sns); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_color_palette); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 147, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 147, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_2, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_c, __pyx_t_6) < 0) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_label, __pyx_n_s_Virtual) < 0) __PYX_ERR(1, 147, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":146
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],
 */
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "HFS_CythonGenerated.pyx":148
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')
 *     scale = 1.05
 */
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_scatter); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyObject_GetItem(__pyx_v_spec_virs, __pyx_tuple__14); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = PyObject_GetItem(__pyx_v_spec_virs, __pyx_tuple__16); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_3 = 0;

  /* "HFS_CythonGenerated.pyx":149
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')             # <<<<<<<<<<<<<<
 *     scale = 1.05
 *     plt.xlim(-scale*get_kmax(), scale*get_kmax())
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_sns); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_color_palette); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 149, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 149, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_c, __pyx_t_1) < 0) __PYX_ERR(1, 149, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_alpha, __pyx_v_spec_alpha) < 0) __PYX_ERR(1, 149, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_label, __pyx_kp_s_Spectator_Virtuals) < 0) __PYX_ERR(1, 149, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":148
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')
 *     scale = 1.05
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":150
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')
 *     scale = 1.05             # <<<<<<<<<<<<<<
 *     plt.xlim(-scale*get_kmax(), scale*get_kmax())
 *     plt.ylim(-scale*get_kmax(), scale*get_kmax())
 */
  __pyx_v_scale = 1.05;

  /* "HFS_CythonGenerated.pyx":151
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')
 *     scale = 1.05
 *     plt.xlim(-scale*get_kmax(), scale*get_kmax())             # <<<<<<<<<<<<<<
 *     plt.ylim(-scale*get_kmax(), scale*get_kmax())
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_xlim); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyFloat_FromDouble((-__pyx_v_scale)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 151, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 151, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_8) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 151, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 151, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_9 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_9, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_9, __pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_2 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":152
 *     scale = 1.05
 *     plt.xlim(-scale*get_kmax(), scale*get_kmax())
 *     plt.ylim(-scale*get_kmax(), scale*get_kmax())             # <<<<<<<<<<<<<<
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])
 *     plt.axis('off')
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_ylim); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyFloat_FromDouble((-__pyx_v_scale)); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 152, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 152, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kmax); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_8) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 152, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 152, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_9 = 1;
    }
  }
  __pyx_t_2 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_9, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_9, __pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":153
 *     plt.xlim(-scale*get_kmax(), scale*get_kmax())
 *     plt.ylim(-scale*get_kmax(), scale*get_kmax())
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])             # <<<<<<<<<<<<<<
 *     plt.axis('off')
 *     plt.title('The First Brillouin Zone')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_legend); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_loc, __pyx_kp_s_center_left) < 0) __PYX_ERR(1, 153, __pyx_L1_error)
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_float_0_95);
  __Pyx_GIVEREF(__pyx_float_0_95);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_float_0_95);
  __Pyx_INCREF(__pyx_float_0_5);
  __Pyx_GIVEREF(__pyx_float_0_5);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_float_0_5);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_bbox_to_anchor, __pyx_t_2) < 0) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":154
 *     plt.ylim(-scale*get_kmax(), scale*get_kmax())
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])
 *     plt.axis('off')             # <<<<<<<<<<<<<<
 *     plt.title('The First Brillouin Zone')
 * 
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_axis); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":155
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])
 *     plt.axis('off')
 *     plt.title('The First Brillouin Zone')             # <<<<<<<<<<<<<<
 * 
 * def plot_energy(analytic=True, Discretized=True):
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_title); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":124
 * #                                                                               #
 * #################################################################################
 * def plot_1stBZ(spec_alpha=0.20):             # <<<<<<<<<<<<<<
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("HFS_CythonGenerated.plot_1stBZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_circle);
  __Pyx_XDECREF(__pyx_v_sqrpoints);
  __Pyx_XDECREF(__pyx_v_square);
  __Pyx_XDECREF(__pyx_v_kvir_y);
  __Pyx_XDECREF(__pyx_v_is_spec);
  __Pyx_XDECREF(__pyx_v_mask);
  __Pyx_XDECREF(__pyx_v_spec_virs);
  __Pyx_XDECREF(__pyx_v_mask2);
  __Pyx_XDECREF(__pyx_v_active_virs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":157
 *     plt.title('The First Brillouin Zone')
 * 
 * def plot_energy(analytic=True, Discretized=True):             # <<<<<<<<<<<<<<
 *     scale = 1.2
 *     #Analytic plot
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_11plot_energy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_11plot_energy = {"plot_energy", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_11plot_energy, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_11plot_energy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_analytic = 0;
  PyObject *__pyx_v_Discretized = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("plot_energy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_analytic,&__pyx_n_s_Discretized,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_True);
    values[1] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_analytic);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Discretized);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "plot_energy") < 0)) __PYX_ERR(1, 157, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_analytic = values[0];
    __pyx_v_Discretized = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("plot_energy", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 157, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.plot_energy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_10plot_energy(__pyx_self, __pyx_v_analytic, __pyx_v_Discretized);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_10plot_energy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_analytic, PyObject *__pyx_v_Discretized) {
  double __pyx_v_scale;
  PyObject *__pyx_v_xmax = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_energy_x = NULL;
  PyObject *__pyx_v_kinetic_x = NULL;
  PyObject *__pyx_v_exch_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("plot_energy", 0);

  /* "HFS_CythonGenerated.pyx":158
 * 
 * def plot_energy(analytic=True, Discretized=True):
 *     scale = 1.2             # <<<<<<<<<<<<<<
 *     #Analytic plot
 *     xmax = 2.0 * get_kf()
 */
  __pyx_v_scale = 1.2;

  /* "HFS_CythonGenerated.pyx":160
 *     scale = 1.2
 *     #Analytic plot
 *     xmax = 2.0 * get_kf()             # <<<<<<<<<<<<<<
 *     x = np.linspace(0, xmax, 500)
 *     energy_x = np.array([py_analytic_energy(i) for i in x]) / get_fermi_energy()
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 160, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 160, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_2_0, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_xmax = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":161
 *     #Analytic plot
 *     xmax = 2.0 * get_kf()
 *     x = np.linspace(0, xmax, 500)             # <<<<<<<<<<<<<<
 *     energy_x = np.array([py_analytic_energy(i) for i in x]) / get_fermi_energy()
 *     kinetic_x = np.array([0.5 * i**2 for i in x]) / get_fermi_energy()
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_linspace); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_1) {
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1); __pyx_t_1 = NULL;
  }
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_xmax);
  __Pyx_GIVEREF(__pyx_v_xmax);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_xmax);
  __Pyx_INCREF(__pyx_int_500);
  __Pyx_GIVEREF(__pyx_int_500);
  PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, __pyx_int_500);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_x = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":162
 *     xmax = 2.0 * get_kf()
 *     x = np.linspace(0, xmax, 500)
 *     energy_x = np.array([py_analytic_energy(i) for i in x]) / get_fermi_energy()             # <<<<<<<<<<<<<<
 *     kinetic_x = np.array([0.5 * i**2 for i in x]) / get_fermi_energy()
 *     exch_x = np.array([py_analytic_exch(i) for i in x]) / get_fermi_energy()
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(PyList_CheckExact(__pyx_v_x)) || PyTuple_CheckExact(__pyx_v_x)) {
    __pyx_t_1 = __pyx_v_x; __Pyx_INCREF(__pyx_t_1); __pyx_t_4 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 162, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_7); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 162, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_7); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 162, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      }
    } else {
      __pyx_t_7 = __pyx_t_6(__pyx_t_1);
      if (unlikely(!__pyx_t_7)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 162, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_py_analytic_energy); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
    } else {
      __pyx_t_10 = PyTuple_New(1+1); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __pyx_t_9 = NULL;
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_10, 0+1, __pyx_v_i);
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_10, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_7))) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (!__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1); __pyx_t_1 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_fermi_energy); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 162, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 162, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_energy_x = __pyx_t_7;
  __pyx_t_7 = 0;

  /* "HFS_CythonGenerated.pyx":163
 *     x = np.linspace(0, xmax, 500)
 *     energy_x = np.array([py_analytic_energy(i) for i in x]) / get_fermi_energy()
 *     kinetic_x = np.array([0.5 * i**2 for i in x]) / get_fermi_energy()             # <<<<<<<<<<<<<<
 *     exch_x = np.array([py_analytic_exch(i) for i in x]) / get_fermi_energy()
 *     x = x / get_kf()  #rescale for plot
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (likely(PyList_CheckExact(__pyx_v_x)) || PyTuple_CheckExact(__pyx_v_x)) {
    __pyx_t_3 = __pyx_v_x; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 163, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 163, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 163, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 163, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 163, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_6(__pyx_t_3);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 163, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Power(__pyx_v_i, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = PyNumber_Multiply(__pyx_float_0_5, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_5, (PyObject*)__pyx_t_8))) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_7);
  } else {
    __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_fermi_energy); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 163, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 163, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_kinetic_x = __pyx_t_8;
  __pyx_t_8 = 0;

  /* "HFS_CythonGenerated.pyx":164
 *     energy_x = np.array([py_analytic_energy(i) for i in x]) / get_fermi_energy()
 *     kinetic_x = np.array([0.5 * i**2 for i in x]) / get_fermi_energy()
 *     exch_x = np.array([py_analytic_exch(i) for i in x]) / get_fermi_energy()             # <<<<<<<<<<<<<<
 *     x = x / get_kf()  #rescale for plot
 *     if analytic:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(PyList_CheckExact(__pyx_v_x)) || PyTuple_CheckExact(__pyx_v_x)) {
    __pyx_t_5 = __pyx_v_x; __Pyx_INCREF(__pyx_t_5); __pyx_t_4 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 164, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_5))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 164, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 164, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_5);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 164, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_py_analytic_exch); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_10) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 164, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_10); __pyx_t_10 = NULL;
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_v_i);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_3))) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_8);
  } else {
    __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_fermi_energy); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 164, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 164, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_v_exch_x = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "HFS_CythonGenerated.pyx":165
 *     kinetic_x = np.array([0.5 * i**2 for i in x]) / get_fermi_energy()
 *     exch_x = np.array([py_analytic_exch(i) for i in x]) / get_fermi_energy()
 *     x = x / get_kf()  #rescale for plot             # <<<<<<<<<<<<<<
 *     if analytic:
 *         plt.plot(x, energy_x, 'k-' , label='Total')
 */
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_8) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 165, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 165, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_v_x, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_7);
  __pyx_t_7 = 0;

  /* "HFS_CythonGenerated.pyx":166
 *     exch_x = np.array([py_analytic_exch(i) for i in x]) / get_fermi_energy()
 *     x = x / get_kf()  #rescale for plot
 *     if analytic:             # <<<<<<<<<<<<<<
 *         plt.plot(x, energy_x, 'k-' , label='Total')
 *         plt.plot(x, kinetic_x, 'k:', label='Kinetic')
 */
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_analytic); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(1, 166, __pyx_L1_error)
  if (__pyx_t_11) {

    /* "HFS_CythonGenerated.pyx":167
 *     x = x / get_kf()  #rescale for plot
 *     if analytic:
 *         plt.plot(x, energy_x, 'k-' , label='Total')             # <<<<<<<<<<<<<<
 *         plt.plot(x, kinetic_x, 'k:', label='Kinetic')
 *         plt.plot(x, exch_x, 'k--', label='Exchange')
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_plot); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_x);
    __Pyx_INCREF(__pyx_v_energy_x);
    __Pyx_GIVEREF(__pyx_v_energy_x);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_v_energy_x);
    __Pyx_INCREF(__pyx_kp_s_k);
    __Pyx_GIVEREF(__pyx_kp_s_k);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_s_k);
    __pyx_t_8 = PyDict_New(); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_label, __pyx_n_s_Total) < 0) __PYX_ERR(1, 167, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "HFS_CythonGenerated.pyx":168
 *     if analytic:
 *         plt.plot(x, energy_x, 'k-' , label='Total')
 *         plt.plot(x, kinetic_x, 'k:', label='Kinetic')             # <<<<<<<<<<<<<<
 *         plt.plot(x, exch_x, 'k--', label='Exchange')
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_plot); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_x);
    __Pyx_INCREF(__pyx_v_kinetic_x);
    __Pyx_GIVEREF(__pyx_v_kinetic_x);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_kinetic_x);
    __Pyx_INCREF(__pyx_kp_s_k_2);
    __Pyx_GIVEREF(__pyx_kp_s_k_2);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s_k_2);
    __pyx_t_7 = PyDict_New(); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_label, __pyx_n_s_Kinetic) < 0) __PYX_ERR(1, 168, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "HFS_CythonGenerated.pyx":169
 *         plt.plot(x, energy_x, 'k-' , label='Total')
 *         plt.plot(x, kinetic_x, 'k:', label='Kinetic')
 *         plt.plot(x, exch_x, 'k--', label='Exchange')             # <<<<<<<<<<<<<<
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))
 *     plt.xlabel(r'$\frac{k}{k_f}$')
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_plot); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_x);
    __Pyx_INCREF(__pyx_v_exch_x);
    __Pyx_GIVEREF(__pyx_v_exch_x);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_exch_x);
    __Pyx_INCREF(__pyx_kp_s_k_3);
    __Pyx_GIVEREF(__pyx_kp_s_k_3);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s_k_3);
    __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_label, __pyx_n_s_Exchange) < 0) __PYX_ERR(1, 169, __pyx_L1_error)
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "HFS_CythonGenerated.pyx":166
 *     exch_x = np.array([py_analytic_exch(i) for i in x]) / get_fermi_energy()
 *     x = x / get_kf()  #rescale for plot
 *     if analytic:             # <<<<<<<<<<<<<<
 *         plt.plot(x, energy_x, 'k-' , label='Total')
 *         plt.plot(x, kinetic_x, 'k:', label='Kinetic')
 */
  }

  /* "HFS_CythonGenerated.pyx":170
 *         plt.plot(x, kinetic_x, 'k:', label='Kinetic')
 *         plt.plot(x, exch_x, 'k--', label='Exchange')
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))             # <<<<<<<<<<<<<<
 *     plt.xlabel(r'$\frac{k}{k_f}$')
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_title); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_ndim); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 170, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 170, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Add(__pyx_kp_s_Orbital_Energies, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_7, __pyx_kp_s_D_rs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_rs); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 170, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 170, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7);
  __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Add(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 170, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_8);
  } else {
    __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "HFS_CythonGenerated.pyx":171
 *         plt.plot(x, exch_x, 'k--', label='Exchange')
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))
 *     plt.xlabel(r'$\frac{k}{k_f}$')             # <<<<<<<<<<<<<<
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')
 *     plt.xlim(0, 2)
 */
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_xlabel); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "HFS_CythonGenerated.pyx":172
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))
 *     plt.xlabel(r'$\frac{k}{k_f}$')
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')             # <<<<<<<<<<<<<<
 *     plt.xlim(0, 2)
 *     plt.ylim(scale * np.amin(energy_x), scale * np.amax(energy_x))
 */
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_ylabel); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "HFS_CythonGenerated.pyx":173
 *     plt.xlabel(r'$\frac{k}{k_f}$')
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')
 *     plt.xlim(0, 2)             # <<<<<<<<<<<<<<
 *     plt.ylim(scale * np.amin(energy_x), scale * np.amax(energy_x))
 * 
 */
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_xlim); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "HFS_CythonGenerated.pyx":174
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')
 *     plt.xlim(0, 2)
 *     plt.ylim(scale * np.amin(energy_x), scale * np.amax(energy_x))             # <<<<<<<<<<<<<<
 * 
 *     #Discretized Plot
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_ylim); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_amin); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_energy_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
  } else {
    __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_INCREF(__pyx_v_energy_x);
    __Pyx_GIVEREF(__pyx_v_energy_x);
    PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_v_energy_x);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_amax); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (!__pyx_t_9) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_energy_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    __pyx_t_10 = PyTuple_New(1+1); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __pyx_t_9 = NULL;
    __Pyx_INCREF(__pyx_v_energy_x);
    __Pyx_GIVEREF(__pyx_v_energy_x);
    PyTuple_SET_ITEM(__pyx_t_10, 0+1, __pyx_v_energy_x);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Multiply(__pyx_t_5, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  __pyx_t_5 = PyTuple_New(2+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3) {
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_t_7);
  __pyx_t_1 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "HFS_CythonGenerated.pyx":177
 * 
 *     #Discretized Plot
 *     y = get_occ_energies() / get_fermi_energy()             # <<<<<<<<<<<<<<
 *     x = gm.row_norm(get_kgrid()[get_occ_states()]) / get_kf()
 *     if Discretized:
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_occ_energies); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 177, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_8 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 177, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_fermi_energy); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 177, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 177, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_y = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":178
 *     #Discretized Plot
 *     y = get_occ_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_occ_states()]) / get_kf()             # <<<<<<<<<<<<<<
 *     if Discretized:
 *         plt.plot(x, y, '.', c=sns.color_palette()[0], label='Occupied')
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_gm); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_row_norm); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 178, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 178, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_occ_states); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 178, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 178, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (!__pyx_t_7) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 178, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_5);
  } else {
    __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7); __pyx_t_7 = NULL;
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 178, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_8 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 178, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":179
 *     y = get_occ_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_occ_states()]) / get_kf()
 *     if Discretized:             # <<<<<<<<<<<<<<
 *         plt.plot(x, y, '.', c=sns.color_palette()[0], label='Occupied')
 *     y = get_vir_energies() / get_fermi_energy()
 */
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_Discretized); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(1, 179, __pyx_L1_error)
  if (__pyx_t_11) {

    /* "HFS_CythonGenerated.pyx":180
 *     x = gm.row_norm(get_kgrid()[get_occ_states()]) / get_kf()
 *     if Discretized:
 *         plt.plot(x, y, '.', c=sns.color_palette()[0], label='Occupied')             # <<<<<<<<<<<<<<
 *     y = get_vir_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_vir_states()]) / get_kf()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_plot); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_x);
    __Pyx_INCREF(__pyx_v_y);
    __Pyx_GIVEREF(__pyx_v_y);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_y);
    __Pyx_INCREF(__pyx_kp_s__22);
    __Pyx_GIVEREF(__pyx_kp_s__22);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s__22);
    __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_sns); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_color_palette); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 180, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 180, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_c, __pyx_t_3) < 0) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_label, __pyx_n_s_Occupied) < 0) __PYX_ERR(1, 180, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "HFS_CythonGenerated.pyx":179
 *     y = get_occ_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_occ_states()]) / get_kf()
 *     if Discretized:             # <<<<<<<<<<<<<<
 *         plt.plot(x, y, '.', c=sns.color_palette()[0], label='Occupied')
 *     y = get_vir_energies() / get_fermi_energy()
 */
  }

  /* "HFS_CythonGenerated.pyx":181
 *     if Discretized:
 *         plt.plot(x, y, '.', c=sns.color_palette()[0], label='Occupied')
 *     y = get_vir_energies() / get_fermi_energy()             # <<<<<<<<<<<<<<
 *     x = gm.row_norm(get_kgrid()[get_vir_states()]) / get_kf()
 *     if Discretized:
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_vir_energies); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 181, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 181, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_fermi_energy); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_8) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 181, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 181, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_2);
  __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":182
 *         plt.plot(x, y, '.', c=sns.color_palette()[0], label='Occupied')
 *     y = get_vir_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_vir_states()]) / get_kf()             # <<<<<<<<<<<<<<
 *     if Discretized:
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 */
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_gm); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_row_norm); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kgrid); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 182, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 182, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_vir_states); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (__pyx_t_7) {
    __pyx_t_8 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 182, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else {
    __pyx_t_8 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 182, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetItem(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_8) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 182, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_8); __pyx_t_8 = NULL;
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_kf); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 182, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 182, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "HFS_CythonGenerated.pyx":183
 *     y = get_vir_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_vir_states()]) / get_kf()
 *     if Discretized:             # <<<<<<<<<<<<<<
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 * 
 */
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_Discretized); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(1, 183, __pyx_L1_error)
  if (__pyx_t_11) {

    /* "HFS_CythonGenerated.pyx":184
 *     x = gm.row_norm(get_kgrid()[get_vir_states()]) / get_kf()
 *     if Discretized:
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')             # <<<<<<<<<<<<<<
 * 
 * def plot_exc_hist():
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_plot); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_x);
    __Pyx_INCREF(__pyx_v_y);
    __Pyx_GIVEREF(__pyx_v_y);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_y);
    __Pyx_INCREF(__pyx_kp_s__22);
    __Pyx_GIVEREF(__pyx_kp_s__22);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_s__22);
    __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_sns); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_color_palette); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (__pyx_t_8) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 184, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 184, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_1, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_c, __pyx_t_7) < 0) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_label, __pyx_n_s_Virtual) < 0) __PYX_ERR(1, 184, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "HFS_CythonGenerated.pyx":183
 *     y = get_vir_energies() / get_fermi_energy()
 *     x = gm.row_norm(get_kgrid()[get_vir_states()]) / get_kf()
 *     if Discretized:             # <<<<<<<<<<<<<<
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 * 
 */
  }

  /* "HFS_CythonGenerated.pyx":157
 *     plt.title('The First Brillouin Zone')
 * 
 * def plot_energy(analytic=True, Discretized=True):             # <<<<<<<<<<<<<<
 *     scale = 1.2
 *     #Analytic plot
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("HFS_CythonGenerated.plot_energy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xmax);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_energy_x);
  __Pyx_XDECREF(__pyx_v_kinetic_x);
  __Pyx_XDECREF(__pyx_v_exch_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":186
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 * 
 * def plot_exc_hist():             # <<<<<<<<<<<<<<
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_13plot_exc_hist(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_13plot_exc_hist = {"plot_exc_hist", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_13plot_exc_hist, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_13plot_exc_hist(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("plot_exc_hist (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_12plot_exc_hist(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_12plot_exc_hist(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  __Pyx_RefNannySetupContext("plot_exc_hist", 0);

  /* "HFS_CythonGenerated.pyx":187
 * 
 * def plot_exc_hist():
 *     plt.hist(get_exc_energies(), get_Nexc()/30)             # <<<<<<<<<<<<<<
 *     plt.title('Excitation Energy Histogram')
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hist); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_exc_energies); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 187, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 187, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_get_Nexc); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 187, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 187, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_int_30); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_7, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_7, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":188
 * def plot_exc_hist():
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')             # <<<<<<<<<<<<<<
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')
 *     plt.ylabel('Count')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_title); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":189
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')             # <<<<<<<<<<<<<<
 *     plt.ylabel('Count')
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_xlabel); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":190
 *     plt.title('Excitation Energy Histogram')
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')
 *     plt.ylabel('Count')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_plt); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ylabel); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":186
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 * 
 * def plot_exc_hist():             # <<<<<<<<<<<<<<
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("HFS_CythonGenerated.plot_exc_hist", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":196
 * #                               Py Funcs                               #
 * ########################################################################
 * def py_calc_kf():             # <<<<<<<<<<<<<<
 *     calc_kf()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_15py_calc_kf(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_15py_calc_kf = {"py_calc_kf", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_15py_calc_kf, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_15py_calc_kf(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_kf (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_14py_calc_kf(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_14py_calc_kf(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_kf", 0);

  /* "HFS_CythonGenerated.pyx":197
 * ########################################################################
 * def py_calc_kf():
 *     calc_kf()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_vol_and_two_e_const():
 */
  HFS::calc_kf();

  /* "HFS_CythonGenerated.pyx":196
 * #                               Py Funcs                               #
 * ########################################################################
 * def py_calc_kf():             # <<<<<<<<<<<<<<
 *     calc_kf()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":199
 *     calc_kf()
 * 
 * def py_calc_vol_and_two_e_const():             # <<<<<<<<<<<<<<
 *     calc_vol_and_two_e_const()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_17py_calc_vol_and_two_e_const(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_17py_calc_vol_and_two_e_const = {"py_calc_vol_and_two_e_const", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_17py_calc_vol_and_two_e_const, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_17py_calc_vol_and_two_e_const(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_vol_and_two_e_const (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_16py_calc_vol_and_two_e_const(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_16py_calc_vol_and_two_e_const(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_vol_and_two_e_const", 0);

  /* "HFS_CythonGenerated.pyx":200
 * 
 * def py_calc_vol_and_two_e_const():
 *     calc_vol_and_two_e_const()             # <<<<<<<<<<<<<<
 * 
 * def py_print_params():
 */
  HFS::calc_vol_and_two_e_const();

  /* "HFS_CythonGenerated.pyx":199
 *     calc_kf()
 * 
 * def py_calc_vol_and_two_e_const():             # <<<<<<<<<<<<<<
 *     calc_vol_and_two_e_const()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":202
 *     calc_vol_and_two_e_const()
 * 
 * def py_print_params():             # <<<<<<<<<<<<<<
 *     print_params()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_19py_print_params(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_19py_print_params = {"py_print_params", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_19py_print_params, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_19py_print_params(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_print_params (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_18py_print_params(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_18py_print_params(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_print_params", 0);

  /* "HFS_CythonGenerated.pyx":203
 * 
 * def py_print_params():
 *     print_params()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_occ_states():
 */
  HFS::print_params();

  /* "HFS_CythonGenerated.pyx":202
 *     calc_vol_and_two_e_const()
 * 
 * def py_print_params():             # <<<<<<<<<<<<<<
 *     print_params()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":205
 *     print_params()
 * 
 * def py_calc_occ_states():             # <<<<<<<<<<<<<<
 *     calc_occ_states()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_21py_calc_occ_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_21py_calc_occ_states = {"py_calc_occ_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_21py_calc_occ_states, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_21py_calc_occ_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_occ_states (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_20py_calc_occ_states(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_20py_calc_occ_states(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_occ_states", 0);

  /* "HFS_CythonGenerated.pyx":206
 * 
 * def py_calc_occ_states():
 *     calc_occ_states()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_occ_energies():
 */
  HFS::calc_occ_states();

  /* "HFS_CythonGenerated.pyx":205
 *     print_params()
 * 
 * def py_calc_occ_states():             # <<<<<<<<<<<<<<
 *     calc_occ_states()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":208
 *     calc_occ_states()
 * 
 * def py_calc_occ_energies():             # <<<<<<<<<<<<<<
 *     calc_occ_energies()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_23py_calc_occ_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_23py_calc_occ_energies = {"py_calc_occ_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_23py_calc_occ_energies, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_23py_calc_occ_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_occ_energies (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_22py_calc_occ_energies(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_22py_calc_occ_energies(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_occ_energies", 0);

  /* "HFS_CythonGenerated.pyx":209
 * 
 * def py_calc_occ_energies():
 *     calc_occ_energies()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_vir_energies():
 */
  HFS::calc_occ_energies();

  /* "HFS_CythonGenerated.pyx":208
 *     calc_occ_states()
 * 
 * def py_calc_occ_energies():             # <<<<<<<<<<<<<<
 *     calc_occ_energies()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":211
 *     calc_occ_energies()
 * 
 * def py_calc_vir_energies():             # <<<<<<<<<<<<<<
 *     calc_vir_energies()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_25py_calc_vir_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_25py_calc_vir_energies = {"py_calc_vir_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_25py_calc_vir_energies, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_25py_calc_vir_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_vir_energies (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_24py_calc_vir_energies(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_24py_calc_vir_energies(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_vir_energies", 0);

  /* "HFS_CythonGenerated.pyx":212
 * 
 * def py_calc_vir_energies():
 *     calc_vir_energies()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_excitations():
 */
  HFS::calc_vir_energies();

  /* "HFS_CythonGenerated.pyx":211
 *     calc_occ_energies()
 * 
 * def py_calc_vir_energies():             # <<<<<<<<<<<<<<
 *     calc_vir_energies()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":214
 *     calc_vir_energies()
 * 
 * def py_calc_excitations():             # <<<<<<<<<<<<<<
 *     calc_excitations()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_27py_calc_excitations(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_27py_calc_excitations = {"py_calc_excitations", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_27py_calc_excitations, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_27py_calc_excitations(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_excitations (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_26py_calc_excitations(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_26py_calc_excitations(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_excitations", 0);

  /* "HFS_CythonGenerated.pyx":215
 * 
 * def py_calc_excitations():
 *     calc_excitations()             # <<<<<<<<<<<<<<
 * 
 * def py_is_vir(float val):
 */
  HFS::calc_excitations();

  /* "HFS_CythonGenerated.pyx":214
 *     calc_vir_energies()
 * 
 * def py_calc_excitations():             # <<<<<<<<<<<<<<
 *     calc_excitations()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":217
 *     calc_excitations()
 * 
 * def py_is_vir(float val):             # <<<<<<<<<<<<<<
 *     return is_vir(val)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_29py_is_vir(PyObject *__pyx_self, PyObject *__pyx_arg_val); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_29py_is_vir = {"py_is_vir", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_29py_is_vir, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_29py_is_vir(PyObject *__pyx_self, PyObject *__pyx_arg_val) {
  float __pyx_v_val;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_is_vir (wrapper)", 0);
  assert(__pyx_arg_val); {
    __pyx_v_val = __pyx_PyFloat_AsFloat(__pyx_arg_val); if (unlikely((__pyx_v_val == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 217, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_is_vir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_28py_is_vir(__pyx_self, ((float)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_28py_is_vir(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_is_vir", 0);

  /* "HFS_CythonGenerated.pyx":218
 * 
 * def py_is_vir(float val):
 *     return is_vir(val)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_exc_energy():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(HFS::is_vir(__pyx_v_val)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":217
 *     calc_excitations()
 * 
 * def py_is_vir(float val):             # <<<<<<<<<<<<<<
 *     return is_vir(val)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_is_vir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":220
 *     return is_vir(val)
 * 
 * def py_calc_exc_energy():             # <<<<<<<<<<<<<<
 *     calc_exc_energy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_31py_calc_exc_energy(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_31py_calc_exc_energy = {"py_calc_exc_energy", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_31py_calc_exc_energy, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_31py_calc_exc_energy(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_exc_energy (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_30py_calc_exc_energy(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_30py_calc_exc_energy(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_exc_energy", 0);

  /* "HFS_CythonGenerated.pyx":221
 * 
 * def py_calc_exc_energy():
 *     calc_exc_energy()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_energies(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,
 */
  HFS::calc_exc_energy();

  /* "HFS_CythonGenerated.pyx":220
 *     return is_vir(val)
 * 
 * def py_calc_exc_energy():             # <<<<<<<<<<<<<<
 *     calc_exc_energy()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":223
 *     calc_exc_energy()
 * 
 * def py_calc_energies(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                      np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_33py_calc_energies(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_33py_calc_energies = {"py_calc_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_33py_calc_energies, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_33py_calc_energies(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_val1 = 0;
  PyArrayObject *__pyx_v_val2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_energies (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_calc_energies", 1, 2, 2, 1); __PYX_ERR(1, 223, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_calc_energies") < 0)) __PYX_ERR(1, 223, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = ((PyArrayObject *)values[0]);
    __pyx_v_val2 = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_calc_energies", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 223, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 223, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val2), __pyx_ptype_5numpy_ndarray, 1, "val2", 0))) __PYX_ERR(1, 224, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_32py_calc_energies(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_32py_calc_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, PyArrayObject *__pyx_v_val2) {
  arma::umat __pyx_v_VAL1;
  arma::vec __pyx_v_VAL2;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val2;
  __Pyx_Buffer __pyx_pybuffer_val2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_energies", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  __pyx_pybuffer_val2.pybuffer.buf = NULL;
  __pyx_pybuffer_val2.refcount = 0;
  __pyx_pybuffernd_val2.data = NULL;
  __pyx_pybuffernd_val2.rcbuffer = &__pyx_pybuffer_val2;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_unsigned_PY_LONG_LONG, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 223, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_val1.diminfo[1].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_val1.diminfo[1].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val2.rcbuffer->pybuffer, (PyObject*)__pyx_v_val2, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 223, __pyx_L1_error)
  }
  __pyx_pybuffernd_val2.diminfo[0].strides = __pyx_pybuffernd_val2.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val2.diminfo[0].shape = __pyx_pybuffernd_val2.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":225
 * def py_calc_energies(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,
 *                      np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_umat_d(val1)             # <<<<<<<<<<<<<<
 *     VAL2 = numpy_to_vec_d(val2)
 *     calc_energies(VAL1, VAL2)
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":226
 *                      np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_umat_d(val1)
 *     VAL2 = numpy_to_vec_d(val2)             # <<<<<<<<<<<<<<
 *     calc_energies(VAL1, VAL2)
 * 
 */
  __pyx_v_VAL2 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val2));

  /* "HFS_CythonGenerated.pyx":227
 *     VAL1 = numpy_to_umat_d(val1)
 *     VAL2 = numpy_to_vec_d(val2)
 *     calc_energies(VAL1, VAL2)             # <<<<<<<<<<<<<<
 * 
 * def py_exchange(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,
 */
  HFS::calc_energies(__pyx_v_VAL1, __pyx_v_VAL2);

  /* "HFS_CythonGenerated.pyx":223
 *     calc_exc_energy()
 * 
 * def py_calc_energies(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                      np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val2.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val2.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":229
 *     calc_energies(VAL1, VAL2)
 * 
 * def py_exchange(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                 int val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_35py_exchange(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_35py_exchange = {"py_exchange", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_35py_exchange, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_35py_exchange(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_val1 = 0;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_exchange (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_exchange", 1, 2, 2, 1); __PYX_ERR(1, 229, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_exchange") < 0)) __PYX_ERR(1, 229, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = ((PyArrayObject *)values[0]);
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 230, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_exchange", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 229, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_exchange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 229, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_34py_exchange(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_34py_exchange(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, int __pyx_v_val2) {
  arma::umat __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_exchange", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_unsigned_PY_LONG_LONG, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 229, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_val1.diminfo[1].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_val1.diminfo[1].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":231
 * def py_exchange(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,
 *                 int val2):
 *     VAL1 = numpy_to_umat_d(val1)             # <<<<<<<<<<<<<<
 *     return exchange(VAL1, val2)
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":232
 *                 int val2):
 *     VAL1 = numpy_to_umat_d(val1)
 *     return exchange(VAL1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_two_electron(np.ndarray[double, ndim=1] val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::exchange(__pyx_v_VAL1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":229
 *     calc_energies(VAL1, VAL2)
 * 
 * def py_exchange(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                 int val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_exchange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":234
 *     return exchange(VAL1, val2)
 * 
 * def py_two_electron(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_37py_two_electron(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_37py_two_electron = {"py_two_electron", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_37py_two_electron, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_37py_two_electron(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_val1 = 0;
  PyArrayObject *__pyx_v_val2 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_two_electron (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_two_electron", 1, 2, 2, 1); __PYX_ERR(1, 234, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_two_electron") < 0)) __PYX_ERR(1, 234, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = ((PyArrayObject *)values[0]);
    __pyx_v_val2 = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_two_electron", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 234, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_two_electron", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 234, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val2), __pyx_ptype_5numpy_ndarray, 1, "val2", 0))) __PYX_ERR(1, 235, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_36py_two_electron(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_36py_two_electron(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, PyArrayObject *__pyx_v_val2) {
  arma::vec __pyx_v_VAL1;
  arma::vec __pyx_v_VAL2;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val2;
  __Pyx_Buffer __pyx_pybuffer_val2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_two_electron", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  __pyx_pybuffer_val2.pybuffer.buf = NULL;
  __pyx_pybuffer_val2.refcount = 0;
  __pyx_pybuffernd_val2.data = NULL;
  __pyx_pybuffernd_val2.rcbuffer = &__pyx_pybuffer_val2;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 234, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val2.rcbuffer->pybuffer, (PyObject*)__pyx_v_val2, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 234, __pyx_L1_error)
  }
  __pyx_pybuffernd_val2.diminfo[0].strides = __pyx_pybuffernd_val2.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val2.diminfo[0].shape = __pyx_pybuffernd_val2.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":236
 * def py_two_electron(np.ndarray[double, ndim=1] val1,
 *                     np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     VAL2 = numpy_to_vec_d(val2)
 *     return two_electron(VAL1, VAL2)
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":237
 *                     np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_vec_d(val1)
 *     VAL2 = numpy_to_vec_d(val2)             # <<<<<<<<<<<<<<
 *     return two_electron(VAL1, VAL2)
 * 
 */
  __pyx_v_VAL2 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val2));

  /* "HFS_CythonGenerated.pyx":238
 *     VAL1 = numpy_to_vec_d(val1)
 *     VAL2 = numpy_to_vec_d(val2)
 *     return two_electron(VAL1, VAL2)             # <<<<<<<<<<<<<<
 * 
 * def py_two_electron_check(np.ndarray[double, ndim=1] val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::two_electron(__pyx_v_VAL1, __pyx_v_VAL2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":234
 *     return exchange(VAL1, val2)
 * 
 * def py_two_electron(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val2.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_two_electron", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val2.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":240
 *     return two_electron(VAL1, VAL2)
 * 
 * def py_two_electron_check(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=1] val2,
 *                           np.ndarray[double, ndim=1] val3,
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_39py_two_electron_check(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_39py_two_electron_check = {"py_two_electron_check", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_39py_two_electron_check, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_39py_two_electron_check(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_val1 = 0;
  PyArrayObject *__pyx_v_val2 = 0;
  PyArrayObject *__pyx_v_val3 = 0;
  PyArrayObject *__pyx_v_val4 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_two_electron_check (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,&__pyx_n_s_val3,&__pyx_n_s_val4,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_two_electron_check", 1, 4, 4, 1); __PYX_ERR(1, 240, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_two_electron_check", 1, 4, 4, 2); __PYX_ERR(1, 240, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_two_electron_check", 1, 4, 4, 3); __PYX_ERR(1, 240, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_two_electron_check") < 0)) __PYX_ERR(1, 240, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_val1 = ((PyArrayObject *)values[0]);
    __pyx_v_val2 = ((PyArrayObject *)values[1]);
    __pyx_v_val3 = ((PyArrayObject *)values[2]);
    __pyx_v_val4 = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_two_electron_check", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 240, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_two_electron_check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 240, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val2), __pyx_ptype_5numpy_ndarray, 1, "val2", 0))) __PYX_ERR(1, 241, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val3), __pyx_ptype_5numpy_ndarray, 1, "val3", 0))) __PYX_ERR(1, 242, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val4), __pyx_ptype_5numpy_ndarray, 1, "val4", 0))) __PYX_ERR(1, 243, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_38py_two_electron_check(__pyx_self, __pyx_v_val1, __pyx_v_val2, __pyx_v_val3, __pyx_v_val4);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_38py_two_electron_check(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, PyArrayObject *__pyx_v_val2, PyArrayObject *__pyx_v_val3, PyArrayObject *__pyx_v_val4) {
  arma::vec __pyx_v_VAL1;
  arma::vec __pyx_v_VAL2;
  arma::vec __pyx_v_VAL3;
  arma::vec __pyx_v_VAL4;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val2;
  __Pyx_Buffer __pyx_pybuffer_val2;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val3;
  __Pyx_Buffer __pyx_pybuffer_val3;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val4;
  __Pyx_Buffer __pyx_pybuffer_val4;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_two_electron_check", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  __pyx_pybuffer_val2.pybuffer.buf = NULL;
  __pyx_pybuffer_val2.refcount = 0;
  __pyx_pybuffernd_val2.data = NULL;
  __pyx_pybuffernd_val2.rcbuffer = &__pyx_pybuffer_val2;
  __pyx_pybuffer_val3.pybuffer.buf = NULL;
  __pyx_pybuffer_val3.refcount = 0;
  __pyx_pybuffernd_val3.data = NULL;
  __pyx_pybuffernd_val3.rcbuffer = &__pyx_pybuffer_val3;
  __pyx_pybuffer_val4.pybuffer.buf = NULL;
  __pyx_pybuffer_val4.refcount = 0;
  __pyx_pybuffernd_val4.data = NULL;
  __pyx_pybuffernd_val4.rcbuffer = &__pyx_pybuffer_val4;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 240, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val2.rcbuffer->pybuffer, (PyObject*)__pyx_v_val2, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 240, __pyx_L1_error)
  }
  __pyx_pybuffernd_val2.diminfo[0].strides = __pyx_pybuffernd_val2.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val2.diminfo[0].shape = __pyx_pybuffernd_val2.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val3.rcbuffer->pybuffer, (PyObject*)__pyx_v_val3, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 240, __pyx_L1_error)
  }
  __pyx_pybuffernd_val3.diminfo[0].strides = __pyx_pybuffernd_val3.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val3.diminfo[0].shape = __pyx_pybuffernd_val3.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val4.rcbuffer->pybuffer, (PyObject*)__pyx_v_val4, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 240, __pyx_L1_error)
  }
  __pyx_pybuffernd_val4.diminfo[0].strides = __pyx_pybuffernd_val4.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val4.diminfo[0].shape = __pyx_pybuffernd_val4.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":244
 *                           np.ndarray[double, ndim=1] val3,
 *                           np.ndarray[double, ndim=1] val4):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     VAL2 = numpy_to_vec_d(val2)
 *     VAL3 = numpy_to_vec_d(val3)
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":245
 *                           np.ndarray[double, ndim=1] val4):
 *     VAL1 = numpy_to_vec_d(val1)
 *     VAL2 = numpy_to_vec_d(val2)             # <<<<<<<<<<<<<<
 *     VAL3 = numpy_to_vec_d(val3)
 *     VAL4 = numpy_to_vec_d(val4)
 */
  __pyx_v_VAL2 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val2));

  /* "HFS_CythonGenerated.pyx":246
 *     VAL1 = numpy_to_vec_d(val1)
 *     VAL2 = numpy_to_vec_d(val2)
 *     VAL3 = numpy_to_vec_d(val3)             # <<<<<<<<<<<<<<
 *     VAL4 = numpy_to_vec_d(val4)
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)
 */
  __pyx_v_VAL3 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val3));

  /* "HFS_CythonGenerated.pyx":247
 *     VAL2 = numpy_to_vec_d(val2)
 *     VAL3 = numpy_to_vec_d(val3)
 *     VAL4 = numpy_to_vec_d(val4)             # <<<<<<<<<<<<<<
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)
 * 
 */
  __pyx_v_VAL4 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val4));

  /* "HFS_CythonGenerated.pyx":248
 *     VAL3 = numpy_to_vec_d(val3)
 *     VAL4 = numpy_to_vec_d(val4)
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_1B(int val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::two_electron_check(__pyx_v_VAL1, __pyx_v_VAL2, __pyx_v_VAL3, __pyx_v_VAL4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":240
 *     return two_electron(VAL1, VAL2)
 * 
 * def py_two_electron_check(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=1] val2,
 *                           np.ndarray[double, ndim=1] val3,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val2.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val3.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val4.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_two_electron_check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val2.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val3.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val4.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":250
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)
 * 
 * def py_calc_1B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1B(val1, val2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_41py_calc_1B(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_41py_calc_1B = {"py_calc_1B", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_41py_calc_1B, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_41py_calc_1B(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_val1;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_1B (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_calc_1B", 1, 2, 2, 1); __PYX_ERR(1, 250, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_calc_1B") < 0)) __PYX_ERR(1, 250, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_val1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 250, __pyx_L3_error)
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 251, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_calc_1B", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 250, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_1B", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_40py_calc_1B(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_40py_calc_1B(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_calc_1B", 0);

  /* "HFS_CythonGenerated.pyx":252
 * def py_calc_1B(int val1,
 *                int val2):
 *     return calc_1B(val1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_3B(int val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::calc_1B(__pyx_v_val1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":250
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)
 * 
 * def py_calc_1B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1B(val1, val2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_1B", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":254
 *     return calc_1B(val1, val2)
 * 
 * def py_calc_3B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3B(val1, val2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_43py_calc_3B(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_43py_calc_3B = {"py_calc_3B", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_43py_calc_3B, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_43py_calc_3B(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_val1;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_3B (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_calc_3B", 1, 2, 2, 1); __PYX_ERR(1, 254, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_calc_3B") < 0)) __PYX_ERR(1, 254, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_val1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 254, __pyx_L3_error)
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 255, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_calc_3B", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 254, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_3B", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_42py_calc_3B(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_42py_calc_3B(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_calc_3B", 0);

  /* "HFS_CythonGenerated.pyx":256
 * def py_calc_3B(int val1,
 *                int val2):
 *     return calc_3B(val1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_1A(int val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::calc_3B(__pyx_v_val1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":254
 *     return calc_1B(val1, val2)
 * 
 * def py_calc_3B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3B(val1, val2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_3B", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":258
 *     return calc_3B(val1, val2)
 * 
 * def py_calc_1A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1A(val1, val2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_45py_calc_1A(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_45py_calc_1A = {"py_calc_1A", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_45py_calc_1A, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_45py_calc_1A(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_val1;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_1A (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_calc_1A", 1, 2, 2, 1); __PYX_ERR(1, 258, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_calc_1A") < 0)) __PYX_ERR(1, 258, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_val1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 258, __pyx_L3_error)
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 259, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_calc_1A", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 258, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_1A", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_44py_calc_1A(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_44py_calc_1A(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_calc_1A", 0);

  /* "HFS_CythonGenerated.pyx":260
 * def py_calc_1A(int val1,
 *                int val2):
 *     return calc_1A(val1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_3A(int val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::calc_1A(__pyx_v_val1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":258
 *     return calc_3B(val1, val2)
 * 
 * def py_calc_1A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1A(val1, val2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_1A", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":262
 *     return calc_1A(val1, val2)
 * 
 * def py_calc_3A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3A(val1, val2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_47py_calc_3A(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_47py_calc_3A = {"py_calc_3A", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_47py_calc_3A, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_47py_calc_3A(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_val1;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_3A (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_calc_3A", 1, 2, 2, 1); __PYX_ERR(1, 262, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_calc_3A") < 0)) __PYX_ERR(1, 262, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_val1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 262, __pyx_L3_error)
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 263, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_calc_3A", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 262, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_3A", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_46py_calc_3A(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_46py_calc_3A(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_calc_3A", 0);

  /* "HFS_CythonGenerated.pyx":264
 * def py_calc_3A(int val1,
 *                int val2):
 *     return calc_3A(val1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_3H(int val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::calc_3A(__pyx_v_val1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":262
 *     return calc_1A(val1, val2)
 * 
 * def py_calc_3A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3A(val1, val2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_3A", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":266
 *     return calc_3A(val1, val2)
 * 
 * def py_calc_3H(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3H(val1, val2)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_49py_calc_3H(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_49py_calc_3H = {"py_calc_3H", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_49py_calc_3H, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_49py_calc_3H(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_val1;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_3H (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_calc_3H", 1, 2, 2, 1); __PYX_ERR(1, 266, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_calc_3H") < 0)) __PYX_ERR(1, 266, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_val1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 266, __pyx_L3_error)
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 267, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_calc_3H", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 266, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_3H", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_48py_calc_3H(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_48py_calc_3H(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_calc_3H", 0);

  /* "HFS_CythonGenerated.pyx":268
 * def py_calc_3H(int val1,
 *                int val2):
 *     return calc_3H(val1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::calc_3H(__pyx_v_val1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":266
 *     return calc_3A(val1, val2)
 * 
 * def py_calc_3H(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3H(val1, val2)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_calc_3H", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":270
 *     return calc_3H(val1, val2)
 * 
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     to_first_BZ(VAL1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_51py_to_first_BZ(PyObject *__pyx_self, PyObject *__pyx_v_val1); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_51py_to_first_BZ = {"py_to_first_BZ", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_51py_to_first_BZ, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_51py_to_first_BZ(PyObject *__pyx_self, PyObject *__pyx_v_val1) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_to_first_BZ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 270, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_50py_to_first_BZ(__pyx_self, ((PyArrayObject *)__pyx_v_val1));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_50py_to_first_BZ(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1) {
  arma::vec __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_to_first_BZ", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 270, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":271
 * 
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     to_first_BZ(VAL1)
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":272
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)
 *     to_first_BZ(VAL1)             # <<<<<<<<<<<<<<
 * 
 * def py_calc_params():
 */
  HFS::to_first_BZ(__pyx_v_VAL1);

  /* "HFS_CythonGenerated.pyx":270
 *     return calc_3H(val1, val2)
 * 
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     to_first_BZ(VAL1)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_to_first_BZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":274
 *     to_first_BZ(VAL1)
 * 
 * def py_calc_params():             # <<<<<<<<<<<<<<
 *     calc_params()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_53py_calc_params(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_53py_calc_params = {"py_calc_params", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_53py_calc_params, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_53py_calc_params(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_params (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_52py_calc_params(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_52py_calc_params(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_params", 0);

  /* "HFS_CythonGenerated.pyx":275
 * 
 * def py_calc_params():
 *     calc_params()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_inv_exc_map():
 */
  HFS::calc_params();

  /* "HFS_CythonGenerated.pyx":274
 *     to_first_BZ(VAL1)
 * 
 * def py_calc_params():             # <<<<<<<<<<<<<<
 *     calc_params()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":277
 *     calc_params()
 * 
 * def py_calc_inv_exc_map():             # <<<<<<<<<<<<<<
 *     calc_inv_exc_map()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_55py_calc_inv_exc_map(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_55py_calc_inv_exc_map = {"py_calc_inv_exc_map", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_55py_calc_inv_exc_map, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_55py_calc_inv_exc_map(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_inv_exc_map (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_54py_calc_inv_exc_map(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_54py_calc_inv_exc_map(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_inv_exc_map", 0);

  /* "HFS_CythonGenerated.pyx":278
 * 
 * def py_calc_inv_exc_map():
 *     calc_inv_exc_map()             # <<<<<<<<<<<<<<
 * 
 * def py_calc_vir_N_to_1_map():
 */
  HFS::calc_inv_exc_map();

  /* "HFS_CythonGenerated.pyx":277
 *     calc_params()
 * 
 * def py_calc_inv_exc_map():             # <<<<<<<<<<<<<<
 *     calc_inv_exc_map()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":280
 *     calc_inv_exc_map()
 * 
 * def py_calc_vir_N_to_1_map():             # <<<<<<<<<<<<<<
 *     calc_vir_N_to_1_map()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_57py_calc_vir_N_to_1_map(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_57py_calc_vir_N_to_1_map = {"py_calc_vir_N_to_1_map", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_57py_calc_vir_N_to_1_map, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_57py_calc_vir_N_to_1_map(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_vir_N_to_1_map (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_56py_calc_vir_N_to_1_map(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_56py_calc_vir_N_to_1_map(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_calc_vir_N_to_1_map", 0);

  /* "HFS_CythonGenerated.pyx":281
 * 
 * def py_calc_vir_N_to_1_map():
 *     calc_vir_N_to_1_map()             # <<<<<<<<<<<<<<
 * 
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):
 */
  HFS::calc_vir_N_to_1_map();

  /* "HFS_CythonGenerated.pyx":280
 *     calc_inv_exc_map()
 * 
 * def py_calc_vir_N_to_1_map():             # <<<<<<<<<<<<<<
 *     calc_vir_N_to_1_map()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":283
 *     calc_vir_N_to_1_map()
 * 
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return uvec_to_numpy(k_to_index(VAL1))
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_59py_k_to_index(PyObject *__pyx_self, PyObject *__pyx_v_val1); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_59py_k_to_index = {"py_k_to_index", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_59py_k_to_index, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_59py_k_to_index(PyObject *__pyx_self, PyObject *__pyx_v_val1) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_k_to_index (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 283, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_58py_k_to_index(__pyx_self, ((PyArrayObject *)__pyx_v_val1));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_58py_k_to_index(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1) {
  arma::vec __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_k_to_index", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 283, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":284
 * 
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     return uvec_to_numpy(k_to_index(VAL1))
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":285
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)
 *     return uvec_to_numpy(k_to_index(VAL1))             # <<<<<<<<<<<<<<
 * 
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_uvec_to_numpy(HFS::k_to_index(__pyx_v_VAL1))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":283
 *     calc_vir_N_to_1_map()
 * 
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return uvec_to_numpy(k_to_index(VAL1))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_k_to_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":287
 *     return uvec_to_numpy(k_to_index(VAL1))
 * 
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_mat_d(val1)
 *     return umat_to_numpy(k_to_index(VAL1))
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_61py_k_to_index(PyObject *__pyx_self, PyObject *__pyx_v_val1); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_61py_k_to_index = {"py_k_to_index", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_61py_k_to_index, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_61py_k_to_index(PyObject *__pyx_self, PyObject *__pyx_v_val1) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_k_to_index (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 287, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_60py_k_to_index(__pyx_self, ((PyArrayObject *)__pyx_v_val1));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_60py_k_to_index(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1) {
  arma::mat __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_k_to_index", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 287, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_val1.diminfo[1].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_val1.diminfo[1].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":288
 * 
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):
 *     VAL1 = numpy_to_mat_d(val1)             # <<<<<<<<<<<<<<
 *     return umat_to_numpy(k_to_index(VAL1))
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":289
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):
 *     VAL1 = numpy_to_mat_d(val1)
 *     return umat_to_numpy(k_to_index(VAL1))             # <<<<<<<<<<<<<<
 * 
 * def py_build_mattest():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_umat_to_numpy(HFS::k_to_index(__pyx_v_VAL1))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":287
 *     return uvec_to_numpy(k_to_index(VAL1))
 * 
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_mat_d(val1)
 *     return umat_to_numpy(k_to_index(VAL1))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_k_to_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":291
 *     return umat_to_numpy(k_to_index(VAL1))
 * 
 * def py_build_mattest():             # <<<<<<<<<<<<<<
 *     build_mattest()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_63py_build_mattest(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_63py_build_mattest = {"py_build_mattest", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_63py_build_mattest, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_63py_build_mattest(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_build_mattest (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_62py_build_mattest(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_62py_build_mattest(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_build_mattest", 0);

  /* "HFS_CythonGenerated.pyx":292
 * 
 * def py_build_mattest():
 *     build_mattest()             # <<<<<<<<<<<<<<
 * 
 * def py_matvec_prod_me():
 */
  HFS::build_mattest();

  /* "HFS_CythonGenerated.pyx":291
 *     return umat_to_numpy(k_to_index(VAL1))
 * 
 * def py_build_mattest():             # <<<<<<<<<<<<<<
 *     build_mattest()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":294
 *     build_mattest()
 * 
 * def py_matvec_prod_me():             # <<<<<<<<<<<<<<
 *     matvec_prod_me()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_65py_matvec_prod_me(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_65py_matvec_prod_me = {"py_matvec_prod_me", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_65py_matvec_prod_me, METH_NOARGS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_65py_matvec_prod_me(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_matvec_prod_me (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_64py_matvec_prod_me(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_64py_matvec_prod_me(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_matvec_prod_me", 0);

  /* "HFS_CythonGenerated.pyx":295
 * 
 * def py_matvec_prod_me():
 *     matvec_prod_me()             # <<<<<<<<<<<<<<
 * 
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):
 */
  HFS::matvec_prod_me();

  /* "HFS_CythonGenerated.pyx":294
 *     build_mattest()
 * 
 * def py_matvec_prod_me():             # <<<<<<<<<<<<<<
 *     matvec_prod_me()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":297
 *     matvec_prod_me()
 * 
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_67py_matvec_prod_3H(PyObject *__pyx_self, PyObject *__pyx_v_val1); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_67py_matvec_prod_3H = {"py_matvec_prod_3H", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_67py_matvec_prod_3H, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_67py_matvec_prod_3H(PyObject *__pyx_self, PyObject *__pyx_v_val1) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_matvec_prod_3H (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 297, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_66py_matvec_prod_3H(__pyx_self, ((PyArrayObject *)__pyx_v_val1));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_66py_matvec_prod_3H(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1) {
  arma::vec __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_matvec_prod_3H", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 297, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":298
 * 
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":299
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3H(VAL1))             # <<<<<<<<<<<<<<
 * 
 * def py_davidson_wrapper(int val1,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::matvec_prod_3H(__pyx_v_VAL1))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":297
 *     matvec_prod_me()
 * 
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_matvec_prod_3H", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":301
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 * 
 * def py_davidson_wrapper(int val1,             # <<<<<<<<<<<<<<
 *                         int val2,
 *                         int val3,
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_69py_davidson_wrapper(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_69py_davidson_wrapper = {"py_davidson_wrapper", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_69py_davidson_wrapper, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_69py_davidson_wrapper(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_val1;
  int __pyx_v_val2;
  int __pyx_v_val3;
  int __pyx_v_val4;
  PyArrayObject *__pyx_v_val5 = 0;
  float __pyx_v_val6;
  int __pyx_v_val7;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_davidson_wrapper (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,&__pyx_n_s_val3,&__pyx_n_s_val4,&__pyx_n_s_val5,&__pyx_n_s_val6,&__pyx_n_s_val7,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, 1); __PYX_ERR(1, 301, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, 2); __PYX_ERR(1, 301, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, 3); __PYX_ERR(1, 301, __pyx_L3_error)
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val5)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, 4); __PYX_ERR(1, 301, __pyx_L3_error)
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val6)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, 5); __PYX_ERR(1, 301, __pyx_L3_error)
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val7)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, 6); __PYX_ERR(1, 301, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_davidson_wrapper") < 0)) __PYX_ERR(1, 301, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_val1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_val1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 301, __pyx_L3_error)
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 302, __pyx_L3_error)
    __pyx_v_val3 = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_val3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 303, __pyx_L3_error)
    __pyx_v_val4 = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_val4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 304, __pyx_L3_error)
    __pyx_v_val5 = ((PyArrayObject *)values[4]);
    __pyx_v_val6 = __pyx_PyFloat_AsFloat(values[5]); if (unlikely((__pyx_v_val6 == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 306, __pyx_L3_error)
    __pyx_v_val7 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_val7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 307, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_davidson_wrapper", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 301, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_davidson_wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val5), __pyx_ptype_5numpy_ndarray, 1, "val5", 0))) __PYX_ERR(1, 305, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_68py_davidson_wrapper(__pyx_self, __pyx_v_val1, __pyx_v_val2, __pyx_v_val3, __pyx_v_val4, __pyx_v_val5, __pyx_v_val6, __pyx_v_val7);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_68py_davidson_wrapper(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val1, int __pyx_v_val2, int __pyx_v_val3, int __pyx_v_val4, PyArrayObject *__pyx_v_val5, float __pyx_v_val6, int __pyx_v_val7) {
  arma::mat __pyx_v_VAL5;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val5;
  __Pyx_Buffer __pyx_pybuffer_val5;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_davidson_wrapper", 0);
  __pyx_pybuffer_val5.pybuffer.buf = NULL;
  __pyx_pybuffer_val5.refcount = 0;
  __pyx_pybuffernd_val5.data = NULL;
  __pyx_pybuffernd_val5.rcbuffer = &__pyx_pybuffer_val5;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val5.rcbuffer->pybuffer, (PyObject*)__pyx_v_val5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 301, __pyx_L1_error)
  }
  __pyx_pybuffernd_val5.diminfo[0].strides = __pyx_pybuffernd_val5.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val5.diminfo[0].shape = __pyx_pybuffernd_val5.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_val5.diminfo[1].strides = __pyx_pybuffernd_val5.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_val5.diminfo[1].shape = __pyx_pybuffernd_val5.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":308
 *                         float val6,
 *                         int val7):
 *     VAL5 = numpy_to_mat_d(val5)             # <<<<<<<<<<<<<<
 *     davidson_wrapper(val1, val2, val3, val4, VAL5, val6, val7)
 * 
 */
  __pyx_v_VAL5 = __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(((PyArrayObject *)__pyx_v_val5));

  /* "HFS_CythonGenerated.pyx":309
 *                         int val7):
 *     VAL5 = numpy_to_mat_d(val5)
 *     davidson_wrapper(val1, val2, val3, val4, VAL5, val6, val7)             # <<<<<<<<<<<<<<
 * 
 * def py_kb_j_to_t(np.ndarray[double, ndim=1] val1,
 */
  HFS::davidson_wrapper(__pyx_v_val1, __pyx_v_val2, __pyx_v_val3, __pyx_v_val4, __pyx_v_VAL5, __pyx_v_val6, __pyx_v_val7);

  /* "HFS_CythonGenerated.pyx":301
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 * 
 * def py_davidson_wrapper(int val1,             # <<<<<<<<<<<<<<
 *                         int val2,
 *                         int val3,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val5.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_davidson_wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val5.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":311
 *     davidson_wrapper(val1, val2, val3, val4, VAL5, val6, val7)
 * 
 * def py_kb_j_to_t(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                  int val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_71py_kb_j_to_t(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_71py_kb_j_to_t = {"py_kb_j_to_t", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_71py_kb_j_to_t, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_71py_kb_j_to_t(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_val1 = 0;
  int __pyx_v_val2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_kb_j_to_t (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val1,&__pyx_n_s_val2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("py_kb_j_to_t", 1, 2, 2, 1); __PYX_ERR(1, 311, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "py_kb_j_to_t") < 0)) __PYX_ERR(1, 311, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_val1 = ((PyArrayObject *)values[0]);
    __pyx_v_val2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_val2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 312, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("py_kb_j_to_t", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 311, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_kb_j_to_t", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 311, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_70py_kb_j_to_t(__pyx_self, __pyx_v_val1, __pyx_v_val2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_70py_kb_j_to_t(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1, int __pyx_v_val2) {
  arma::vec __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_kb_j_to_t", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 311, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":313
 * def py_kb_j_to_t(np.ndarray[double, ndim=1] val1,
 *                  int val2):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     return kb_j_to_t(VAL1, val2)
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":314
 *                  int val2):
 *     VAL1 = numpy_to_vec_d(val1)
 *     return kb_j_to_t(VAL1, val2)             # <<<<<<<<<<<<<<
 * 
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(HFS::kb_j_to_t(__pyx_v_VAL1, __pyx_v_val2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":311
 *     davidson_wrapper(val1, val2, val3, val4, VAL5, val6, val7)
 * 
 * def py_kb_j_to_t(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                  int val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_kb_j_to_t", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":316
 *     return kb_j_to_t(VAL1, val2)
 * 
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_73py_matvec_prod_3A(PyObject *__pyx_self, PyObject *__pyx_v_val1); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_73py_matvec_prod_3A = {"py_matvec_prod_3A", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_73py_matvec_prod_3A, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_73py_matvec_prod_3A(PyObject *__pyx_self, PyObject *__pyx_v_val1) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_matvec_prod_3A (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 316, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_72py_matvec_prod_3A(__pyx_self, ((PyArrayObject *)__pyx_v_val1));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_72py_matvec_prod_3A(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1) {
  arma::vec __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_matvec_prod_3A", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 316, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":317
 * 
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":318
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3A(VAL1))             # <<<<<<<<<<<<<<
 * 
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::matvec_prod_3A(__pyx_v_VAL1))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":316
 *     return kb_j_to_t(VAL1, val2)
 * 
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_matvec_prod_3A", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":320
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 * 
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_75py_matvec_prod_3B(PyObject *__pyx_self, PyObject *__pyx_v_val1); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_75py_matvec_prod_3B = {"py_matvec_prod_3B", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_75py_matvec_prod_3B, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_75py_matvec_prod_3B(PyObject *__pyx_self, PyObject *__pyx_v_val1) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_matvec_prod_3B (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_val1), __pyx_ptype_5numpy_ndarray, 1, "val1", 0))) __PYX_ERR(1, 320, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_74py_matvec_prod_3B(__pyx_self, ((PyArrayObject *)__pyx_v_val1));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_74py_matvec_prod_3B(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_val1) {
  arma::vec __pyx_v_VAL1;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_val1;
  __Pyx_Buffer __pyx_pybuffer_val1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_matvec_prod_3B", 0);
  __pyx_pybuffer_val1.pybuffer.buf = NULL;
  __pyx_pybuffer_val1.refcount = 0;
  __pyx_pybuffernd_val1.data = NULL;
  __pyx_pybuffernd_val1.rcbuffer = &__pyx_pybuffer_val1;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_val1.rcbuffer->pybuffer, (PyObject*)__pyx_v_val1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 320, __pyx_L1_error)
  }
  __pyx_pybuffernd_val1.diminfo[0].strides = __pyx_pybuffernd_val1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_val1.diminfo[0].shape = __pyx_pybuffernd_val1.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":321
 * 
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 * 
 */
  __pyx_v_VAL1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_val1));

  /* "HFS_CythonGenerated.pyx":322
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3B(VAL1))             # <<<<<<<<<<<<<<
 * 
 * def py_occ_idx_to_k(int val):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::matvec_prod_3B(__pyx_v_VAL1))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":320
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 * 
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.py_matvec_prod_3B", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_val1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":324
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 * 
 * def py_occ_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_77py_occ_idx_to_k(PyObject *__pyx_self, PyObject *__pyx_arg_val); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_77py_occ_idx_to_k = {"py_occ_idx_to_k", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_77py_occ_idx_to_k, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_77py_occ_idx_to_k(PyObject *__pyx_self, PyObject *__pyx_arg_val) {
  int __pyx_v_val;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_occ_idx_to_k (wrapper)", 0);
  assert(__pyx_arg_val); {
    __pyx_v_val = __Pyx_PyInt_As_int(__pyx_arg_val); if (unlikely((__pyx_v_val == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 324, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_occ_idx_to_k", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_76py_occ_idx_to_k(__pyx_self, ((int)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_76py_occ_idx_to_k(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_occ_idx_to_k", 0);

  /* "HFS_CythonGenerated.pyx":325
 * 
 * def py_occ_idx_to_k(int val):
 *     return vec_to_numpy(occ_idx_to_k(val))             # <<<<<<<<<<<<<<
 * 
 * def py_vir_idx_to_k(int val):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::occ_idx_to_k(__pyx_v_val))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":324
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 * 
 * def py_occ_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_occ_idx_to_k", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":327
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 * def py_vir_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(vir_idx_to_k(val))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_79py_vir_idx_to_k(PyObject *__pyx_self, PyObject *__pyx_arg_val); /*proto*/
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_79py_vir_idx_to_k = {"py_vir_idx_to_k", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_79py_vir_idx_to_k, METH_O, 0};
static PyObject *__pyx_pw_19HFS_CythonGenerated_79py_vir_idx_to_k(PyObject *__pyx_self, PyObject *__pyx_arg_val) {
  int __pyx_v_val;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("py_vir_idx_to_k (wrapper)", 0);
  assert(__pyx_arg_val); {
    __pyx_v_val = __Pyx_PyInt_As_int(__pyx_arg_val); if (unlikely((__pyx_v_val == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 327, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.py_vir_idx_to_k", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_78py_vir_idx_to_k(__pyx_self, ((int)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_78py_vir_idx_to_k(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("py_vir_idx_to_k", 0);

  /* "HFS_CythonGenerated.pyx":328
 * 
 * def py_vir_idx_to_k(int val):
 *     return vec_to_numpy(vir_idx_to_k(val))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::vir_idx_to_k(__pyx_v_val))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":327
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 * def py_vir_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(vir_idx_to_k(val))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.py_vir_idx_to_k", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":335
 * #                         Generated Properties                         #
 * ########################################################################
 * def get_bzone_length():             # <<<<<<<<<<<<<<
 *     """(float) Get bzone_length"""
 *     global bzone_length
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_81get_bzone_length(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_80get_bzone_length[] = "(float) Get bzone_length";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_81get_bzone_length = {"get_bzone_length", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_81get_bzone_length, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_80get_bzone_length};
static PyObject *__pyx_pw_19HFS_CythonGenerated_81get_bzone_length(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_bzone_length (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_80get_bzone_length(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_80get_bzone_length(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_bzone_length", 0);

  /* "HFS_CythonGenerated.pyx":338
 *     """(float) Get bzone_length"""
 *     global bzone_length
 *     return bzone_length             # <<<<<<<<<<<<<<
 * def set_bzone_length(value):
 *     """(o) Set bzone_length"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::bzone_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":335
 * #                         Generated Properties                         #
 * ########################################################################
 * def get_bzone_length():             # <<<<<<<<<<<<<<
 *     """(float) Get bzone_length"""
 *     global bzone_length
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_bzone_length", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":339
 *     global bzone_length
 *     return bzone_length
 * def set_bzone_length(value):             # <<<<<<<<<<<<<<
 *     """(o) Set bzone_length"""
 *     global bzone_length
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_83set_bzone_length(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_82set_bzone_length[] = "(o) Set bzone_length";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_83set_bzone_length = {"set_bzone_length", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_83set_bzone_length, METH_O, __pyx_doc_19HFS_CythonGenerated_82set_bzone_length};
static PyObject *__pyx_pw_19HFS_CythonGenerated_83set_bzone_length(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_bzone_length (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_82set_bzone_length(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_82set_bzone_length(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_bzone_length", 0);

  /* "HFS_CythonGenerated.pyx":342
 *     """(o) Set bzone_length"""
 *     global bzone_length
 *     bzone_length = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 342, __pyx_L1_error)
  HFS::bzone_length = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":339
 *     global bzone_length
 *     return bzone_length
 * def set_bzone_length(value):             # <<<<<<<<<<<<<<
 *     """(o) Set bzone_length"""
 *     global bzone_length
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_bzone_length", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":345
 * 
 * 
 * def get_vol():             # <<<<<<<<<<<<<<
 *     """(float) Get vol"""
 *     global vol
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_85get_vol(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_84get_vol[] = "(float) Get vol";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_85get_vol = {"get_vol", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_85get_vol, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_84get_vol};
static PyObject *__pyx_pw_19HFS_CythonGenerated_85get_vol(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_vol (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_84get_vol(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_84get_vol(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_vol", 0);

  /* "HFS_CythonGenerated.pyx":348
 *     """(float) Get vol"""
 *     global vol
 *     return vol             # <<<<<<<<<<<<<<
 * def set_vol(value):
 *     """(o) Set vol"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::vol); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":345
 * 
 * 
 * def get_vol():             # <<<<<<<<<<<<<<
 *     """(float) Get vol"""
 *     global vol
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_vol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":349
 *     global vol
 *     return vol
 * def set_vol(value):             # <<<<<<<<<<<<<<
 *     """(o) Set vol"""
 *     global vol
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_87set_vol(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_86set_vol[] = "(o) Set vol";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_87set_vol = {"set_vol", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_87set_vol, METH_O, __pyx_doc_19HFS_CythonGenerated_86set_vol};
static PyObject *__pyx_pw_19HFS_CythonGenerated_87set_vol(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vol (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_86set_vol(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_86set_vol(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_vol", 0);

  /* "HFS_CythonGenerated.pyx":352
 *     """(o) Set vol"""
 *     global vol
 *     vol = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 352, __pyx_L1_error)
  HFS::vol = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":349
 *     global vol
 *     return vol
 * def set_vol(value):             # <<<<<<<<<<<<<<
 *     """(o) Set vol"""
 *     global vol
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_vol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":355
 * 
 * 
 * def get_rs():             # <<<<<<<<<<<<<<
 *     """(float) Get rs"""
 *     global rs
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_89get_rs(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_88get_rs[] = "(float) Get rs";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_89get_rs = {"get_rs", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_89get_rs, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_88get_rs};
static PyObject *__pyx_pw_19HFS_CythonGenerated_89get_rs(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_rs (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_88get_rs(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_88get_rs(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_rs", 0);

  /* "HFS_CythonGenerated.pyx":358
 *     """(float) Get rs"""
 *     global rs
 *     return rs             # <<<<<<<<<<<<<<
 * def set_rs(value):
 *     """(o) Set rs"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::rs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":355
 * 
 * 
 * def get_rs():             # <<<<<<<<<<<<<<
 *     """(float) Get rs"""
 *     global rs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_rs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":359
 *     global rs
 *     return rs
 * def set_rs(value):             # <<<<<<<<<<<<<<
 *     """(o) Set rs"""
 *     global rs
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_91set_rs(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_90set_rs[] = "(o) Set rs";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_91set_rs = {"set_rs", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_91set_rs, METH_O, __pyx_doc_19HFS_CythonGenerated_90set_rs};
static PyObject *__pyx_pw_19HFS_CythonGenerated_91set_rs(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rs (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_90set_rs(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_90set_rs(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_rs", 0);

  /* "HFS_CythonGenerated.pyx":362
 *     """(o) Set rs"""
 *     global rs
 *     rs = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 362, __pyx_L1_error)
  HFS::rs = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":359
 *     global rs
 *     return rs
 * def set_rs(value):             # <<<<<<<<<<<<<<
 *     """(o) Set rs"""
 *     global rs
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_rs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":365
 * 
 * 
 * def get_kf():             # <<<<<<<<<<<<<<
 *     """(float) Get kf"""
 *     global kf
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_93get_kf(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_92get_kf[] = "(float) Get kf";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_93get_kf = {"get_kf", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_93get_kf, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_92get_kf};
static PyObject *__pyx_pw_19HFS_CythonGenerated_93get_kf(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_kf (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_92get_kf(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_92get_kf(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_kf", 0);

  /* "HFS_CythonGenerated.pyx":368
 *     """(float) Get kf"""
 *     global kf
 *     return kf             # <<<<<<<<<<<<<<
 * def set_kf(value):
 *     """(o) Set kf"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::kf); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":365
 * 
 * 
 * def get_kf():             # <<<<<<<<<<<<<<
 *     """(float) Get kf"""
 *     global kf
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_kf", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":369
 *     global kf
 *     return kf
 * def set_kf(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kf"""
 *     global kf
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_95set_kf(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_94set_kf[] = "(o) Set kf";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_95set_kf = {"set_kf", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_95set_kf, METH_O, __pyx_doc_19HFS_CythonGenerated_94set_kf};
static PyObject *__pyx_pw_19HFS_CythonGenerated_95set_kf(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kf (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_94set_kf(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_94set_kf(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_kf", 0);

  /* "HFS_CythonGenerated.pyx":372
 *     """(o) Set kf"""
 *     global kf
 *     kf = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 372, __pyx_L1_error)
  HFS::kf = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":369
 *     global kf
 *     return kf
 * def set_kf(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kf"""
 *     global kf
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_kf", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":375
 * 
 * 
 * def get_kmax():             # <<<<<<<<<<<<<<
 *     """(float) Get kmax"""
 *     global kmax
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_97get_kmax(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_96get_kmax[] = "(float) Get kmax";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_97get_kmax = {"get_kmax", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_97get_kmax, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_96get_kmax};
static PyObject *__pyx_pw_19HFS_CythonGenerated_97get_kmax(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_kmax (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_96get_kmax(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_96get_kmax(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_kmax", 0);

  /* "HFS_CythonGenerated.pyx":378
 *     """(float) Get kmax"""
 *     global kmax
 *     return kmax             # <<<<<<<<<<<<<<
 * def set_kmax(value):
 *     """(o) Set kmax"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::kmax); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":375
 * 
 * 
 * def get_kmax():             # <<<<<<<<<<<<<<
 *     """(float) Get kmax"""
 *     global kmax
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_kmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":379
 *     global kmax
 *     return kmax
 * def set_kmax(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kmax"""
 *     global kmax
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_99set_kmax(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_98set_kmax[] = "(o) Set kmax";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_99set_kmax = {"set_kmax", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_99set_kmax, METH_O, __pyx_doc_19HFS_CythonGenerated_98set_kmax};
static PyObject *__pyx_pw_19HFS_CythonGenerated_99set_kmax(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kmax (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_98set_kmax(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_98set_kmax(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_kmax", 0);

  /* "HFS_CythonGenerated.pyx":382
 *     """(o) Set kmax"""
 *     global kmax
 *     kmax = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 382, __pyx_L1_error)
  HFS::kmax = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":379
 *     global kmax
 *     return kmax
 * def set_kmax(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kmax"""
 *     global kmax
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_kmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":385
 * 
 * 
 * def get_fermi_energy():             # <<<<<<<<<<<<<<
 *     """(float) Get fermi_energy"""
 *     global fermi_energy
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_101get_fermi_energy(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_100get_fermi_energy[] = "(float) Get fermi_energy";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_101get_fermi_energy = {"get_fermi_energy", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_101get_fermi_energy, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_100get_fermi_energy};
static PyObject *__pyx_pw_19HFS_CythonGenerated_101get_fermi_energy(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_fermi_energy (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_100get_fermi_energy(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_100get_fermi_energy(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_fermi_energy", 0);

  /* "HFS_CythonGenerated.pyx":388
 *     """(float) Get fermi_energy"""
 *     global fermi_energy
 *     return fermi_energy             # <<<<<<<<<<<<<<
 * def set_fermi_energy(value):
 *     """(o) Set fermi_energy"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::fermi_energy); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":385
 * 
 * 
 * def get_fermi_energy():             # <<<<<<<<<<<<<<
 *     """(float) Get fermi_energy"""
 *     global fermi_energy
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_fermi_energy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":389
 *     global fermi_energy
 *     return fermi_energy
 * def set_fermi_energy(value):             # <<<<<<<<<<<<<<
 *     """(o) Set fermi_energy"""
 *     global fermi_energy
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_103set_fermi_energy(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_102set_fermi_energy[] = "(o) Set fermi_energy";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_103set_fermi_energy = {"set_fermi_energy", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_103set_fermi_energy, METH_O, __pyx_doc_19HFS_CythonGenerated_102set_fermi_energy};
static PyObject *__pyx_pw_19HFS_CythonGenerated_103set_fermi_energy(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fermi_energy (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_102set_fermi_energy(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_102set_fermi_energy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_fermi_energy", 0);

  /* "HFS_CythonGenerated.pyx":392
 *     """(o) Set fermi_energy"""
 *     global fermi_energy
 *     fermi_energy = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 392, __pyx_L1_error)
  HFS::fermi_energy = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":389
 *     global fermi_energy
 *     return fermi_energy
 * def set_fermi_energy(value):             # <<<<<<<<<<<<<<
 *     """(o) Set fermi_energy"""
 *     global fermi_energy
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_fermi_energy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":395
 * 
 * 
 * def get_two_e_const():             # <<<<<<<<<<<<<<
 *     """(float) Get two_e_const"""
 *     global two_e_const
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_105get_two_e_const(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_104get_two_e_const[] = "(float) Get two_e_const";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_105get_two_e_const = {"get_two_e_const", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_105get_two_e_const, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_104get_two_e_const};
static PyObject *__pyx_pw_19HFS_CythonGenerated_105get_two_e_const(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_two_e_const (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_104get_two_e_const(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_104get_two_e_const(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_two_e_const", 0);

  /* "HFS_CythonGenerated.pyx":398
 *     """(float) Get two_e_const"""
 *     global two_e_const
 *     return two_e_const             # <<<<<<<<<<<<<<
 * def set_two_e_const(value):
 *     """(o) Set two_e_const"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::two_e_const); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":395
 * 
 * 
 * def get_two_e_const():             # <<<<<<<<<<<<<<
 *     """(float) Get two_e_const"""
 *     global two_e_const
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_two_e_const", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":399
 *     global two_e_const
 *     return two_e_const
 * def set_two_e_const(value):             # <<<<<<<<<<<<<<
 *     """(o) Set two_e_const"""
 *     global two_e_const
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_107set_two_e_const(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_106set_two_e_const[] = "(o) Set two_e_const";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_107set_two_e_const = {"set_two_e_const", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_107set_two_e_const, METH_O, __pyx_doc_19HFS_CythonGenerated_106set_two_e_const};
static PyObject *__pyx_pw_19HFS_CythonGenerated_107set_two_e_const(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_two_e_const (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_106set_two_e_const(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_106set_two_e_const(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_two_e_const", 0);

  /* "HFS_CythonGenerated.pyx":402
 *     """(o) Set two_e_const"""
 *     global two_e_const
 *     two_e_const = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 402, __pyx_L1_error)
  HFS::two_e_const = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":399
 *     global two_e_const
 *     return two_e_const
 * def set_two_e_const(value):             # <<<<<<<<<<<<<<
 *     """(o) Set two_e_const"""
 *     global two_e_const
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_two_e_const", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":405
 * 
 * 
 * def get_deltaK():             # <<<<<<<<<<<<<<
 *     """(float) Get deltaK"""
 *     global deltaK
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_109get_deltaK(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_108get_deltaK[] = "(float) Get deltaK";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_109get_deltaK = {"get_deltaK", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_109get_deltaK, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_108get_deltaK};
static PyObject *__pyx_pw_19HFS_CythonGenerated_109get_deltaK(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_deltaK (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_108get_deltaK(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_108get_deltaK(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_deltaK", 0);

  /* "HFS_CythonGenerated.pyx":408
 *     """(float) Get deltaK"""
 *     global deltaK
 *     return deltaK             # <<<<<<<<<<<<<<
 * def set_deltaK(value):
 *     """(o) Set deltaK"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(HFS::deltaK); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":405
 * 
 * 
 * def get_deltaK():             # <<<<<<<<<<<<<<
 *     """(float) Get deltaK"""
 *     global deltaK
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_deltaK", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":409
 *     global deltaK
 *     return deltaK
 * def set_deltaK(value):             # <<<<<<<<<<<<<<
 *     """(o) Set deltaK"""
 *     global deltaK
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_111set_deltaK(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_110set_deltaK[] = "(o) Set deltaK";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_111set_deltaK = {"set_deltaK", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_111set_deltaK, METH_O, __pyx_doc_19HFS_CythonGenerated_110set_deltaK};
static PyObject *__pyx_pw_19HFS_CythonGenerated_111set_deltaK(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_deltaK (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_110set_deltaK(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_110set_deltaK(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("set_deltaK", 0);

  /* "HFS_CythonGenerated.pyx":412
 *     """(o) Set deltaK"""
 *     global deltaK
 *     deltaK = float(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_value); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) __PYX_ERR(1, 412, __pyx_L1_error)
  HFS::deltaK = __pyx_t_1;

  /* "HFS_CythonGenerated.pyx":409
 *     global deltaK
 *     return deltaK
 * def set_deltaK(value):             # <<<<<<<<<<<<<<
 *     """(o) Set deltaK"""
 *     global deltaK
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("HFS_CythonGenerated.set_deltaK", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":415
 * 
 * 
 * def get_Nocc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nocc"""
 *     global Nocc
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_113get_Nocc(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_112get_Nocc[] = "(int) Get Nocc";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_113get_Nocc = {"get_Nocc", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_113get_Nocc, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_112get_Nocc};
static PyObject *__pyx_pw_19HFS_CythonGenerated_113get_Nocc(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_Nocc (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_112get_Nocc(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_112get_Nocc(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_Nocc", 0);

  /* "HFS_CythonGenerated.pyx":418
 *     """(int) Get Nocc"""
 *     global Nocc
 *     return Nocc             # <<<<<<<<<<<<<<
 * def set_Nocc(value):
 *     """(t) Set Nocc"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(HFS::Nocc); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 418, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":415
 * 
 * 
 * def get_Nocc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nocc"""
 *     global Nocc
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_Nocc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":419
 *     global Nocc
 *     return Nocc
 * def set_Nocc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nocc"""
 *     global Nocc
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_115set_Nocc(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_114set_Nocc[] = "(t) Set Nocc";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_115set_Nocc = {"set_Nocc", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_115set_Nocc, METH_O, __pyx_doc_19HFS_CythonGenerated_114set_Nocc};
static PyObject *__pyx_pw_19HFS_CythonGenerated_115set_Nocc(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_Nocc (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_114set_Nocc(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_114set_Nocc(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned PY_LONG_LONG __pyx_t_2;
  __Pyx_RefNannySetupContext("set_Nocc", 0);

  /* "HFS_CythonGenerated.pyx":422
 *     """(t) Set Nocc"""
 *     global Nocc
 *     Nocc = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_unsigned_PY_LONG_LONG(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned PY_LONG_LONG)-1) && PyErr_Occurred())) __PYX_ERR(1, 422, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::Nocc = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":419
 *     global Nocc
 *     return Nocc
 * def set_Nocc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nocc"""
 *     global Nocc
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_Nocc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":425
 * 
 * 
 * def get_Nvir():             # <<<<<<<<<<<<<<
 *     """(int) Get Nvir"""
 *     global Nvir
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_117get_Nvir(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_116get_Nvir[] = "(int) Get Nvir";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_117get_Nvir = {"get_Nvir", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_117get_Nvir, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_116get_Nvir};
static PyObject *__pyx_pw_19HFS_CythonGenerated_117get_Nvir(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_Nvir (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_116get_Nvir(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_116get_Nvir(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_Nvir", 0);

  /* "HFS_CythonGenerated.pyx":428
 *     """(int) Get Nvir"""
 *     global Nvir
 *     return Nvir             # <<<<<<<<<<<<<<
 * def set_Nvir(value):
 *     """(t) Set Nvir"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(HFS::Nvir); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":425
 * 
 * 
 * def get_Nvir():             # <<<<<<<<<<<<<<
 *     """(int) Get Nvir"""
 *     global Nvir
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_Nvir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":429
 *     global Nvir
 *     return Nvir
 * def set_Nvir(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nvir"""
 *     global Nvir
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_119set_Nvir(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_118set_Nvir[] = "(t) Set Nvir";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_119set_Nvir = {"set_Nvir", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_119set_Nvir, METH_O, __pyx_doc_19HFS_CythonGenerated_118set_Nvir};
static PyObject *__pyx_pw_19HFS_CythonGenerated_119set_Nvir(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_Nvir (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_118set_Nvir(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_118set_Nvir(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned PY_LONG_LONG __pyx_t_2;
  __Pyx_RefNannySetupContext("set_Nvir", 0);

  /* "HFS_CythonGenerated.pyx":432
 *     """(t) Set Nvir"""
 *     global Nvir
 *     Nvir = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_unsigned_PY_LONG_LONG(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned PY_LONG_LONG)-1) && PyErr_Occurred())) __PYX_ERR(1, 432, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::Nvir = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":429
 *     global Nvir
 *     return Nvir
 * def set_Nvir(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nvir"""
 *     global Nvir
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_Nvir", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":435
 * 
 * 
 * def get_Nexc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nexc"""
 *     global Nexc
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_121get_Nexc(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_120get_Nexc[] = "(int) Get Nexc";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_121get_Nexc = {"get_Nexc", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_121get_Nexc, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_120get_Nexc};
static PyObject *__pyx_pw_19HFS_CythonGenerated_121get_Nexc(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_Nexc (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_120get_Nexc(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_120get_Nexc(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_Nexc", 0);

  /* "HFS_CythonGenerated.pyx":438
 *     """(int) Get Nexc"""
 *     global Nexc
 *     return Nexc             # <<<<<<<<<<<<<<
 * def set_Nexc(value):
 *     """(t) Set Nexc"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(HFS::Nexc); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":435
 * 
 * 
 * def get_Nexc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nexc"""
 *     global Nexc
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_Nexc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":439
 *     global Nexc
 *     return Nexc
 * def set_Nexc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nexc"""
 *     global Nexc
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_123set_Nexc(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_122set_Nexc[] = "(t) Set Nexc";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_123set_Nexc = {"set_Nexc", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_123set_Nexc, METH_O, __pyx_doc_19HFS_CythonGenerated_122set_Nexc};
static PyObject *__pyx_pw_19HFS_CythonGenerated_123set_Nexc(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_Nexc (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_122set_Nexc(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_122set_Nexc(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned PY_LONG_LONG __pyx_t_2;
  __Pyx_RefNannySetupContext("set_Nexc", 0);

  /* "HFS_CythonGenerated.pyx":442
 *     """(t) Set Nexc"""
 *     global Nexc
 *     Nexc = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_unsigned_PY_LONG_LONG(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned PY_LONG_LONG)-1) && PyErr_Occurred())) __PYX_ERR(1, 442, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::Nexc = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":439
 *     global Nexc
 *     return Nexc
 * def set_Nexc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nexc"""
 *     global Nexc
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_Nexc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":445
 * 
 * 
 * def get_N_elec():             # <<<<<<<<<<<<<<
 *     """(int) Get N_elec"""
 *     global N_elec
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_125get_N_elec(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_124get_N_elec[] = "(int) Get N_elec";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_125get_N_elec = {"get_N_elec", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_125get_N_elec, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_124get_N_elec};
static PyObject *__pyx_pw_19HFS_CythonGenerated_125get_N_elec(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_N_elec (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_124get_N_elec(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_124get_N_elec(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_N_elec", 0);

  /* "HFS_CythonGenerated.pyx":448
 *     """(int) Get N_elec"""
 *     global N_elec
 *     return N_elec             # <<<<<<<<<<<<<<
 * def set_N_elec(value):
 *     """(t) Set N_elec"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(HFS::N_elec); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":445
 * 
 * 
 * def get_N_elec():             # <<<<<<<<<<<<<<
 *     """(int) Get N_elec"""
 *     global N_elec
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_N_elec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":449
 *     global N_elec
 *     return N_elec
 * def set_N_elec(value):             # <<<<<<<<<<<<<<
 *     """(t) Set N_elec"""
 *     global N_elec
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_127set_N_elec(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_126set_N_elec[] = "(t) Set N_elec";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_127set_N_elec = {"set_N_elec", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_127set_N_elec, METH_O, __pyx_doc_19HFS_CythonGenerated_126set_N_elec};
static PyObject *__pyx_pw_19HFS_CythonGenerated_127set_N_elec(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_N_elec (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_126set_N_elec(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_126set_N_elec(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned PY_LONG_LONG __pyx_t_2;
  __Pyx_RefNannySetupContext("set_N_elec", 0);

  /* "HFS_CythonGenerated.pyx":452
 *     """(t) Set N_elec"""
 *     global N_elec
 *     N_elec = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_unsigned_PY_LONG_LONG(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned PY_LONG_LONG)-1) && PyErr_Occurred())) __PYX_ERR(1, 452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::N_elec = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":449
 *     global N_elec
 *     return N_elec
 * def set_N_elec(value):             # <<<<<<<<<<<<<<
 *     """(t) Set N_elec"""
 *     global N_elec
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_N_elec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":455
 * 
 * 
 * def get_Nk():             # <<<<<<<<<<<<<<
 *     """(int) Get Nk"""
 *     global Nk
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_129get_Nk(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_128get_Nk[] = "(int) Get Nk";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_129get_Nk = {"get_Nk", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_129get_Nk, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_128get_Nk};
static PyObject *__pyx_pw_19HFS_CythonGenerated_129get_Nk(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_Nk (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_128get_Nk(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_128get_Nk(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_Nk", 0);

  /* "HFS_CythonGenerated.pyx":458
 *     """(int) Get Nk"""
 *     global Nk
 *     return Nk             # <<<<<<<<<<<<<<
 * def set_Nk(value):
 *     """(t) Set Nk"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(HFS::Nk); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":455
 * 
 * 
 * def get_Nk():             # <<<<<<<<<<<<<<
 *     """(int) Get Nk"""
 *     global Nk
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_Nk", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":459
 *     global Nk
 *     return Nk
 * def set_Nk(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nk"""
 *     global Nk
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_131set_Nk(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_130set_Nk[] = "(t) Set Nk";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_131set_Nk = {"set_Nk", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_131set_Nk, METH_O, __pyx_doc_19HFS_CythonGenerated_130set_Nk};
static PyObject *__pyx_pw_19HFS_CythonGenerated_131set_Nk(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_Nk (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_130set_Nk(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_130set_Nk(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned PY_LONG_LONG __pyx_t_2;
  __Pyx_RefNannySetupContext("set_Nk", 0);

  /* "HFS_CythonGenerated.pyx":462
 *     """(t) Set Nk"""
 *     global Nk
 *     Nk = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_unsigned_PY_LONG_LONG(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned PY_LONG_LONG)-1) && PyErr_Occurred())) __PYX_ERR(1, 462, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::Nk = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":459
 *     global Nk
 *     return Nk
 * def set_Nk(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nk"""
 *     global Nk
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_Nk", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":465
 * 
 * 
 * def get_ndim():             # <<<<<<<<<<<<<<
 *     """(int) Get ndim"""
 *     global ndim
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_133get_ndim(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_132get_ndim[] = "(int) Get ndim";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_133get_ndim = {"get_ndim", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_133get_ndim, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_132get_ndim};
static PyObject *__pyx_pw_19HFS_CythonGenerated_133get_ndim(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_ndim (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_132get_ndim(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_132get_ndim(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_ndim", 0);

  /* "HFS_CythonGenerated.pyx":468
 *     """(int) Get ndim"""
 *     global ndim
 *     return ndim             # <<<<<<<<<<<<<<
 * def set_ndim(value):
 *     """(t) Set ndim"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(HFS::ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":465
 * 
 * 
 * def get_ndim():             # <<<<<<<<<<<<<<
 *     """(int) Get ndim"""
 *     global ndim
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_ndim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":469
 *     global ndim
 *     return ndim
 * def set_ndim(value):             # <<<<<<<<<<<<<<
 *     """(t) Set ndim"""
 *     global ndim
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_135set_ndim(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_134set_ndim[] = "(t) Set ndim";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_135set_ndim = {"set_ndim", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_135set_ndim, METH_O, __pyx_doc_19HFS_CythonGenerated_134set_ndim};
static PyObject *__pyx_pw_19HFS_CythonGenerated_135set_ndim(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_ndim (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_134set_ndim(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_134set_ndim(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_ndim", 0);

  /* "HFS_CythonGenerated.pyx":472
 *     """(t) Set ndim"""
 *     global ndim
 *     ndim = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 472, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::ndim = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":469
 *     global ndim
 *     return ndim
 * def set_ndim(value):             # <<<<<<<<<<<<<<
 *     """(t) Set ndim"""
 *     global ndim
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_ndim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":475
 * 
 * 
 * def get_occ_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get occ_energies"""
 *     global occ_energies
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_137get_occ_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_136get_occ_energies[] = "(np.ndarray[double, ndim=1]) Get occ_energies";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_137get_occ_energies = {"get_occ_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_137get_occ_energies, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_136get_occ_energies};
static PyObject *__pyx_pw_19HFS_CythonGenerated_137get_occ_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_occ_energies (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_136get_occ_energies(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_136get_occ_energies(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_occ_energies", 0);

  /* "HFS_CythonGenerated.pyx":478
 *     """(np.ndarray[double, ndim=1]) Get occ_energies"""
 *     global occ_energies
 *     return vec_to_numpy(occ_energies)             # <<<<<<<<<<<<<<
 * def set_occ_energies(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::occ_energies)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":475
 * 
 * 
 * def get_occ_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get occ_energies"""
 *     global occ_energies
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_occ_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":479
 *     global occ_energies
 *     return vec_to_numpy(occ_energies)
 * def set_occ_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set occ_energies"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_139set_occ_energies(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_138set_occ_energies[] = "(np.ndarray[double, ndim=1]) Set occ_energies";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_139set_occ_energies = {"set_occ_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_139set_occ_energies, METH_O, __pyx_doc_19HFS_CythonGenerated_138set_occ_energies};
static PyObject *__pyx_pw_19HFS_CythonGenerated_139set_occ_energies(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_occ_energies (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 479, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_138set_occ_energies(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_138set_occ_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_occ_energies", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 479, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":483
 *     """(np.ndarray[double, ndim=1]) Set occ_energies"""
 *     global occ_energies
 *     occ_energies = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::occ_energies = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":479
 *     global occ_energies
 *     return vec_to_numpy(occ_energies)
 * def set_occ_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set occ_energies"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_occ_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":486
 * 
 * 
 * def get_vir_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get vir_energies"""
 *     global vir_energies
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_141get_vir_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_140get_vir_energies[] = "(np.ndarray[double, ndim=1]) Get vir_energies";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_141get_vir_energies = {"get_vir_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_141get_vir_energies, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_140get_vir_energies};
static PyObject *__pyx_pw_19HFS_CythonGenerated_141get_vir_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_vir_energies (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_140get_vir_energies(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_140get_vir_energies(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_vir_energies", 0);

  /* "HFS_CythonGenerated.pyx":489
 *     """(np.ndarray[double, ndim=1]) Get vir_energies"""
 *     global vir_energies
 *     return vec_to_numpy(vir_energies)             # <<<<<<<<<<<<<<
 * def set_vir_energies(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::vir_energies)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":486
 * 
 * 
 * def get_vir_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get vir_energies"""
 *     global vir_energies
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_vir_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":490
 *     global vir_energies
 *     return vec_to_numpy(vir_energies)
 * def set_vir_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set vir_energies"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_143set_vir_energies(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_142set_vir_energies[] = "(np.ndarray[double, ndim=1]) Set vir_energies";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_143set_vir_energies = {"set_vir_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_143set_vir_energies, METH_O, __pyx_doc_19HFS_CythonGenerated_142set_vir_energies};
static PyObject *__pyx_pw_19HFS_CythonGenerated_143set_vir_energies(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vir_energies (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 490, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_142set_vir_energies(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_142set_vir_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vir_energies", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 490, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":494
 *     """(np.ndarray[double, ndim=1]) Set vir_energies"""
 *     global vir_energies
 *     vir_energies = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::vir_energies = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":490
 *     global vir_energies
 *     return vec_to_numpy(vir_energies)
 * def set_vir_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set vir_energies"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_vir_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":497
 * 
 * 
 * def get_exc_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get exc_energies"""
 *     global exc_energies
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_145get_exc_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_144get_exc_energies[] = "(np.ndarray[double, ndim=1]) Get exc_energies";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_145get_exc_energies = {"get_exc_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_145get_exc_energies, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_144get_exc_energies};
static PyObject *__pyx_pw_19HFS_CythonGenerated_145get_exc_energies(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_exc_energies (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_144get_exc_energies(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_144get_exc_energies(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_exc_energies", 0);

  /* "HFS_CythonGenerated.pyx":500
 *     """(np.ndarray[double, ndim=1]) Get exc_energies"""
 *     global exc_energies
 *     return vec_to_numpy(exc_energies)             # <<<<<<<<<<<<<<
 * def set_exc_energies(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::exc_energies)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 500, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":497
 * 
 * 
 * def get_exc_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get exc_energies"""
 *     global exc_energies
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_exc_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":501
 *     global exc_energies
 *     return vec_to_numpy(exc_energies)
 * def set_exc_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set exc_energies"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_147set_exc_energies(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_146set_exc_energies[] = "(np.ndarray[double, ndim=1]) Set exc_energies";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_147set_exc_energies = {"set_exc_energies", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_147set_exc_energies, METH_O, __pyx_doc_19HFS_CythonGenerated_146set_exc_energies};
static PyObject *__pyx_pw_19HFS_CythonGenerated_147set_exc_energies(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_exc_energies (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 501, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_146set_exc_energies(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_146set_exc_energies(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_exc_energies", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 501, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":505
 *     """(np.ndarray[double, ndim=1]) Set exc_energies"""
 *     global exc_energies
 *     exc_energies = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::exc_energies = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":501
 *     global exc_energies
 *     return vec_to_numpy(exc_energies)
 * def set_exc_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set exc_energies"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_exc_energies", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":508
 * 
 * 
 * def get_kgrid():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get kgrid"""
 *     global kgrid
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_149get_kgrid(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_148get_kgrid[] = "(np.ndarray[double, ndim=1]) Get kgrid";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_149get_kgrid = {"get_kgrid", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_149get_kgrid, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_148get_kgrid};
static PyObject *__pyx_pw_19HFS_CythonGenerated_149get_kgrid(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_kgrid (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_148get_kgrid(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_148get_kgrid(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_kgrid", 0);

  /* "HFS_CythonGenerated.pyx":511
 *     """(np.ndarray[double, ndim=1]) Get kgrid"""
 *     global kgrid
 *     return vec_to_numpy(kgrid)             # <<<<<<<<<<<<<<
 * def set_kgrid(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::kgrid)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 511, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":508
 * 
 * 
 * def get_kgrid():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get kgrid"""
 *     global kgrid
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_kgrid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":512
 *     global kgrid
 *     return vec_to_numpy(kgrid)
 * def set_kgrid(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set kgrid"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_151set_kgrid(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_150set_kgrid[] = "(np.ndarray[double, ndim=1]) Set kgrid";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_151set_kgrid = {"set_kgrid", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_151set_kgrid, METH_O, __pyx_doc_19HFS_CythonGenerated_150set_kgrid};
static PyObject *__pyx_pw_19HFS_CythonGenerated_151set_kgrid(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kgrid (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 512, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_150set_kgrid(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_150set_kgrid(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kgrid", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 512, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":516
 *     """(np.ndarray[double, ndim=1]) Set kgrid"""
 *     global kgrid
 *     kgrid = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::kgrid = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":512
 *     global kgrid
 *     return vec_to_numpy(kgrid)
 * def set_kgrid(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set kgrid"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_kgrid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":519
 * 
 * 
 * def get_inp_test_vec():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get inp_test_vec"""
 *     global inp_test_vec
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_153get_inp_test_vec(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_152get_inp_test_vec[] = "(np.ndarray[double, ndim=1]) Get inp_test_vec";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_153get_inp_test_vec = {"get_inp_test_vec", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_153get_inp_test_vec, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_152get_inp_test_vec};
static PyObject *__pyx_pw_19HFS_CythonGenerated_153get_inp_test_vec(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_inp_test_vec (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_152get_inp_test_vec(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_152get_inp_test_vec(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_inp_test_vec", 0);

  /* "HFS_CythonGenerated.pyx":522
 *     """(np.ndarray[double, ndim=1]) Get inp_test_vec"""
 *     global inp_test_vec
 *     return vec_to_numpy(inp_test_vec)             # <<<<<<<<<<<<<<
 * def set_inp_test_vec(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::inp_test_vec)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":519
 * 
 * 
 * def get_inp_test_vec():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get inp_test_vec"""
 *     global inp_test_vec
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_inp_test_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":523
 *     global inp_test_vec
 *     return vec_to_numpy(inp_test_vec)
 * def set_inp_test_vec(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set inp_test_vec"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_155set_inp_test_vec(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_154set_inp_test_vec[] = "(np.ndarray[double, ndim=1]) Set inp_test_vec";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_155set_inp_test_vec = {"set_inp_test_vec", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_155set_inp_test_vec, METH_O, __pyx_doc_19HFS_CythonGenerated_154set_inp_test_vec};
static PyObject *__pyx_pw_19HFS_CythonGenerated_155set_inp_test_vec(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inp_test_vec (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 523, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_154set_inp_test_vec(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_154set_inp_test_vec(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inp_test_vec", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 523, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":527
 *     """(np.ndarray[double, ndim=1]) Set inp_test_vec"""
 *     global inp_test_vec
 *     inp_test_vec = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::inp_test_vec = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":523
 *     global inp_test_vec
 *     return vec_to_numpy(inp_test_vec)
 * def set_inp_test_vec(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set inp_test_vec"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_inp_test_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":530
 * 
 * 
 * def get_out_vec1():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec1"""
 *     global out_vec1
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_157get_out_vec1(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_156get_out_vec1[] = "(np.ndarray[double, ndim=1]) Get out_vec1";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_157get_out_vec1 = {"get_out_vec1", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_157get_out_vec1, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_156get_out_vec1};
static PyObject *__pyx_pw_19HFS_CythonGenerated_157get_out_vec1(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_out_vec1 (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_156get_out_vec1(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_156get_out_vec1(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_out_vec1", 0);

  /* "HFS_CythonGenerated.pyx":533
 *     """(np.ndarray[double, ndim=1]) Get out_vec1"""
 *     global out_vec1
 *     return vec_to_numpy(out_vec1)             # <<<<<<<<<<<<<<
 * def set_out_vec1(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::out_vec1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":530
 * 
 * 
 * def get_out_vec1():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec1"""
 *     global out_vec1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_out_vec1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":534
 *     global out_vec1
 *     return vec_to_numpy(out_vec1)
 * def set_out_vec1(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec1"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_159set_out_vec1(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_158set_out_vec1[] = "(np.ndarray[double, ndim=1]) Set out_vec1";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_159set_out_vec1 = {"set_out_vec1", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_159set_out_vec1, METH_O, __pyx_doc_19HFS_CythonGenerated_158set_out_vec1};
static PyObject *__pyx_pw_19HFS_CythonGenerated_159set_out_vec1(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_out_vec1 (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 534, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_158set_out_vec1(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_158set_out_vec1(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_out_vec1", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 534, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":538
 *     """(np.ndarray[double, ndim=1]) Set out_vec1"""
 *     global out_vec1
 *     out_vec1 = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::out_vec1 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":534
 *     global out_vec1
 *     return vec_to_numpy(out_vec1)
 * def set_out_vec1(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec1"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_out_vec1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":541
 * 
 * 
 * def get_out_vec2():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec2"""
 *     global out_vec2
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_161get_out_vec2(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_160get_out_vec2[] = "(np.ndarray[double, ndim=1]) Get out_vec2";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_161get_out_vec2 = {"get_out_vec2", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_161get_out_vec2, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_160get_out_vec2};
static PyObject *__pyx_pw_19HFS_CythonGenerated_161get_out_vec2(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_out_vec2 (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_160get_out_vec2(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_160get_out_vec2(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_out_vec2", 0);

  /* "HFS_CythonGenerated.pyx":544
 *     """(np.ndarray[double, ndim=1]) Get out_vec2"""
 *     global out_vec2
 *     return vec_to_numpy(out_vec2)             # <<<<<<<<<<<<<<
 * def set_out_vec2(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::out_vec2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":541
 * 
 * 
 * def get_out_vec2():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec2"""
 *     global out_vec2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_out_vec2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":545
 *     global out_vec2
 *     return vec_to_numpy(out_vec2)
 * def set_out_vec2(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec2"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_163set_out_vec2(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_162set_out_vec2[] = "(np.ndarray[double, ndim=1]) Set out_vec2";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_163set_out_vec2 = {"set_out_vec2", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_163set_out_vec2, METH_O, __pyx_doc_19HFS_CythonGenerated_162set_out_vec2};
static PyObject *__pyx_pw_19HFS_CythonGenerated_163set_out_vec2(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_out_vec2 (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 545, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_162set_out_vec2(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_162set_out_vec2(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_out_vec2", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 545, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":549
 *     """(np.ndarray[double, ndim=1]) Set out_vec2"""
 *     global out_vec2
 *     out_vec2 = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::out_vec2 = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":545
 *     global out_vec2
 *     return vec_to_numpy(out_vec2)
 * def set_out_vec2(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec2"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_out_vec2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":552
 * 
 * 
 * def get_mattest():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get mattest"""
 *     global mattest
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_165get_mattest(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_164get_mattest[] = "(np.ndarray[double, ndim=2, mode=\"fortran\"]) Get mattest";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_165get_mattest = {"get_mattest", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_165get_mattest, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_164get_mattest};
static PyObject *__pyx_pw_19HFS_CythonGenerated_165get_mattest(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_mattest (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_164get_mattest(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_164get_mattest(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_mattest", 0);

  /* "HFS_CythonGenerated.pyx":555
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get mattest"""
 *     global mattest
 *     return mat_to_numpy(mattest)             # <<<<<<<<<<<<<<
 * def set_mattest(np.ndarray[double, ndim=2, mode="fortran"]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_mat_to_numpy(HFS::mattest)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":552
 * 
 * 
 * def get_mattest():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get mattest"""
 *     global mattest
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_mattest", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":556
 *     global mattest
 *     return mat_to_numpy(mattest)
 * def set_mattest(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set mattest"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_167set_mattest(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_166set_mattest[] = "(np.ndarray[double, ndim=2, mode=\"fortran\"]) Set mattest";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_167set_mattest = {"set_mattest", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_167set_mattest, METH_O, __pyx_doc_19HFS_CythonGenerated_166set_mattest};
static PyObject *__pyx_pw_19HFS_CythonGenerated_167set_mattest(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mattest (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 556, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_166set_mattest(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_166set_mattest(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mattest", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 556, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_value.diminfo[1].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_value.diminfo[1].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":560
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set mattest"""
 *     global mattest
 *     mattest = numpy_to_mat_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::mattest = __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":556
 *     global mattest
 *     return mat_to_numpy(mattest)
 * def set_mattest(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set mattest"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_mattest", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":563
 * 
 * 
 * def get_occ_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get occ_states"""
 *     global occ_states
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_169get_occ_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_168get_occ_states[] = "(np.ndarray[long long unsigned int, ndim=2, mode=\"fortran\"]) Get occ_states";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_169get_occ_states = {"get_occ_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_169get_occ_states, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_168get_occ_states};
static PyObject *__pyx_pw_19HFS_CythonGenerated_169get_occ_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_occ_states (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_168get_occ_states(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_168get_occ_states(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_occ_states", 0);

  /* "HFS_CythonGenerated.pyx":566
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get occ_states"""
 *     global occ_states
 *     return umat_to_numpy(occ_states)             # <<<<<<<<<<<<<<
 * def set_occ_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_umat_to_numpy(HFS::occ_states)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":563
 * 
 * 
 * def get_occ_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get occ_states"""
 *     global occ_states
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_occ_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":567
 *     global occ_states
 *     return umat_to_numpy(occ_states)
 * def set_occ_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set occ_states"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_171set_occ_states(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_170set_occ_states[] = "(np.ndarray[long long unsigned int, ndim=2, mode=\"fortran\"]) Set occ_states";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_171set_occ_states = {"set_occ_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_171set_occ_states, METH_O, __pyx_doc_19HFS_CythonGenerated_170set_occ_states};
static PyObject *__pyx_pw_19HFS_CythonGenerated_171set_occ_states(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_occ_states (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 567, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_170set_occ_states(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_170set_occ_states(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_occ_states", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_unsigned_PY_LONG_LONG, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 567, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_value.diminfo[1].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_value.diminfo[1].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":571
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set occ_states"""
 *     global occ_states
 *     occ_states = numpy_to_umat_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::occ_states = __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":567
 *     global occ_states
 *     return umat_to_numpy(occ_states)
 * def set_occ_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set occ_states"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_occ_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":574
 * 
 * 
 * def get_vir_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get vir_states"""
 *     global vir_states
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_173get_vir_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_172get_vir_states[] = "(np.ndarray[long long unsigned int, ndim=2, mode=\"fortran\"]) Get vir_states";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_173get_vir_states = {"get_vir_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_173get_vir_states, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_172get_vir_states};
static PyObject *__pyx_pw_19HFS_CythonGenerated_173get_vir_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_vir_states (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_172get_vir_states(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_172get_vir_states(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_vir_states", 0);

  /* "HFS_CythonGenerated.pyx":577
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get vir_states"""
 *     global vir_states
 *     return umat_to_numpy(vir_states)             # <<<<<<<<<<<<<<
 * def set_vir_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_umat_to_numpy(HFS::vir_states)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":574
 * 
 * 
 * def get_vir_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get vir_states"""
 *     global vir_states
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_vir_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":578
 *     global vir_states
 *     return umat_to_numpy(vir_states)
 * def set_vir_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set vir_states"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_175set_vir_states(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_174set_vir_states[] = "(np.ndarray[long long unsigned int, ndim=2, mode=\"fortran\"]) Set vir_states";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_175set_vir_states = {"set_vir_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_175set_vir_states, METH_O, __pyx_doc_19HFS_CythonGenerated_174set_vir_states};
static PyObject *__pyx_pw_19HFS_CythonGenerated_175set_vir_states(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vir_states (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 578, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_174set_vir_states(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_174set_vir_states(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_vir_states", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_unsigned_PY_LONG_LONG, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 578, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_value.diminfo[1].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_value.diminfo[1].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":582
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set vir_states"""
 *     global vir_states
 *     vir_states = numpy_to_umat_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::vir_states = __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":578
 *     global vir_states
 *     return umat_to_numpy(vir_states)
 * def set_vir_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set vir_states"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_vir_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":585
 * 
 * 
 * def get_excitations():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get excitations"""
 *     global excitations
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_177get_excitations(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_176get_excitations[] = "(np.ndarray[long long unsigned int, ndim=2, mode=\"fortran\"]) Get excitations";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_177get_excitations = {"get_excitations", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_177get_excitations, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_176get_excitations};
static PyObject *__pyx_pw_19HFS_CythonGenerated_177get_excitations(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_excitations (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_176get_excitations(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_176get_excitations(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_excitations", 0);

  /* "HFS_CythonGenerated.pyx":588
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get excitations"""
 *     global excitations
 *     return umat_to_numpy(excitations)             # <<<<<<<<<<<<<<
 * def set_excitations(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_umat_to_numpy(HFS::excitations)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":585
 * 
 * 
 * def get_excitations():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get excitations"""
 *     global excitations
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_excitations", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":589
 *     global excitations
 *     return umat_to_numpy(excitations)
 * def set_excitations(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set excitations"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_179set_excitations(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_178set_excitations[] = "(np.ndarray[long long unsigned int, ndim=2, mode=\"fortran\"]) Set excitations";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_179set_excitations = {"set_excitations", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_179set_excitations, METH_O, __pyx_doc_19HFS_CythonGenerated_178set_excitations};
static PyObject *__pyx_pw_19HFS_CythonGenerated_179set_excitations(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_excitations (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 589, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_178set_excitations(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_178set_excitations(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_excitations", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_unsigned_PY_LONG_LONG, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 589, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_value.diminfo[1].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_value.diminfo[1].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":593
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set excitations"""
 *     global excitations
 *     excitations = numpy_to_umat_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::excitations = __pyx_f_19HFS_CythonGenerated_numpy_to_umat_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":589
 *     global excitations
 *     return umat_to_numpy(excitations)
 * def set_excitations(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set excitations"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_excitations", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":596
 * 
 * 
 * def get_dav_vals():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get dav_vals"""
 *     global dav_vals
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_181get_dav_vals(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_180get_dav_vals[] = "(np.ndarray[double, ndim=1]) Get dav_vals";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_181get_dav_vals = {"get_dav_vals", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_181get_dav_vals, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_180get_dav_vals};
static PyObject *__pyx_pw_19HFS_CythonGenerated_181get_dav_vals(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_dav_vals (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_180get_dav_vals(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_180get_dav_vals(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_dav_vals", 0);

  /* "HFS_CythonGenerated.pyx":599
 *     """(np.ndarray[double, ndim=1]) Get dav_vals"""
 *     global dav_vals
 *     return vec_to_numpy(dav_vals)             # <<<<<<<<<<<<<<
 * def set_dav_vals(np.ndarray[double, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_vec_to_numpy(HFS::dav_vals)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":596
 * 
 * 
 * def get_dav_vals():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get dav_vals"""
 *     global dav_vals
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_dav_vals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":600
 *     global dav_vals
 *     return vec_to_numpy(dav_vals)
 * def set_dav_vals(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set dav_vals"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_183set_dav_vals(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_182set_dav_vals[] = "(np.ndarray[double, ndim=1]) Set dav_vals";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_183set_dav_vals = {"set_dav_vals", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_183set_dav_vals, METH_O, __pyx_doc_19HFS_CythonGenerated_182set_dav_vals};
static PyObject *__pyx_pw_19HFS_CythonGenerated_183set_dav_vals(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_dav_vals (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 600, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_182set_dav_vals(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_182set_dav_vals(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_dav_vals", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 600, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":604
 *     """(np.ndarray[double, ndim=1]) Set dav_vals"""
 *     global dav_vals
 *     dav_vals = numpy_to_vec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::dav_vals = __pyx_f_19HFS_CythonGenerated_numpy_to_vec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":600
 *     global dav_vals
 *     return vec_to_numpy(dav_vals)
 * def set_dav_vals(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set dav_vals"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_dav_vals", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":607
 * 
 * 
 * def get_dav_vecs():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get dav_vecs"""
 *     global dav_vecs
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_185get_dav_vecs(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_184get_dav_vecs[] = "(np.ndarray[double, ndim=2, mode=\"fortran\"]) Get dav_vecs";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_185get_dav_vecs = {"get_dav_vecs", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_185get_dav_vecs, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_184get_dav_vecs};
static PyObject *__pyx_pw_19HFS_CythonGenerated_185get_dav_vecs(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_dav_vecs (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_184get_dav_vecs(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_184get_dav_vecs(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_dav_vecs", 0);

  /* "HFS_CythonGenerated.pyx":610
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get dav_vecs"""
 *     global dav_vecs
 *     return mat_to_numpy(dav_vecs)             # <<<<<<<<<<<<<<
 * def set_dav_vecs(np.ndarray[double, ndim=2, mode="fortran"]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_mat_to_numpy(HFS::dav_vecs)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":607
 * 
 * 
 * def get_dav_vecs():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get dav_vecs"""
 *     global dav_vecs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_dav_vecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":611
 *     global dav_vecs
 *     return mat_to_numpy(dav_vecs)
 * def set_dav_vecs(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set dav_vecs"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_187set_dav_vecs(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_186set_dav_vecs[] = "(np.ndarray[double, ndim=2, mode=\"fortran\"]) Set dav_vecs";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_187set_dav_vecs = {"set_dav_vecs", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_187set_dav_vecs, METH_O, __pyx_doc_19HFS_CythonGenerated_186set_dav_vecs};
static PyObject *__pyx_pw_19HFS_CythonGenerated_187set_dav_vecs(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_dav_vecs (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 611, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_186set_dav_vecs(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_186set_dav_vecs(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_dav_vecs", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 611, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_value.diminfo[1].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_value.diminfo[1].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":615
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set dav_vecs"""
 *     global dav_vecs
 *     dav_vecs = numpy_to_mat_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::dav_vecs = __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":611
 *     global dav_vecs
 *     return mat_to_numpy(dav_vecs)
 * def set_dav_vecs(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set dav_vecs"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_dav_vecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":618
 * 
 * 
 * def get_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get states"""
 *     global states
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_189get_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_188get_states[] = "(np.ndarray[double, ndim=2, mode=\"fortran\"]) Get states";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_189get_states = {"get_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_189get_states, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_188get_states};
static PyObject *__pyx_pw_19HFS_CythonGenerated_189get_states(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_states (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_188get_states(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_188get_states(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_states", 0);

  /* "HFS_CythonGenerated.pyx":621
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get states"""
 *     global states
 *     return mat_to_numpy(states)             # <<<<<<<<<<<<<<
 * def set_states(np.ndarray[double, ndim=2, mode="fortran"]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_mat_to_numpy(HFS::states)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":618
 * 
 * 
 * def get_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get states"""
 *     global states
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":622
 *     global states
 *     return mat_to_numpy(states)
 * def set_states(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set states"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_191set_states(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_190set_states[] = "(np.ndarray[double, ndim=2, mode=\"fortran\"]) Set states";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_191set_states = {"set_states", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_191set_states, METH_O, __pyx_doc_19HFS_CythonGenerated_190set_states};
static PyObject *__pyx_pw_19HFS_CythonGenerated_191set_states(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_states (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 622, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_190set_states(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_190set_states(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_states", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_F_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) __PYX_ERR(1, 622, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_value.diminfo[1].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_value.diminfo[1].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[1];

  /* "HFS_CythonGenerated.pyx":626
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set states"""
 *     global states
 *     states = numpy_to_mat_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::states = __pyx_f_19HFS_CythonGenerated_numpy_to_mat_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":622
 *     global states
 *     return mat_to_numpy(states)
 * def set_states(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set states"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_states", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":629
 * 
 * 
 * def get_dav_its():             # <<<<<<<<<<<<<<
 *     """(int) Get dav_its"""
 *     global dav_its
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_193get_dav_its(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_192get_dav_its[] = "(int) Get dav_its";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_193get_dav_its = {"get_dav_its", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_193get_dav_its, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_192get_dav_its};
static PyObject *__pyx_pw_19HFS_CythonGenerated_193get_dav_its(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_dav_its (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_192get_dav_its(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_192get_dav_its(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_dav_its", 0);

  /* "HFS_CythonGenerated.pyx":632
 *     """(int) Get dav_its"""
 *     global dav_its
 *     return dav_its             # <<<<<<<<<<<<<<
 * def set_dav_its(value):
 *     """(t) Set dav_its"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(HFS::dav_its); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":629
 * 
 * 
 * def get_dav_its():             # <<<<<<<<<<<<<<
 *     """(int) Get dav_its"""
 *     global dav_its
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_dav_its", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":633
 *     global dav_its
 *     return dav_its
 * def set_dav_its(value):             # <<<<<<<<<<<<<<
 *     """(t) Set dav_its"""
 *     global dav_its
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_195set_dav_its(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_194set_dav_its[] = "(t) Set dav_its";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_195set_dav_its = {"set_dav_its", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_195set_dav_its, METH_O, __pyx_doc_19HFS_CythonGenerated_194set_dav_its};
static PyObject *__pyx_pw_19HFS_CythonGenerated_195set_dav_its(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_dav_its (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_194set_dav_its(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_194set_dav_its(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_dav_its", 0);

  /* "HFS_CythonGenerated.pyx":636
 *     """(t) Set dav_its"""
 *     global dav_its
 *     dav_its = int(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 636, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  HFS::dav_its = __pyx_t_2;

  /* "HFS_CythonGenerated.pyx":633
 *     global dav_its
 *     return dav_its
 * def set_dav_its(value):             # <<<<<<<<<<<<<<
 *     """(t) Set dav_its"""
 *     global dav_its
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_dav_its", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":639
 * 
 * 
 * def get_dav_message():             # <<<<<<<<<<<<<<
 *     """(str) Get dav_message"""
 *     global dav_message
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_197get_dav_message(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_196get_dav_message[] = "(str) Get dav_message";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_197get_dav_message = {"get_dav_message", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_197get_dav_message, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_196get_dav_message};
static PyObject *__pyx_pw_19HFS_CythonGenerated_197get_dav_message(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_dav_message (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_196get_dav_message(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_196get_dav_message(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_dav_message", 0);

  /* "HFS_CythonGenerated.pyx":642
 *     """(str) Get dav_message"""
 *     global dav_message
 *     return dav_message             # <<<<<<<<<<<<<<
 * def set_dav_message(value):
 *     """(r) Set dav_message"""
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(HFS::dav_message); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":639
 * 
 * 
 * def get_dav_message():             # <<<<<<<<<<<<<<
 *     """(str) Get dav_message"""
 *     global dav_message
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_dav_message", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":643
 *     global dav_message
 *     return dav_message
 * def set_dav_message(value):             # <<<<<<<<<<<<<<
 *     """(r) Set dav_message"""
 *     global dav_message
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_199set_dav_message(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_198set_dav_message[] = "(r) Set dav_message";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_199set_dav_message = {"set_dav_message", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_199set_dav_message, METH_O, __pyx_doc_19HFS_CythonGenerated_198set_dav_message};
static PyObject *__pyx_pw_19HFS_CythonGenerated_199set_dav_message(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_dav_message (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_198set_dav_message(__pyx_self, ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_198set_dav_message(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  __Pyx_RefNannySetupContext("set_dav_message", 0);

  /* "HFS_CythonGenerated.pyx":646
 *     """(r) Set dav_message"""
 *     global dav_message
 *     dav_message = str(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_value);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 646, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  HFS::dav_message = __pyx_t_3;

  /* "HFS_CythonGenerated.pyx":643
 *     global dav_message
 *     return dav_message
 * def set_dav_message(value):             # <<<<<<<<<<<<<<
 *     """(r) Set dav_message"""
 *     global dav_message
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("HFS_CythonGenerated.set_dav_message", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":649
 * 
 * 
 * def get_inv_exc_map_test():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=1]) Get inv_exc_map_test"""
 *     global inv_exc_map_test
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_201get_inv_exc_map_test(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_200get_inv_exc_map_test[] = "(np.ndarray[long long unsigned int, ndim=1]) Get inv_exc_map_test";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_201get_inv_exc_map_test = {"get_inv_exc_map_test", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_201get_inv_exc_map_test, METH_NOARGS, __pyx_doc_19HFS_CythonGenerated_200get_inv_exc_map_test};
static PyObject *__pyx_pw_19HFS_CythonGenerated_201get_inv_exc_map_test(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_inv_exc_map_test (wrapper)", 0);
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_200get_inv_exc_map_test(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_200get_inv_exc_map_test(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_inv_exc_map_test", 0);

  /* "HFS_CythonGenerated.pyx":652
 *     """(np.ndarray[long long unsigned int, ndim=1]) Get inv_exc_map_test"""
 *     global inv_exc_map_test
 *     return uvec_to_numpy(inv_exc_map_test)             # <<<<<<<<<<<<<<
 * def set_inv_exc_map_test(np.ndarray[long long unsigned int, ndim=1]
 *                      value not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_19HFS_CythonGenerated_uvec_to_numpy(HFS::inv_exc_map_test)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "HFS_CythonGenerated.pyx":649
 * 
 * 
 * def get_inv_exc_map_test():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=1]) Get inv_exc_map_test"""
 *     global inv_exc_map_test
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("HFS_CythonGenerated.get_inv_exc_map_test", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "HFS_CythonGenerated.pyx":653
 *     global inv_exc_map_test
 *     return uvec_to_numpy(inv_exc_map_test)
 * def set_inv_exc_map_test(np.ndarray[long long unsigned int, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=1]) Set inv_exc_map_test"""
 */

/* Python wrapper */
static PyObject *__pyx_pw_19HFS_CythonGenerated_203set_inv_exc_map_test(PyObject *__pyx_self, PyObject *__pyx_v_value); /*proto*/
static char __pyx_doc_19HFS_CythonGenerated_202set_inv_exc_map_test[] = "(np.ndarray[long long unsigned int, ndim=1]) Set inv_exc_map_test";
static PyMethodDef __pyx_mdef_19HFS_CythonGenerated_203set_inv_exc_map_test = {"set_inv_exc_map_test", (PyCFunction)__pyx_pw_19HFS_CythonGenerated_203set_inv_exc_map_test, METH_O, __pyx_doc_19HFS_CythonGenerated_202set_inv_exc_map_test};
static PyObject *__pyx_pw_19HFS_CythonGenerated_203set_inv_exc_map_test(PyObject *__pyx_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inv_exc_map_test (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_5numpy_ndarray, 0, "value", 0))) __PYX_ERR(1, 653, __pyx_L1_error)
  __pyx_r = __pyx_pf_19HFS_CythonGenerated_202set_inv_exc_map_test(__pyx_self, ((PyArrayObject *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_19HFS_CythonGenerated_202set_inv_exc_map_test(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_value) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_value;
  __Pyx_Buffer __pyx_pybuffer_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inv_exc_map_test", 0);
  __pyx_pybuffer_value.pybuffer.buf = NULL;
  __pyx_pybuffer_value.refcount = 0;
  __pyx_pybuffernd_value.data = NULL;
  __pyx_pybuffernd_value.rcbuffer = &__pyx_pybuffer_value;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_value.rcbuffer->pybuffer, (PyObject*)__pyx_v_value, &__Pyx_TypeInfo_unsigned_PY_LONG_LONG, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) __PYX_ERR(1, 653, __pyx_L1_error)
  }
  __pyx_pybuffernd_value.diminfo[0].strides = __pyx_pybuffernd_value.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_value.diminfo[0].shape = __pyx_pybuffernd_value.rcbuffer->pybuffer.shape[0];

  /* "HFS_CythonGenerated.pyx":657
 *     """(np.ndarray[long long unsigned int, ndim=1]) Set inv_exc_map_test"""
 *     global inv_exc_map_test
 *     inv_exc_map_test = numpy_to_uvec_d(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  HFS::inv_exc_map_test = __pyx_f_19HFS_CythonGenerated_numpy_to_uvec_d(((PyArrayObject *)__pyx_v_value));

  /* "HFS_CythonGenerated.pyx":653
 *     global inv_exc_map_test
 *     return uvec_to_numpy(inv_exc_map_test)
 * def set_inv_exc_map_test(np.ndarray[long long unsigned int, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=1]) Set inv_exc_map_test"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("HFS_CythonGenerated.set_inv_exc_map_test", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_value.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
    goto __pyx_L4;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  /*else*/ {
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 218, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 218, __pyx_L1_error)

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 222, __pyx_L1_error)

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L11;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":246
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":250
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
    goto __pyx_L14;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":253
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":256
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_1) {

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 259, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 259, __pyx_L1_error)

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":260
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = ((char *)"B");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":262
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = ((char *)"h");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = ((char *)"H");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = ((char *)"i");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = ((char *)"I");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = ((char *)"l");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = ((char *)"L");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = ((char *)"q");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = ((char *)"Q");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = ((char *)"f");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = ((char *)"d");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = ((char *)"g");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = ((char *)"Zf");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = ((char *)"Zd");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = ((char *)"Zg");
      break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 278, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(2, 278, __pyx_L1_error)
      break;
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)malloc(0xFF));

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) __PYX_ERR(2, 285, __pyx_L1_error)
    __pyx_v_f = __pyx_t_7;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":288
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":292
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 783, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":790
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":791
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(2, 794, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 794, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 795, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(2, 795, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(2, 796, __pyx_L1_error)
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 796, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(2, 796, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 798, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 799, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 799, __pyx_L1_error)

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_6) {

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 803, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 803, __pyx_L1_error)

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 813, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 813, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 813, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 821, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 823, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 823, __pyx_L1_error)

        /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 826, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 826, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 826, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 828, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 829, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 830, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 832, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 833, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 833, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 833, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 834, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 834, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 835, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 836, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 836, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 836, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 838, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 839, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 840, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 841, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 842, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 844, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __PYX_ERR(2, 844, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) __PYX_ERR(2, 849, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":969
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":971
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":972
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":973
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":974
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":978
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":980
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(3, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "HFS_CythonGenerated",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_Circle, __pyx_k_Circle, sizeof(__pyx_k_Circle), 0, 0, 1, 1},
  {&__pyx_n_s_Count, __pyx_k_Count, sizeof(__pyx_k_Count), 0, 0, 1, 1},
  {&__pyx_kp_s_D_rs, __pyx_k_D_rs, sizeof(__pyx_k_D_rs), 0, 0, 1, 0},
  {&__pyx_n_s_Discretized, __pyx_k_Discretized, sizeof(__pyx_k_Discretized), 0, 0, 1, 1},
  {&__pyx_n_s_Exchange, __pyx_k_Exchange, sizeof(__pyx_k_Exchange), 0, 0, 1, 1},
  {&__pyx_kp_s_Excitation_Energy_Histogram, __pyx_k_Excitation_Energy_Histogram, sizeof(__pyx_k_Excitation_Energy_Histogram), 0, 0, 1, 0},
  {&__pyx_n_s_F, __pyx_k_F, sizeof(__pyx_k_F), 0, 0, 1, 1},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_HFS_CythonGenerated, __pyx_k_HFS_CythonGenerated, sizeof(__pyx_k_HFS_CythonGenerated), 0, 0, 1, 1},
  {&__pyx_n_s_Kinetic, __pyx_k_Kinetic, sizeof(__pyx_k_Kinetic), 0, 0, 1, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_Occupied, __pyx_k_Occupied, sizeof(__pyx_k_Occupied), 0, 0, 1, 1},
  {&__pyx_kp_s_Only_2d_is_supported_right_now, __pyx_k_Only_2d_is_supported_right_now, sizeof(__pyx_k_Only_2d_is_supported_right_now), 0, 0, 1, 0},
  {&__pyx_kp_s_Orbital_Energies, __pyx_k_Orbital_Energies, sizeof(__pyx_k_Orbital_Energies), 0, 0, 1, 0},
  {&__pyx_n_s_Polygon, __pyx_k_Polygon, sizeof(__pyx_k_Polygon), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_kp_s_Spectator_Virtuals, __pyx_k_Spectator_Virtuals, sizeof(__pyx_k_Spectator_Virtuals), 0, 0, 1, 0},
  {&__pyx_kp_s_The_First_Brillouin_Zone, __pyx_k_The_First_Brillouin_Zone, sizeof(__pyx_k_The_First_Brillouin_Zone), 0, 0, 1, 0},
  {&__pyx_n_s_Total, __pyx_k_Total, sizeof(__pyx_k_Total), 0, 0, 1, 1},
  {&__pyx_n_s_VAL1, __pyx_k_VAL1, sizeof(__pyx_k_VAL1), 0, 0, 1, 1},
  {&__pyx_n_s_VAL2, __pyx_k_VAL2, sizeof(__pyx_k_VAL2), 0, 0, 1, 1},
  {&__pyx_n_s_VAL3, __pyx_k_VAL3, sizeof(__pyx_k_VAL3), 0, 0, 1, 1},
  {&__pyx_n_s_VAL4, __pyx_k_VAL4, sizeof(__pyx_k_VAL4), 0, 0, 1, 1},
  {&__pyx_n_s_VAL5, __pyx_k_VAL5, sizeof(__pyx_k_VAL5), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_Virtual, __pyx_k_Virtual, sizeof(__pyx_k_Virtual), 0, 0, 1, 1},
  {&__pyx_kp_s__22, __pyx_k__22, sizeof(__pyx_k__22), 0, 0, 1, 0},
  {&__pyx_n_s__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 0, 1, 1},
  {&__pyx_n_s_active_virs, __pyx_k_active_virs, sizeof(__pyx_k_active_virs), 0, 0, 1, 1},
  {&__pyx_n_s_add_patch, __pyx_k_add_patch, sizeof(__pyx_k_add_patch), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_amax, __pyx_k_amax, sizeof(__pyx_k_amax), 0, 0, 1, 1},
  {&__pyx_n_s_amin, __pyx_k_amin, sizeof(__pyx_k_amin), 0, 0, 1, 1},
  {&__pyx_n_s_analytic, __pyx_k_analytic, sizeof(__pyx_k_analytic), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_axis, __pyx_k_axis, sizeof(__pyx_k_axis), 0, 0, 1, 1},
  {&__pyx_n_s_bbox_to_anchor, __pyx_k_bbox_to_anchor, sizeof(__pyx_k_bbox_to_anchor), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_kp_s_center_left, __pyx_k_center_left, sizeof(__pyx_k_center_left), 0, 0, 1, 0},
  {&__pyx_n_s_circle, __pyx_k_circle, sizeof(__pyx_k_circle), 0, 0, 1, 1},
  {&__pyx_n_s_color_palette, __pyx_k_color_palette, sizeof(__pyx_k_color_palette), 0, 0, 1, 1},
  {&__pyx_n_s_const, __pyx_k_const, sizeof(__pyx_k_const), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_s_double, __pyx_k_double, sizeof(__pyx_k_double), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_edgecolor, __pyx_k_edgecolor, sizeof(__pyx_k_edgecolor), 0, 0, 1, 1},
  {&__pyx_n_s_ellipe, __pyx_k_ellipe, sizeof(__pyx_k_ellipe), 0, 0, 1, 1},
  {&__pyx_n_s_ellipk, __pyx_k_ellipk, sizeof(__pyx_k_ellipk), 0, 0, 1, 1},
  {&__pyx_n_s_empty, __pyx_k_empty, sizeof(__pyx_k_empty), 0, 0, 1, 1},
  {&__pyx_n_s_energy_x, __pyx_k_energy_x, sizeof(__pyx_k_energy_x), 0, 0, 1, 1},
  {&__pyx_kp_s_epsilon__vir_epsilon__occ_Hartr, __pyx_k_epsilon__vir_epsilon__occ_Hartr, sizeof(__pyx_k_epsilon__vir_epsilon__occ_Hartr), 0, 0, 1, 0},
  {&__pyx_n_s_exch_x, __pyx_k_exch_x, sizeof(__pyx_k_exch_x), 0, 0, 1, 1},
  {&__pyx_n_s_f_contiguous, __pyx_k_f_contiguous, sizeof(__pyx_k_f_contiguous), 0, 0, 1, 1},
  {&__pyx_n_s_fc, __pyx_k_fc, sizeof(__pyx_k_fc), 0, 0, 1, 1},
  {&__pyx_n_s_fill, __pyx_k_fill, sizeof(__pyx_k_fill), 0, 0, 1, 1},
  {&__pyx_n_s_flags, __pyx_k_flags, sizeof(__pyx_k_flags), 0, 0, 1, 1},
  {&__pyx_kp_s_frac_epsilon_k_HF_epsilon_F, __pyx_k_frac_epsilon_k_HF_epsilon_F, sizeof(__pyx_k_frac_epsilon_k_HF_epsilon_F), 0, 0, 1, 0},
  {&__pyx_kp_s_frac_k_k_f, __pyx_k_frac_k_k_f, sizeof(__pyx_k_frac_k_k_f), 0, 0, 1, 0},
  {&__pyx_n_s_gca, __pyx_k_gca, sizeof(__pyx_k_gca), 0, 0, 1, 1},
  {&__pyx_n_s_general_methods, __pyx_k_general_methods, sizeof(__pyx_k_general_methods), 0, 0, 1, 1},
  {&__pyx_n_s_get_N_elec, __pyx_k_get_N_elec, sizeof(__pyx_k_get_N_elec), 0, 0, 1, 1},
  {&__pyx_n_s_get_Nexc, __pyx_k_get_Nexc, sizeof(__pyx_k_get_Nexc), 0, 0, 1, 1},
  {&__pyx_n_s_get_Nk, __pyx_k_get_Nk, sizeof(__pyx_k_get_Nk), 0, 0, 1, 1},
  {&__pyx_n_s_get_Nocc, __pyx_k_get_Nocc, sizeof(__pyx_k_get_Nocc), 0, 0, 1, 1},
  {&__pyx_n_s_get_Nvir, __pyx_k_get_Nvir, sizeof(__pyx_k_get_Nvir), 0, 0, 1, 1},
  {&__pyx_n_s_get_bzone_length, __pyx_k_get_bzone_length, sizeof(__pyx_k_get_bzone_length), 0, 0, 1, 1},
  {&__pyx_n_s_get_dav_its, __pyx_k_get_dav_its, sizeof(__pyx_k_get_dav_its), 0, 0, 1, 1},
  {&__pyx_n_s_get_dav_message, __pyx_k_get_dav_message, sizeof(__pyx_k_get_dav_message), 0, 0, 1, 1},
  {&__pyx_n_s_get_dav_vals, __pyx_k_get_dav_vals, sizeof(__pyx_k_get_dav_vals), 0, 0, 1, 1},
  {&__pyx_n_s_get_dav_vecs, __pyx_k_get_dav_vecs, sizeof(__pyx_k_get_dav_vecs), 0, 0, 1, 1},
  {&__pyx_n_s_get_deltaK, __pyx_k_get_deltaK, sizeof(__pyx_k_get_deltaK), 0, 0, 1, 1},
  {&__pyx_n_s_get_exc_energies, __pyx_k_get_exc_energies, sizeof(__pyx_k_get_exc_energies), 0, 0, 1, 1},
  {&__pyx_n_s_get_excitations, __pyx_k_get_excitations, sizeof(__pyx_k_get_excitations), 0, 0, 1, 1},
  {&__pyx_n_s_get_fermi_energy, __pyx_k_get_fermi_energy, sizeof(__pyx_k_get_fermi_energy), 0, 0, 1, 1},
  {&__pyx_n_s_get_inp_test_vec, __pyx_k_get_inp_test_vec, sizeof(__pyx_k_get_inp_test_vec), 0, 0, 1, 1},
  {&__pyx_n_s_get_inv_exc_map_test, __pyx_k_get_inv_exc_map_test, sizeof(__pyx_k_get_inv_exc_map_test), 0, 0, 1, 1},
  {&__pyx_n_s_get_kf, __pyx_k_get_kf, sizeof(__pyx_k_get_kf), 0, 0, 1, 1},
  {&__pyx_n_s_get_kgrid, __pyx_k_get_kgrid, sizeof(__pyx_k_get_kgrid), 0, 0, 1, 1},
  {&__pyx_n_s_get_kmax, __pyx_k_get_kmax, sizeof(__pyx_k_get_kmax), 0, 0, 1, 1},
  {&__pyx_n_s_get_mattest, __pyx_k_get_mattest, sizeof(__pyx_k_get_mattest), 0, 0, 1, 1},
  {&__pyx_n_s_get_ndim, __pyx_k_get_ndim, sizeof(__pyx_k_get_ndim), 0, 0, 1, 1},
  {&__pyx_n_s_get_occ_energies, __pyx_k_get_occ_energies, sizeof(__pyx_k_get_occ_energies), 0, 0, 1, 1},
  {&__pyx_n_s_get_occ_states, __pyx_k_get_occ_states, sizeof(__pyx_k_get_occ_states), 0, 0, 1, 1},
  {&__pyx_n_s_get_out_vec1, __pyx_k_get_out_vec1, sizeof(__pyx_k_get_out_vec1), 0, 0, 1, 1},
  {&__pyx_n_s_get_out_vec2, __pyx_k_get_out_vec2, sizeof(__pyx_k_get_out_vec2), 0, 0, 1, 1},
  {&__pyx_n_s_get_rs, __pyx_k_get_rs, sizeof(__pyx_k_get_rs), 0, 0, 1, 1},
  {&__pyx_n_s_get_states, __pyx_k_get_states, sizeof(__pyx_k_get_states), 0, 0, 1, 1},
  {&__pyx_n_s_get_two_e_const, __pyx_k_get_two_e_const, sizeof(__pyx_k_get_two_e_const), 0, 0, 1, 1},
  {&__pyx_n_s_get_vir_energies, __pyx_k_get_vir_energies, sizeof(__pyx_k_get_vir_energies), 0, 0, 1, 1},
  {&__pyx_n_s_get_vir_states, __pyx_k_get_vir_states, sizeof(__pyx_k_get_vir_states), 0, 0, 1, 1},
  {&__pyx_n_s_get_vol, __pyx_k_get_vol, sizeof(__pyx_k_get_vol), 0, 0, 1, 1},
  {&__pyx_n_s_gm, __pyx_k_gm, sizeof(__pyx_k_gm), 0, 0, 1, 1},
  {&__pyx_n_s_hist, __pyx_k_hist, sizeof(__pyx_k_hist), 0, 0, 1, 1},
  {&__pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_k_home_evan_git_HF_Stability_sour, sizeof(__pyx_k_home_evan_git_HF_Stability_sour), 0, 0, 1, 0},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_is_spec, __pyx_k_is_spec, sizeof(__pyx_k_is_spec), 0, 0, 1, 1},
  {&__pyx_n_s_itertools, __pyx_k_itertools, sizeof(__pyx_k_itertools), 0, 0, 1, 1},
  {&__pyx_kp_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 0},
  {&__pyx_kp_s_k_2, __pyx_k_k_2, sizeof(__pyx_k_k_2), 0, 0, 1, 0},
  {&__pyx_kp_s_k_3, __pyx_k_k_3, sizeof(__pyx_k_k_3), 0, 0, 1, 0},
  {&__pyx_n_s_k_4, __pyx_k_k_4, sizeof(__pyx_k_k_4), 0, 0, 1, 1},
  {&__pyx_n_s_kinetic_x, __pyx_k_kinetic_x, sizeof(__pyx_k_kinetic_x), 0, 0, 1, 1},
  {&__pyx_n_s_kvir_y, __pyx_k_kvir_y, sizeof(__pyx_k_kvir_y), 0, 0, 1, 1},
  {&__pyx_n_s_label, __pyx_k_label, sizeof(__pyx_k_label), 0, 0, 1, 1},
  {&__pyx_n_s_legend, __pyx_k_legend, sizeof(__pyx_k_legend), 0, 0, 1, 1},
  {&__pyx_n_s_linalg, __pyx_k_linalg, sizeof(__pyx_k_linalg), 0, 0, 1, 1},
  {&__pyx_n_s_linewidth, __pyx_k_linewidth, sizeof(__pyx_k_linewidth), 0, 0, 1, 1},
  {&__pyx_n_s_linspace, __pyx_k_linspace, sizeof(__pyx_k_linspace), 0, 0, 1, 1},
  {&__pyx_n_s_loc, __pyx_k_loc, sizeof(__pyx_k_loc), 0, 0, 1, 1},
  {&__pyx_n_s_log, __pyx_k_log, sizeof(__pyx_k_log), 0, 0, 1, 1},
  {&__pyx_n_s_logical_not, __pyx_k_logical_not, sizeof(__pyx_k_logical_not), 0, 0, 1, 1},
  {&__pyx_n_s_logical_or, __pyx_k_logical_or, sizeof(__pyx_k_logical_or), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mask, __pyx_k_mask, sizeof(__pyx_k_mask), 0, 0, 1, 1},
  {&__pyx_n_s_mask2, __pyx_k_mask2, sizeof(__pyx_k_mask2), 0, 0, 1, 1},
  {&__pyx_n_s_math, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
  {&__pyx_n_s_matplotlib_pyplot, __pyx_k_matplotlib_pyplot, sizeof(__pyx_k_matplotlib_pyplot), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_none, __pyx_k_none, sizeof(__pyx_k_none), 0, 0, 1, 1},
  {&__pyx_n_s_norm, __pyx_k_norm, sizeof(__pyx_k_norm), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_off, __pyx_k_off, sizeof(__pyx_k_off), 0, 0, 1, 1},
  {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
  {&__pyx_n_s_owndata, __pyx_k_owndata, sizeof(__pyx_k_owndata), 0, 0, 1, 1},
  {&__pyx_n_s_pi, __pyx_k_pi, sizeof(__pyx_k_pi), 0, 0, 1, 1},
  {&__pyx_n_s_plot, __pyx_k_plot, sizeof(__pyx_k_plot), 0, 0, 1, 1},
  {&__pyx_n_s_plot_1stBZ, __pyx_k_plot_1stBZ, sizeof(__pyx_k_plot_1stBZ), 0, 0, 1, 1},
  {&__pyx_n_s_plot_energy, __pyx_k_plot_energy, sizeof(__pyx_k_plot_energy), 0, 0, 1, 1},
  {&__pyx_n_s_plot_exc_hist, __pyx_k_plot_exc_hist, sizeof(__pyx_k_plot_exc_hist), 0, 0, 1, 1},
  {&__pyx_n_s_plt, __pyx_k_plt, sizeof(__pyx_k_plt), 0, 0, 1, 1},
  {&__pyx_n_s_py_analytic_energy, __pyx_k_py_analytic_energy, sizeof(__pyx_k_py_analytic_energy), 0, 0, 1, 1},
  {&__pyx_n_s_py_analytic_exch, __pyx_k_py_analytic_exch, sizeof(__pyx_k_py_analytic_exch), 0, 0, 1, 1},
  {&__pyx_n_s_py_build_mattest, __pyx_k_py_build_mattest, sizeof(__pyx_k_py_build_mattest), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_1A, __pyx_k_py_calc_1A, sizeof(__pyx_k_py_calc_1A), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_1B, __pyx_k_py_calc_1B, sizeof(__pyx_k_py_calc_1B), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_3A, __pyx_k_py_calc_3A, sizeof(__pyx_k_py_calc_3A), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_3B, __pyx_k_py_calc_3B, sizeof(__pyx_k_py_calc_3B), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_3H, __pyx_k_py_calc_3H, sizeof(__pyx_k_py_calc_3H), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_energies, __pyx_k_py_calc_energies, sizeof(__pyx_k_py_calc_energies), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_exc_energy, __pyx_k_py_calc_exc_energy, sizeof(__pyx_k_py_calc_exc_energy), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_excitations, __pyx_k_py_calc_excitations, sizeof(__pyx_k_py_calc_excitations), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_inv_exc_map, __pyx_k_py_calc_inv_exc_map, sizeof(__pyx_k_py_calc_inv_exc_map), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_kf, __pyx_k_py_calc_kf, sizeof(__pyx_k_py_calc_kf), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_occ_energies, __pyx_k_py_calc_occ_energies, sizeof(__pyx_k_py_calc_occ_energies), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_occ_states, __pyx_k_py_calc_occ_states, sizeof(__pyx_k_py_calc_occ_states), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_params, __pyx_k_py_calc_params, sizeof(__pyx_k_py_calc_params), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_vir_N_to_1_map, __pyx_k_py_calc_vir_N_to_1_map, sizeof(__pyx_k_py_calc_vir_N_to_1_map), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_vir_energies, __pyx_k_py_calc_vir_energies, sizeof(__pyx_k_py_calc_vir_energies), 0, 0, 1, 1},
  {&__pyx_n_s_py_calc_vol_and_two_e_const, __pyx_k_py_calc_vol_and_two_e_const, sizeof(__pyx_k_py_calc_vol_and_two_e_const), 0, 0, 1, 1},
  {&__pyx_n_s_py_davidson_wrapper, __pyx_k_py_davidson_wrapper, sizeof(__pyx_k_py_davidson_wrapper), 0, 0, 1, 1},
  {&__pyx_n_s_py_exchange, __pyx_k_py_exchange, sizeof(__pyx_k_py_exchange), 0, 0, 1, 1},
  {&__pyx_n_s_py_f2D, __pyx_k_py_f2D, sizeof(__pyx_k_py_f2D), 0, 0, 1, 1},
  {&__pyx_n_s_py_f3D, __pyx_k_py_f3D, sizeof(__pyx_k_py_f3D), 0, 0, 1, 1},
  {&__pyx_n_s_py_is_vir, __pyx_k_py_is_vir, sizeof(__pyx_k_py_is_vir), 0, 0, 1, 1},
  {&__pyx_n_s_py_k_to_index, __pyx_k_py_k_to_index, sizeof(__pyx_k_py_k_to_index), 0, 0, 1, 1},
  {&__pyx_n_s_py_kb_j_to_t, __pyx_k_py_kb_j_to_t, sizeof(__pyx_k_py_kb_j_to_t), 0, 0, 1, 1},
  {&__pyx_n_s_py_matvec_prod_3A, __pyx_k_py_matvec_prod_3A, sizeof(__pyx_k_py_matvec_prod_3A), 0, 0, 1, 1},
  {&__pyx_n_s_py_matvec_prod_3B, __pyx_k_py_matvec_prod_3B, sizeof(__pyx_k_py_matvec_prod_3B), 0, 0, 1, 1},
  {&__pyx_n_s_py_matvec_prod_3H, __pyx_k_py_matvec_prod_3H, sizeof(__pyx_k_py_matvec_prod_3H), 0, 0, 1, 1},
  {&__pyx_n_s_py_matvec_prod_me, __pyx_k_py_matvec_prod_me, sizeof(__pyx_k_py_matvec_prod_me), 0, 0, 1, 1},
  {&__pyx_n_s_py_occ_idx_to_k, __pyx_k_py_occ_idx_to_k, sizeof(__pyx_k_py_occ_idx_to_k), 0, 0, 1, 1},
  {&__pyx_n_s_py_print_params, __pyx_k_py_print_params, sizeof(__pyx_k_py_print_params), 0, 0, 1, 1},
  {&__pyx_n_s_py_to_first_BZ, __pyx_k_py_to_first_BZ, sizeof(__pyx_k_py_to_first_BZ), 0, 0, 1, 1},
  {&__pyx_n_s_py_two_electron, __pyx_k_py_two_electron, sizeof(__pyx_k_py_two_electron), 0, 0, 1, 1},
  {&__pyx_n_s_py_two_electron_check, __pyx_k_py_two_electron_check, sizeof(__pyx_k_py_two_electron_check), 0, 0, 1, 1},
  {&__pyx_n_s_py_vir_idx_to_k, __pyx_k_py_vir_idx_to_k, sizeof(__pyx_k_py_vir_idx_to_k), 0, 0, 1, 1},
  {&__pyx_n_s_pyfiles_lib, __pyx_k_pyfiles_lib, sizeof(__pyx_k_pyfiles_lib), 0, 0, 1, 1},
  {&__pyx_n_s_radius, __pyx_k_radius, sizeof(__pyx_k_radius), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_row_norm, __pyx_k_row_norm, sizeof(__pyx_k_row_norm), 0, 0, 1, 1},
  {&__pyx_n_s_scale, __pyx_k_scale, sizeof(__pyx_k_scale), 0, 0, 1, 1},
  {&__pyx_n_s_scatter, __pyx_k_scatter, sizeof(__pyx_k_scatter), 0, 0, 1, 1},
  {&__pyx_n_s_scipy, __pyx_k_scipy, sizeof(__pyx_k_scipy), 0, 0, 1, 1},
  {&__pyx_n_s_seaborn, __pyx_k_seaborn, sizeof(__pyx_k_seaborn), 0, 0, 1, 1},
  {&__pyx_n_s_set_N_elec, __pyx_k_set_N_elec, sizeof(__pyx_k_set_N_elec), 0, 0, 1, 1},
  {&__pyx_n_s_set_Nexc, __pyx_k_set_Nexc, sizeof(__pyx_k_set_Nexc), 0, 0, 1, 1},
  {&__pyx_n_s_set_Nk, __pyx_k_set_Nk, sizeof(__pyx_k_set_Nk), 0, 0, 1, 1},
  {&__pyx_n_s_set_Nocc, __pyx_k_set_Nocc, sizeof(__pyx_k_set_Nocc), 0, 0, 1, 1},
  {&__pyx_n_s_set_Nvir, __pyx_k_set_Nvir, sizeof(__pyx_k_set_Nvir), 0, 0, 1, 1},
  {&__pyx_n_s_set_bzone_length, __pyx_k_set_bzone_length, sizeof(__pyx_k_set_bzone_length), 0, 0, 1, 1},
  {&__pyx_n_s_set_dav_its, __pyx_k_set_dav_its, sizeof(__pyx_k_set_dav_its), 0, 0, 1, 1},
  {&__pyx_n_s_set_dav_message, __pyx_k_set_dav_message, sizeof(__pyx_k_set_dav_message), 0, 0, 1, 1},
  {&__pyx_n_s_set_dav_vals, __pyx_k_set_dav_vals, sizeof(__pyx_k_set_dav_vals), 0, 0, 1, 1},
  {&__pyx_n_s_set_dav_vecs, __pyx_k_set_dav_vecs, sizeof(__pyx_k_set_dav_vecs), 0, 0, 1, 1},
  {&__pyx_n_s_set_deltaK, __pyx_k_set_deltaK, sizeof(__pyx_k_set_deltaK), 0, 0, 1, 1},
  {&__pyx_n_s_set_exc_energies, __pyx_k_set_exc_energies, sizeof(__pyx_k_set_exc_energies), 0, 0, 1, 1},
  {&__pyx_n_s_set_excitations, __pyx_k_set_excitations, sizeof(__pyx_k_set_excitations), 0, 0, 1, 1},
  {&__pyx_n_s_set_fermi_energy, __pyx_k_set_fermi_energy, sizeof(__pyx_k_set_fermi_energy), 0, 0, 1, 1},
  {&__pyx_n_s_set_inp_test_vec, __pyx_k_set_inp_test_vec, sizeof(__pyx_k_set_inp_test_vec), 0, 0, 1, 1},
  {&__pyx_n_s_set_inv_exc_map_test, __pyx_k_set_inv_exc_map_test, sizeof(__pyx_k_set_inv_exc_map_test), 0, 0, 1, 1},
  {&__pyx_n_s_set_kf, __pyx_k_set_kf, sizeof(__pyx_k_set_kf), 0, 0, 1, 1},
  {&__pyx_n_s_set_kgrid, __pyx_k_set_kgrid, sizeof(__pyx_k_set_kgrid), 0, 0, 1, 1},
  {&__pyx_n_s_set_kmax, __pyx_k_set_kmax, sizeof(__pyx_k_set_kmax), 0, 0, 1, 1},
  {&__pyx_n_s_set_mattest, __pyx_k_set_mattest, sizeof(__pyx_k_set_mattest), 0, 0, 1, 1},
  {&__pyx_n_s_set_ndim, __pyx_k_set_ndim, sizeof(__pyx_k_set_ndim), 0, 0, 1, 1},
  {&__pyx_n_s_set_occ_energies, __pyx_k_set_occ_energies, sizeof(__pyx_k_set_occ_energies), 0, 0, 1, 1},
  {&__pyx_n_s_set_occ_states, __pyx_k_set_occ_states, sizeof(__pyx_k_set_occ_states), 0, 0, 1, 1},
  {&__pyx_n_s_set_out_vec1, __pyx_k_set_out_vec1, sizeof(__pyx_k_set_out_vec1), 0, 0, 1, 1},
  {&__pyx_n_s_set_out_vec2, __pyx_k_set_out_vec2, sizeof(__pyx_k_set_out_vec2), 0, 0, 1, 1},
  {&__pyx_n_s_set_rs, __pyx_k_set_rs, sizeof(__pyx_k_set_rs), 0, 0, 1, 1},
  {&__pyx_n_s_set_states, __pyx_k_set_states, sizeof(__pyx_k_set_states), 0, 0, 1, 1},
  {&__pyx_n_s_set_two_e_const, __pyx_k_set_two_e_const, sizeof(__pyx_k_set_two_e_const), 0, 0, 1, 1},
  {&__pyx_n_s_set_vir_energies, __pyx_k_set_vir_energies, sizeof(__pyx_k_set_vir_energies), 0, 0, 1, 1},
  {&__pyx_n_s_set_vir_states, __pyx_k_set_vir_states, sizeof(__pyx_k_set_vir_states), 0, 0, 1, 1},
  {&__pyx_n_s_set_vol, __pyx_k_set_vol, sizeof(__pyx_k_set_vol), 0, 0, 1, 1},
  {&__pyx_n_s_sns, __pyx_k_sns, sizeof(__pyx_k_sns), 0, 0, 1, 1},
  {&__pyx_n_s_sp, __pyx_k_sp, sizeof(__pyx_k_sp), 0, 0, 1, 1},
  {&__pyx_n_s_spec_alpha, __pyx_k_spec_alpha, sizeof(__pyx_k_spec_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_spec_virs, __pyx_k_spec_virs, sizeof(__pyx_k_spec_virs), 0, 0, 1, 1},
  {&__pyx_n_s_special, __pyx_k_special, sizeof(__pyx_k_special), 0, 0, 1, 1},
  {&__pyx_n_s_sqrpoints, __pyx_k_sqrpoints, sizeof(__pyx_k_sqrpoints), 0, 0, 1, 1},
  {&__pyx_n_s_square, __pyx_k_square, sizeof(__pyx_k_square), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_title, __pyx_k_title, sizeof(__pyx_k_title), 0, 0, 1, 1},
  {&__pyx_n_s_uint64, __pyx_k_uint64, sizeof(__pyx_k_uint64), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
  {&__pyx_n_s_val1, __pyx_k_val1, sizeof(__pyx_k_val1), 0, 0, 1, 1},
  {&__pyx_n_s_val2, __pyx_k_val2, sizeof(__pyx_k_val2), 0, 0, 1, 1},
  {&__pyx_n_s_val3, __pyx_k_val3, sizeof(__pyx_k_val3), 0, 0, 1, 1},
  {&__pyx_n_s_val4, __pyx_k_val4, sizeof(__pyx_k_val4), 0, 0, 1, 1},
  {&__pyx_n_s_val5, __pyx_k_val5, sizeof(__pyx_k_val5), 0, 0, 1, 1},
  {&__pyx_n_s_val6, __pyx_k_val6, sizeof(__pyx_k_val6), 0, 0, 1, 1},
  {&__pyx_n_s_val7, __pyx_k_val7, sizeof(__pyx_k_val7), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_where, __pyx_k_where, sizeof(__pyx_k_where), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_xlabel, __pyx_k_xlabel, sizeof(__pyx_k_xlabel), 0, 0, 1, 1},
  {&__pyx_n_s_xlim, __pyx_k_xlim, sizeof(__pyx_k_xlim), 0, 0, 1, 1},
  {&__pyx_n_s_xmax, __pyx_k_xmax, sizeof(__pyx_k_xmax), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_ylabel, __pyx_k_ylabel, sizeof(__pyx_k_ylabel), 0, 0, 1, 1},
  {&__pyx_n_s_ylim, __pyx_k_ylim, sizeof(__pyx_k_ylim), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 306, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(2, 218, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(2, 799, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "HFS_CythonGenerated.pyx":127
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 *     circle = plt.Circle((0, 0), radius=get_kf(), fc='none', linewidth=1)             # <<<<<<<<<<<<<<
 *     sqrpoints = [[get_kmax(), get_kmax()]
 *                 ,[get_kmax(), -get_kmax()]
 */
  __pyx_tuple_ = PyTuple_Pack(2, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_tuple_); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "HFS_CythonGenerated.pyx":137
 * 
 *     # Get 'spectator virtuals'
 *     kvir_y = get_kgrid()[get_vir_states()[:, 1]]             # <<<<<<<<<<<<<<
 *     is_spec = np.logical_or((kvir_y > get_kf()), (kvir_y < -get_kf()))
 *     mask = np.where(is_spec)
 */
  __pyx_slice__3 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__3)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__3);
  __Pyx_GIVEREF(__pyx_slice__3);
  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_slice__3, __pyx_int_1); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "HFS_CythonGenerated.pyx":144
 *     active_virs = get_kgrid()[get_vir_states()[mask2]]
 * 
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 */
  __pyx_slice__5 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__5)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__5);
  __Pyx_GIVEREF(__pyx_slice__5);
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_slice__5, __pyx_int_0); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_slice__7 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__7)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__7);
  __Pyx_GIVEREF(__pyx_slice__7);
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_slice__7, __pyx_int_1); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "HFS_CythonGenerated.pyx":146
 *     plt.scatter(get_kgrid()[get_occ_states()[:,0]], get_kgrid()[get_occ_states()[:,1]],
 *                 c=sns.color_palette()[0], label='Occupied')
 *     plt.scatter(active_virs[:,0], active_virs[:,1],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],
 */
  __pyx_slice__9 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__9)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__9);
  __Pyx_GIVEREF(__pyx_slice__9);
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_slice__9, __pyx_int_0); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);
  __pyx_slice__11 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__11)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__11);
  __Pyx_GIVEREF(__pyx_slice__11);
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_slice__11, __pyx_int_1); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "HFS_CythonGenerated.pyx":148
 *     plt.scatter(active_virs[:,0], active_virs[:,1],
 *                 c=sns.color_palette()[2], label='Virtual')
 *     plt.scatter(spec_virs[:,0], spec_virs[:,1],             # <<<<<<<<<<<<<<
 *                 c=sns.color_palette()[2], alpha=spec_alpha, label='Spectator Virtuals')
 *     scale = 1.05
 */
  __pyx_slice__13 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__13)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__13);
  __Pyx_GIVEREF(__pyx_slice__13);
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_slice__13, __pyx_int_0); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_slice__15 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__15)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__15);
  __Pyx_GIVEREF(__pyx_slice__15);
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_slice__15, __pyx_int_1); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(1, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "HFS_CythonGenerated.pyx":154
 *     plt.ylim(-scale*get_kmax(), scale*get_kmax())
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])
 *     plt.axis('off')             # <<<<<<<<<<<<<<
 *     plt.title('The First Brillouin Zone')
 * 
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_n_s_off); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(1, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "HFS_CythonGenerated.pyx":155
 *     plt.legend(loc='center left', bbox_to_anchor=[0.95,0.5])
 *     plt.axis('off')
 *     plt.title('The First Brillouin Zone')             # <<<<<<<<<<<<<<
 * 
 * def plot_energy(analytic=True, Discretized=True):
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_The_First_Brillouin_Zone); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(1, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "HFS_CythonGenerated.pyx":171
 *         plt.plot(x, exch_x, 'k--', label='Exchange')
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))
 *     plt.xlabel(r'$\frac{k}{k_f}$')             # <<<<<<<<<<<<<<
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')
 *     plt.xlim(0, 2)
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_frac_k_k_f); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(1, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "HFS_CythonGenerated.pyx":172
 *     plt.title('Orbital Energies\n'+str(get_ndim()) + 'D, rs = ' + str(get_rs()))
 *     plt.xlabel(r'$\frac{k}{k_f}$')
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')             # <<<<<<<<<<<<<<
 *     plt.xlim(0, 2)
 *     plt.ylim(scale * np.amin(energy_x), scale * np.amax(energy_x))
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_frac_epsilon_k_HF_epsilon_F); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "HFS_CythonGenerated.pyx":173
 *     plt.xlabel(r'$\frac{k}{k_f}$')
 *     plt.ylabel(r'$\frac{\epsilon_k^{HF}}{\epsilon_F}$')
 *     plt.xlim(0, 2)             # <<<<<<<<<<<<<<
 *     plt.ylim(scale * np.amin(energy_x), scale * np.amax(energy_x))
 * 
 */
  __pyx_tuple__21 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_2); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(1, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "HFS_CythonGenerated.pyx":188
 * def plot_exc_hist():
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')             # <<<<<<<<<<<<<<
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')
 *     plt.ylabel('Count')
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_Excitation_Energy_Histogram); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "HFS_CythonGenerated.pyx":189
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')             # <<<<<<<<<<<<<<
 *     plt.ylabel('Count')
 * 
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_epsilon__vir_epsilon__occ_Hartr); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(1, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "HFS_CythonGenerated.pyx":190
 *     plt.title('Excitation Energy Histogram')
 *     plt.xlabel('$\epsilon_{vir} - \epsilon_{occ}$ (Hartree)')
 *     plt.ylabel('Count')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_n_s_Count); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(1, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(2, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(2, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(2, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(2, 799, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(2, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "../../../anaconda2/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(2, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "HFS_CythonGenerated.pyx":93
 * #                                                                               #
 * #################################################################################
 * def py_f2D(y):             # <<<<<<<<<<<<<<
 *     if y <= 1.0:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 */
  __pyx_tuple__33 = PyTuple_Pack(2, __pyx_n_s_y, __pyx_n_s_x); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);
  __pyx_codeobj__34 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_f2D, 93, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__34)) __PYX_ERR(1, 93, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":102
 *         return y * (sp.ellipe(x*x) - (1.0 - x*x) * sp.ellipk(x*x))
 * 
 * def py_f3D(y):             # <<<<<<<<<<<<<<
 *     if y < 10e-10:
 *         return 1.0
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_n_s_y); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(1, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);
  __pyx_codeobj__36 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__35, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_f3D, 102, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__36)) __PYX_ERR(1, 102, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":107
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 * 
 * def py_analytic_exch(k):             # <<<<<<<<<<<<<<
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:
 */
  __pyx_tuple__37 = PyTuple_Pack(2, __pyx_n_s_k_4, __pyx_n_s_const); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_analytic_exch, 107, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(1, 107, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":114
 *         return const * py_f3D(k / get_kf())
 * 
 * def py_analytic_energy(k):             # <<<<<<<<<<<<<<
 *     x = np.linalg.norm(k)  #works on k of any dimension
 *     return (x*x / 2.0) + py_analytic_exch(x)
 */
  __pyx_tuple__39 = PyTuple_Pack(2, __pyx_n_s_k_4, __pyx_n_s_x); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(1, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_analytic_energy, 114, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(1, 114, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":124
 * #                                                                               #
 * #################################################################################
 * def plot_1stBZ(spec_alpha=0.20):             # <<<<<<<<<<<<<<
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 */
  __pyx_tuple__41 = PyTuple_Pack(11, __pyx_n_s_spec_alpha, __pyx_n_s_circle, __pyx_n_s_sqrpoints, __pyx_n_s_square, __pyx_n_s_kvir_y, __pyx_n_s_is_spec, __pyx_n_s_mask, __pyx_n_s_spec_virs, __pyx_n_s_mask2, __pyx_n_s_active_virs, __pyx_n_s_scale); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(1, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(1, 0, 11, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_plot_1stBZ, 124, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(1, 124, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":157
 *     plt.title('The First Brillouin Zone')
 * 
 * def plot_energy(analytic=True, Discretized=True):             # <<<<<<<<<<<<<<
 *     scale = 1.2
 *     #Analytic plot
 */
  __pyx_tuple__43 = PyTuple_Pack(10, __pyx_n_s_analytic, __pyx_n_s_Discretized, __pyx_n_s_scale, __pyx_n_s_xmax, __pyx_n_s_x, __pyx_n_s_energy_x, __pyx_n_s_kinetic_x, __pyx_n_s_exch_x, __pyx_n_s_y, __pyx_n_s_i); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(2, 0, 10, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__43, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_plot_energy, 157, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) __PYX_ERR(1, 157, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":186
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 * 
 * def plot_exc_hist():             # <<<<<<<<<<<<<<
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')
 */
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_plot_exc_hist, 186, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(1, 186, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":196
 * #                               Py Funcs                               #
 * ########################################################################
 * def py_calc_kf():             # <<<<<<<<<<<<<<
 *     calc_kf()
 * 
 */
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_kf, 196, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(1, 196, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":199
 *     calc_kf()
 * 
 * def py_calc_vol_and_two_e_const():             # <<<<<<<<<<<<<<
 *     calc_vol_and_two_e_const()
 * 
 */
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_vol_and_two_e_const, 199, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(1, 199, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":202
 *     calc_vol_and_two_e_const()
 * 
 * def py_print_params():             # <<<<<<<<<<<<<<
 *     print_params()
 * 
 */
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_print_params, 202, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(1, 202, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":205
 *     print_params()
 * 
 * def py_calc_occ_states():             # <<<<<<<<<<<<<<
 *     calc_occ_states()
 * 
 */
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_occ_states, 205, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(1, 205, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":208
 *     calc_occ_states()
 * 
 * def py_calc_occ_energies():             # <<<<<<<<<<<<<<
 *     calc_occ_energies()
 * 
 */
  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_occ_energies, 208, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(1, 208, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":211
 *     calc_occ_energies()
 * 
 * def py_calc_vir_energies():             # <<<<<<<<<<<<<<
 *     calc_vir_energies()
 * 
 */
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_vir_energies, 211, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(1, 211, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":214
 *     calc_vir_energies()
 * 
 * def py_calc_excitations():             # <<<<<<<<<<<<<<
 *     calc_excitations()
 * 
 */
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_excitations, 214, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(1, 214, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":217
 *     calc_excitations()
 * 
 * def py_is_vir(float val):             # <<<<<<<<<<<<<<
 *     return is_vir(val)
 * 
 */
  __pyx_tuple__53 = PyTuple_Pack(2, __pyx_n_s_val, __pyx_n_s_val); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_is_vir, 217, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(1, 217, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":220
 *     return is_vir(val)
 * 
 * def py_calc_exc_energy():             # <<<<<<<<<<<<<<
 *     calc_exc_energy()
 * 
 */
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_exc_energy, 220, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(1, 220, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":223
 *     calc_exc_energy()
 * 
 * def py_calc_energies(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                      np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */
  __pyx_tuple__56 = PyTuple_Pack(4, __pyx_n_s_val1, __pyx_n_s_val2, __pyx_n_s_VAL1, __pyx_n_s_VAL2); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(1, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_energies, 223, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(1, 223, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":229
 *     calc_energies(VAL1, VAL2)
 * 
 * def py_exchange(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                 int val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */
  __pyx_tuple__58 = PyTuple_Pack(3, __pyx_n_s_val1, __pyx_n_s_val2, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_exchange, 229, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(1, 229, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":234
 *     return exchange(VAL1, val2)
 * 
 * def py_two_electron(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */
  __pyx_tuple__60 = PyTuple_Pack(4, __pyx_n_s_val1, __pyx_n_s_val2, __pyx_n_s_VAL1, __pyx_n_s_VAL2); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(1, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_two_electron, 234, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(1, 234, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":240
 *     return two_electron(VAL1, VAL2)
 * 
 * def py_two_electron_check(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=1] val2,
 *                           np.ndarray[double, ndim=1] val3,
 */
  __pyx_tuple__62 = PyTuple_Pack(8, __pyx_n_s_val1, __pyx_n_s_val2, __pyx_n_s_val3, __pyx_n_s_val4, __pyx_n_s_VAL1, __pyx_n_s_VAL2, __pyx_n_s_VAL3, __pyx_n_s_VAL4); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(1, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(4, 0, 8, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_two_electron_check, 240, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(1, 240, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":250
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)
 * 
 * def py_calc_1B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1B(val1, val2)
 */
  __pyx_tuple__64 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_val2); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_1B, 250, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(1, 250, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":254
 *     return calc_1B(val1, val2)
 * 
 * def py_calc_3B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3B(val1, val2)
 */
  __pyx_tuple__66 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_val2); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(1, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_3B, 254, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(1, 254, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":258
 *     return calc_3B(val1, val2)
 * 
 * def py_calc_1A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1A(val1, val2)
 */
  __pyx_tuple__68 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_val2); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(1, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_1A, 258, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(1, 258, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":262
 *     return calc_1A(val1, val2)
 * 
 * def py_calc_3A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3A(val1, val2)
 */
  __pyx_tuple__70 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_val2); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(1, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_3A, 262, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(1, 262, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":266
 *     return calc_3A(val1, val2)
 * 
 * def py_calc_3H(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3H(val1, val2)
 */
  __pyx_tuple__72 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_val2); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(1, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_3H, 266, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(1, 266, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":270
 *     return calc_3H(val1, val2)
 * 
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     to_first_BZ(VAL1)
 */
  __pyx_tuple__74 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(1, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__74, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_to_first_BZ, 270, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(1, 270, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":274
 *     to_first_BZ(VAL1)
 * 
 * def py_calc_params():             # <<<<<<<<<<<<<<
 *     calc_params()
 * 
 */
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_params, 274, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(1, 274, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":277
 *     calc_params()
 * 
 * def py_calc_inv_exc_map():             # <<<<<<<<<<<<<<
 *     calc_inv_exc_map()
 * 
 */
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_inv_exc_map, 277, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(1, 277, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":280
 *     calc_inv_exc_map()
 * 
 * def py_calc_vir_N_to_1_map():             # <<<<<<<<<<<<<<
 *     calc_vir_N_to_1_map()
 * 
 */
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_calc_vir_N_to_1_map, 280, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(1, 280, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":283
 *     calc_vir_N_to_1_map()
 * 
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return uvec_to_numpy(k_to_index(VAL1))
 */
  __pyx_tuple__79 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__79, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_k_to_index, 283, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(1, 283, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":287
 *     return uvec_to_numpy(k_to_index(VAL1))
 * 
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_mat_d(val1)
 *     return umat_to_numpy(k_to_index(VAL1))
 */
  __pyx_tuple__81 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_k_to_index, 287, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(1, 287, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":291
 *     return umat_to_numpy(k_to_index(VAL1))
 * 
 * def py_build_mattest():             # <<<<<<<<<<<<<<
 *     build_mattest()
 * 
 */
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_build_mattest, 291, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(1, 291, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":294
 *     build_mattest()
 * 
 * def py_matvec_prod_me():             # <<<<<<<<<<<<<<
 *     matvec_prod_me()
 * 
 */
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_matvec_prod_me, 294, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(1, 294, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":297
 *     matvec_prod_me()
 * 
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 */
  __pyx_tuple__85 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__85, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_matvec_prod_3H, 297, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(1, 297, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":301
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 * 
 * def py_davidson_wrapper(int val1,             # <<<<<<<<<<<<<<
 *                         int val2,
 *                         int val3,
 */
  __pyx_tuple__87 = PyTuple_Pack(8, __pyx_n_s_val1, __pyx_n_s_val2, __pyx_n_s_val3, __pyx_n_s_val4, __pyx_n_s_val5, __pyx_n_s_val6, __pyx_n_s_val7, __pyx_n_s_VAL5); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);
  __pyx_codeobj__88 = (PyObject*)__Pyx_PyCode_New(7, 0, 8, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__87, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_davidson_wrapper, 301, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__88)) __PYX_ERR(1, 301, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":311
 *     davidson_wrapper(val1, val2, val3, val4, VAL5, val6, val7)
 * 
 * def py_kb_j_to_t(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                  int val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */
  __pyx_tuple__89 = PyTuple_Pack(3, __pyx_n_s_val1, __pyx_n_s_val2, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);
  __pyx_codeobj__90 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__89, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_kb_j_to_t, 311, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__90)) __PYX_ERR(1, 311, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":316
 *     return kb_j_to_t(VAL1, val2)
 * 
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 */
  __pyx_tuple__91 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(1, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__91, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_matvec_prod_3A, 316, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(1, 316, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":320
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 * 
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 */
  __pyx_tuple__93 = PyTuple_Pack(2, __pyx_n_s_val1, __pyx_n_s_VAL1); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(1, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_matvec_prod_3B, 320, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(1, 320, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":324
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 * 
 * def py_occ_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 */
  __pyx_tuple__95 = PyTuple_Pack(2, __pyx_n_s_val, __pyx_n_s_val); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(1, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_occ_idx_to_k, 324, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(1, 324, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":327
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 * def py_vir_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(vir_idx_to_k(val))
 * 
 */
  __pyx_tuple__97 = PyTuple_Pack(2, __pyx_n_s_val, __pyx_n_s_val); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__97, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_py_vir_idx_to_k, 327, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(1, 327, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":335
 * #                         Generated Properties                         #
 * ########################################################################
 * def get_bzone_length():             # <<<<<<<<<<<<<<
 *     """(float) Get bzone_length"""
 *     global bzone_length
 */
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_bzone_length, 335, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(1, 335, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":339
 *     global bzone_length
 *     return bzone_length
 * def set_bzone_length(value):             # <<<<<<<<<<<<<<
 *     """(o) Set bzone_length"""
 *     global bzone_length
 */
  __pyx_tuple__100 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_bzone_length, 339, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(1, 339, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":345
 * 
 * 
 * def get_vol():             # <<<<<<<<<<<<<<
 *     """(float) Get vol"""
 *     global vol
 */
  __pyx_codeobj__102 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_vol, 345, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__102)) __PYX_ERR(1, 345, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":349
 *     global vol
 *     return vol
 * def set_vol(value):             # <<<<<<<<<<<<<<
 *     """(o) Set vol"""
 *     global vol
 */
  __pyx_tuple__103 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);
  __pyx_codeobj__104 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__103, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_vol, 349, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__104)) __PYX_ERR(1, 349, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":355
 * 
 * 
 * def get_rs():             # <<<<<<<<<<<<<<
 *     """(float) Get rs"""
 *     global rs
 */
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_rs, 355, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(1, 355, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":359
 *     global rs
 *     return rs
 * def set_rs(value):             # <<<<<<<<<<<<<<
 *     """(o) Set rs"""
 *     global rs
 */
  __pyx_tuple__106 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_rs, 359, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(1, 359, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":365
 * 
 * 
 * def get_kf():             # <<<<<<<<<<<<<<
 *     """(float) Get kf"""
 *     global kf
 */
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_kf, 365, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(1, 365, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":369
 *     global kf
 *     return kf
 * def set_kf(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kf"""
 *     global kf
 */
  __pyx_tuple__109 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__109)) __PYX_ERR(1, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__109);
  __Pyx_GIVEREF(__pyx_tuple__109);
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__109, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_kf, 369, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(1, 369, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":375
 * 
 * 
 * def get_kmax():             # <<<<<<<<<<<<<<
 *     """(float) Get kmax"""
 *     global kmax
 */
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_kmax, 375, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(1, 375, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":379
 *     global kmax
 *     return kmax
 * def set_kmax(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kmax"""
 *     global kmax
 */
  __pyx_tuple__112 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(1, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__112, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_kmax, 379, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(1, 379, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":385
 * 
 * 
 * def get_fermi_energy():             # <<<<<<<<<<<<<<
 *     """(float) Get fermi_energy"""
 *     global fermi_energy
 */
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_fermi_energy, 385, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(1, 385, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":389
 *     global fermi_energy
 *     return fermi_energy
 * def set_fermi_energy(value):             # <<<<<<<<<<<<<<
 *     """(o) Set fermi_energy"""
 *     global fermi_energy
 */
  __pyx_tuple__115 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(1, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__115, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_fermi_energy, 389, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(1, 389, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":395
 * 
 * 
 * def get_two_e_const():             # <<<<<<<<<<<<<<
 *     """(float) Get two_e_const"""
 *     global two_e_const
 */
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_two_e_const, 395, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(1, 395, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":399
 *     global two_e_const
 *     return two_e_const
 * def set_two_e_const(value):             # <<<<<<<<<<<<<<
 *     """(o) Set two_e_const"""
 *     global two_e_const
 */
  __pyx_tuple__118 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_two_e_const, 399, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(1, 399, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":405
 * 
 * 
 * def get_deltaK():             # <<<<<<<<<<<<<<
 *     """(float) Get deltaK"""
 *     global deltaK
 */
  __pyx_codeobj__120 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_deltaK, 405, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__120)) __PYX_ERR(1, 405, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":409
 *     global deltaK
 *     return deltaK
 * def set_deltaK(value):             # <<<<<<<<<<<<<<
 *     """(o) Set deltaK"""
 *     global deltaK
 */
  __pyx_tuple__121 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(1, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__121, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_deltaK, 409, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(1, 409, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":415
 * 
 * 
 * def get_Nocc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nocc"""
 *     global Nocc
 */
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_Nocc, 415, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) __PYX_ERR(1, 415, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":419
 *     global Nocc
 *     return Nocc
 * def set_Nocc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nocc"""
 *     global Nocc
 */
  __pyx_tuple__124 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__124)) __PYX_ERR(1, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_Nocc, 419, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(1, 419, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":425
 * 
 * 
 * def get_Nvir():             # <<<<<<<<<<<<<<
 *     """(int) Get Nvir"""
 *     global Nvir
 */
  __pyx_codeobj__126 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_Nvir, 425, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__126)) __PYX_ERR(1, 425, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":429
 *     global Nvir
 *     return Nvir
 * def set_Nvir(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nvir"""
 *     global Nvir
 */
  __pyx_tuple__127 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(1, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__127, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_Nvir, 429, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(1, 429, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":435
 * 
 * 
 * def get_Nexc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nexc"""
 *     global Nexc
 */
  __pyx_codeobj__129 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_Nexc, 435, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__129)) __PYX_ERR(1, 435, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":439
 *     global Nexc
 *     return Nexc
 * def set_Nexc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nexc"""
 *     global Nexc
 */
  __pyx_tuple__130 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(1, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__130, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_Nexc, 439, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(1, 439, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":445
 * 
 * 
 * def get_N_elec():             # <<<<<<<<<<<<<<
 *     """(int) Get N_elec"""
 *     global N_elec
 */
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_N_elec, 445, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(1, 445, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":449
 *     global N_elec
 *     return N_elec
 * def set_N_elec(value):             # <<<<<<<<<<<<<<
 *     """(t) Set N_elec"""
 *     global N_elec
 */
  __pyx_tuple__133 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__133)) __PYX_ERR(1, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__133);
  __Pyx_GIVEREF(__pyx_tuple__133);
  __pyx_codeobj__134 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__133, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_N_elec, 449, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__134)) __PYX_ERR(1, 449, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":455
 * 
 * 
 * def get_Nk():             # <<<<<<<<<<<<<<
 *     """(int) Get Nk"""
 *     global Nk
 */
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_Nk, 455, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(1, 455, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":459
 *     global Nk
 *     return Nk
 * def set_Nk(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nk"""
 *     global Nk
 */
  __pyx_tuple__136 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(1, 459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_Nk, 459, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(1, 459, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":465
 * 
 * 
 * def get_ndim():             # <<<<<<<<<<<<<<
 *     """(int) Get ndim"""
 *     global ndim
 */
  __pyx_codeobj__138 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_ndim, 465, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__138)) __PYX_ERR(1, 465, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":469
 *     global ndim
 *     return ndim
 * def set_ndim(value):             # <<<<<<<<<<<<<<
 *     """(t) Set ndim"""
 *     global ndim
 */
  __pyx_tuple__139 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__139)) __PYX_ERR(1, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__139);
  __Pyx_GIVEREF(__pyx_tuple__139);
  __pyx_codeobj__140 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__139, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_ndim, 469, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__140)) __PYX_ERR(1, 469, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":475
 * 
 * 
 * def get_occ_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get occ_energies"""
 *     global occ_energies
 */
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_occ_energies, 475, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(1, 475, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":479
 *     global occ_energies
 *     return vec_to_numpy(occ_energies)
 * def set_occ_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set occ_energies"""
 */
  __pyx_tuple__142 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(1, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_occ_energies, 479, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(1, 479, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":486
 * 
 * 
 * def get_vir_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get vir_energies"""
 *     global vir_energies
 */
  __pyx_codeobj__144 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_vir_energies, 486, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__144)) __PYX_ERR(1, 486, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":490
 *     global vir_energies
 *     return vec_to_numpy(vir_energies)
 * def set_vir_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set vir_energies"""
 */
  __pyx_tuple__145 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__145)) __PYX_ERR(1, 490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__145);
  __Pyx_GIVEREF(__pyx_tuple__145);
  __pyx_codeobj__146 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_vir_energies, 490, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__146)) __PYX_ERR(1, 490, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":497
 * 
 * 
 * def get_exc_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get exc_energies"""
 *     global exc_energies
 */
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_exc_energies, 497, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(1, 497, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":501
 *     global exc_energies
 *     return vec_to_numpy(exc_energies)
 * def set_exc_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set exc_energies"""
 */
  __pyx_tuple__148 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(1, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__148, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_exc_energies, 501, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(1, 501, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":508
 * 
 * 
 * def get_kgrid():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get kgrid"""
 *     global kgrid
 */
  __pyx_codeobj__150 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_kgrid, 508, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__150)) __PYX_ERR(1, 508, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":512
 *     global kgrid
 *     return vec_to_numpy(kgrid)
 * def set_kgrid(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set kgrid"""
 */
  __pyx_tuple__151 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__151)) __PYX_ERR(1, 512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__151);
  __Pyx_GIVEREF(__pyx_tuple__151);
  __pyx_codeobj__152 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__151, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_kgrid, 512, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__152)) __PYX_ERR(1, 512, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":519
 * 
 * 
 * def get_inp_test_vec():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get inp_test_vec"""
 *     global inp_test_vec
 */
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_inp_test_vec, 519, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(1, 519, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":523
 *     global inp_test_vec
 *     return vec_to_numpy(inp_test_vec)
 * def set_inp_test_vec(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set inp_test_vec"""
 */
  __pyx_tuple__154 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(1, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__154, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_inp_test_vec, 523, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(1, 523, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":530
 * 
 * 
 * def get_out_vec1():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec1"""
 *     global out_vec1
 */
  __pyx_codeobj__156 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_out_vec1, 530, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__156)) __PYX_ERR(1, 530, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":534
 *     global out_vec1
 *     return vec_to_numpy(out_vec1)
 * def set_out_vec1(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec1"""
 */
  __pyx_tuple__157 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__157)) __PYX_ERR(1, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__157);
  __Pyx_GIVEREF(__pyx_tuple__157);
  __pyx_codeobj__158 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__157, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_out_vec1, 534, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__158)) __PYX_ERR(1, 534, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":541
 * 
 * 
 * def get_out_vec2():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec2"""
 *     global out_vec2
 */
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_out_vec2, 541, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) __PYX_ERR(1, 541, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":545
 *     global out_vec2
 *     return vec_to_numpy(out_vec2)
 * def set_out_vec2(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec2"""
 */
  __pyx_tuple__160 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__160)) __PYX_ERR(1, 545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__160);
  __Pyx_GIVEREF(__pyx_tuple__160);
  __pyx_codeobj__161 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__160, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_out_vec2, 545, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__161)) __PYX_ERR(1, 545, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":552
 * 
 * 
 * def get_mattest():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get mattest"""
 *     global mattest
 */
  __pyx_codeobj__162 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_mattest, 552, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__162)) __PYX_ERR(1, 552, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":556
 *     global mattest
 *     return mat_to_numpy(mattest)
 * def set_mattest(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set mattest"""
 */
  __pyx_tuple__163 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__163)) __PYX_ERR(1, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__163);
  __Pyx_GIVEREF(__pyx_tuple__163);
  __pyx_codeobj__164 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__163, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_mattest, 556, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__164)) __PYX_ERR(1, 556, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":563
 * 
 * 
 * def get_occ_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get occ_states"""
 *     global occ_states
 */
  __pyx_codeobj__165 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_occ_states, 563, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__165)) __PYX_ERR(1, 563, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":567
 *     global occ_states
 *     return umat_to_numpy(occ_states)
 * def set_occ_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set occ_states"""
 */
  __pyx_tuple__166 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__166)) __PYX_ERR(1, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__166);
  __Pyx_GIVEREF(__pyx_tuple__166);
  __pyx_codeobj__167 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__166, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_occ_states, 567, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__167)) __PYX_ERR(1, 567, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":574
 * 
 * 
 * def get_vir_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get vir_states"""
 *     global vir_states
 */
  __pyx_codeobj__168 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_vir_states, 574, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__168)) __PYX_ERR(1, 574, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":578
 *     global vir_states
 *     return umat_to_numpy(vir_states)
 * def set_vir_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set vir_states"""
 */
  __pyx_tuple__169 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__169)) __PYX_ERR(1, 578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__169);
  __Pyx_GIVEREF(__pyx_tuple__169);
  __pyx_codeobj__170 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__169, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_vir_states, 578, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__170)) __PYX_ERR(1, 578, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":585
 * 
 * 
 * def get_excitations():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get excitations"""
 *     global excitations
 */
  __pyx_codeobj__171 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_excitations, 585, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__171)) __PYX_ERR(1, 585, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":589
 *     global excitations
 *     return umat_to_numpy(excitations)
 * def set_excitations(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set excitations"""
 */
  __pyx_tuple__172 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__172)) __PYX_ERR(1, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__172);
  __Pyx_GIVEREF(__pyx_tuple__172);
  __pyx_codeobj__173 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__172, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_excitations, 589, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__173)) __PYX_ERR(1, 589, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":596
 * 
 * 
 * def get_dav_vals():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get dav_vals"""
 *     global dav_vals
 */
  __pyx_codeobj__174 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_dav_vals, 596, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__174)) __PYX_ERR(1, 596, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":600
 *     global dav_vals
 *     return vec_to_numpy(dav_vals)
 * def set_dav_vals(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set dav_vals"""
 */
  __pyx_tuple__175 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__175)) __PYX_ERR(1, 600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__175);
  __Pyx_GIVEREF(__pyx_tuple__175);
  __pyx_codeobj__176 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__175, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_dav_vals, 600, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__176)) __PYX_ERR(1, 600, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":607
 * 
 * 
 * def get_dav_vecs():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get dav_vecs"""
 *     global dav_vecs
 */
  __pyx_codeobj__177 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_dav_vecs, 607, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__177)) __PYX_ERR(1, 607, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":611
 *     global dav_vecs
 *     return mat_to_numpy(dav_vecs)
 * def set_dav_vecs(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set dav_vecs"""
 */
  __pyx_tuple__178 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__178)) __PYX_ERR(1, 611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__178);
  __Pyx_GIVEREF(__pyx_tuple__178);
  __pyx_codeobj__179 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__178, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_dav_vecs, 611, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__179)) __PYX_ERR(1, 611, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":618
 * 
 * 
 * def get_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get states"""
 *     global states
 */
  __pyx_codeobj__180 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_states, 618, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__180)) __PYX_ERR(1, 618, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":622
 *     global states
 *     return mat_to_numpy(states)
 * def set_states(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set states"""
 */
  __pyx_tuple__181 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__181)) __PYX_ERR(1, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__181);
  __Pyx_GIVEREF(__pyx_tuple__181);
  __pyx_codeobj__182 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__181, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_states, 622, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__182)) __PYX_ERR(1, 622, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":629
 * 
 * 
 * def get_dav_its():             # <<<<<<<<<<<<<<
 *     """(int) Get dav_its"""
 *     global dav_its
 */
  __pyx_codeobj__183 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_dav_its, 629, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__183)) __PYX_ERR(1, 629, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":633
 *     global dav_its
 *     return dav_its
 * def set_dav_its(value):             # <<<<<<<<<<<<<<
 *     """(t) Set dav_its"""
 *     global dav_its
 */
  __pyx_tuple__184 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__184)) __PYX_ERR(1, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__184);
  __Pyx_GIVEREF(__pyx_tuple__184);
  __pyx_codeobj__185 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__184, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_dav_its, 633, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__185)) __PYX_ERR(1, 633, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":639
 * 
 * 
 * def get_dav_message():             # <<<<<<<<<<<<<<
 *     """(str) Get dav_message"""
 *     global dav_message
 */
  __pyx_codeobj__186 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_dav_message, 639, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__186)) __PYX_ERR(1, 639, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":643
 *     global dav_message
 *     return dav_message
 * def set_dav_message(value):             # <<<<<<<<<<<<<<
 *     """(r) Set dav_message"""
 *     global dav_message
 */
  __pyx_tuple__187 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__187)) __PYX_ERR(1, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__187);
  __Pyx_GIVEREF(__pyx_tuple__187);
  __pyx_codeobj__188 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__187, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_dav_message, 643, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__188)) __PYX_ERR(1, 643, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":649
 * 
 * 
 * def get_inv_exc_map_test():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=1]) Get inv_exc_map_test"""
 *     global inv_exc_map_test
 */
  __pyx_codeobj__189 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_get_inv_exc_map_test, 649, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__189)) __PYX_ERR(1, 649, __pyx_L1_error)

  /* "HFS_CythonGenerated.pyx":653
 *     global inv_exc_map_test
 *     return uvec_to_numpy(inv_exc_map_test)
 * def set_inv_exc_map_test(np.ndarray[long long unsigned int, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=1]) Set inv_exc_map_test"""
 */
  __pyx_tuple__190 = PyTuple_Pack(1, __pyx_n_s_value); if (unlikely(!__pyx_tuple__190)) __PYX_ERR(1, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__190);
  __Pyx_GIVEREF(__pyx_tuple__190);
  __pyx_codeobj__191 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__190, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_evan_git_HF_Stability_sour, __pyx_n_s_set_inv_exc_map_test, 653, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__191)) __PYX_ERR(1, 653, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_0_20 = PyFloat_FromDouble(0.20); if (unlikely(!__pyx_float_0_20)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_0_95 = PyFloat_FromDouble(0.95); if (unlikely(!__pyx_float_0_95)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_10eneg_10 = PyFloat_FromDouble(10e-10); if (unlikely(!__pyx_float_10eneg_10)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_float_neg_2_0 = PyFloat_FromDouble(-2.0); if (unlikely(!__pyx_float_neg_2_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_30 = PyInt_FromLong(30); if (unlikely(!__pyx_int_30)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_500 = PyInt_FromLong(500); if (unlikely(!__pyx_int_500)) __PYX_ERR(1, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initHFS_CythonGenerated(void); /*proto*/
PyMODINIT_FUNC initHFS_CythonGenerated(void)
#else
PyMODINIT_FUNC PyInit_HFS_CythonGenerated(void); /*proto*/
PyMODINIT_FUNC PyInit_HFS_CythonGenerated(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_HFS_CythonGenerated(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(1, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("HFS_CythonGenerated", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(1, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_HFS_CythonGenerated) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(1, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "HFS_CythonGenerated")) {
      if (unlikely(PyDict_SetItemString(modules, "HFS_CythonGenerated", __pyx_m) < 0)) __PYX_ERR(1, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(4, 9, __pyx_L1_error)
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) __PYX_ERR(2, 155, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) __PYX_ERR(2, 168, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) __PYX_ERR(2, 172, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) __PYX_ERR(2, 181, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) __PYX_ERR(2, 861, __pyx_L1_error)
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif

  /* "HFS_CythonGenerated.pyx":12
 * from libcpp.string cimport string
 * from libc.math cimport sqrt
 * import itertools             # <<<<<<<<<<<<<<
 * import math
 * from scipy import special as sp
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_itertools, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_itertools, __pyx_t_1) < 0) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":13
 * from libc.math cimport sqrt
 * import itertools
 * import math             # <<<<<<<<<<<<<<
 * from scipy import special as sp
 * import numpy as np
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_math, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_1) < 0) __PYX_ERR(1, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":14
 * import itertools
 * import math
 * from scipy import special as sp             # <<<<<<<<<<<<<<
 * import numpy as np
 * cimport numpy as np
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_special);
  __Pyx_GIVEREF(__pyx_n_s_special);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_special);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_scipy, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_special); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sp, __pyx_t_1) < 0) __PYX_ERR(1, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":15
 * import math
 * from scipy import special as sp
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * cimport cython
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_2) < 0) __PYX_ERR(1, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":18
 * cimport numpy as np
 * cimport cython
 * import matplotlib.pyplot as plt             # <<<<<<<<<<<<<<
 * import seaborn as sns
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s__32);
  __Pyx_GIVEREF(__pyx_n_s__32);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__32);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_matplotlib_pyplot, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plt, __pyx_t_1) < 0) __PYX_ERR(1, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":19
 * cimport cython
 * import matplotlib.pyplot as plt
 * import seaborn as sns             # <<<<<<<<<<<<<<
 * 
 * # This group imports from ./lib
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_seaborn, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sns, __pyx_t_1) < 0) __PYX_ERR(1, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pyfiles/lib/cyarma.pyx":1
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * cimport cython
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "HFS_CythonGenerated.pyx":23
 * # This group imports from ./lib
 * include "pyfiles/lib/cyarma.pyx"
 * from pyfiles.lib import general_methods as gm             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_general_methods);
  __Pyx_GIVEREF(__pyx_n_s_general_methods);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_general_methods);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_pyfiles_lib, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_general_methods); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_gm, __pyx_t_1) < 0) __PYX_ERR(1, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":93
 * #                                                                               #
 * #################################################################################
 * def py_f2D(y):             # <<<<<<<<<<<<<<
 *     if y <= 1.0:
 *         #scipy and guiliani/vignale define K and E differently, x -> x*x
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_1py_f2D, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_f2D, __pyx_t_2) < 0) __PYX_ERR(1, 93, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":102
 *         return y * (sp.ellipe(x*x) - (1.0 - x*x) * sp.ellipk(x*x))
 * 
 * def py_f3D(y):             # <<<<<<<<<<<<<<
 *     if y < 10e-10:
 *         return 1.0
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_3py_f3D, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_f3D, __pyx_t_2) < 0) __PYX_ERR(1, 102, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":107
 *     return 0.5 + (1 - y*y) / (4*y) * math.log(abs((1+y) / (1-y)))
 * 
 * def py_analytic_exch(k):             # <<<<<<<<<<<<<<
 *     const = -2.0 * get_kf() / math.pi
 *     if get_ndim() == 2:
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_5py_analytic_exch, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_analytic_exch, __pyx_t_2) < 0) __PYX_ERR(1, 107, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":114
 *         return const * py_f3D(k / get_kf())
 * 
 * def py_analytic_energy(k):             # <<<<<<<<<<<<<<
 *     x = np.linalg.norm(k)  #works on k of any dimension
 *     return (x*x / 2.0) + py_analytic_exch(x)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_7py_analytic_energy, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_analytic_energy, __pyx_t_2) < 0) __PYX_ERR(1, 114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":124
 * #                                                                               #
 * #################################################################################
 * def plot_1stBZ(spec_alpha=0.20):             # <<<<<<<<<<<<<<
 *     # Draw Shapes
 *     assert (get_ndim() == 2), 'Only 2d is supported right now'
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_9plot_1stBZ, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plot_1stBZ, __pyx_t_2) < 0) __PYX_ERR(1, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":157
 *     plt.title('The First Brillouin Zone')
 * 
 * def plot_energy(analytic=True, Discretized=True):             # <<<<<<<<<<<<<<
 *     scale = 1.2
 *     #Analytic plot
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_11plot_energy, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plot_energy, __pyx_t_2) < 0) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":186
 *         plt.plot(x, y, '.', c=sns.color_palette()[2], label='Virtual')
 * 
 * def plot_exc_hist():             # <<<<<<<<<<<<<<
 *     plt.hist(get_exc_energies(), get_Nexc()/30)
 *     plt.title('Excitation Energy Histogram')
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_13plot_exc_hist, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plot_exc_hist, __pyx_t_2) < 0) __PYX_ERR(1, 186, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":196
 * #                               Py Funcs                               #
 * ########################################################################
 * def py_calc_kf():             # <<<<<<<<<<<<<<
 *     calc_kf()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_15py_calc_kf, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_kf, __pyx_t_2) < 0) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":199
 *     calc_kf()
 * 
 * def py_calc_vol_and_two_e_const():             # <<<<<<<<<<<<<<
 *     calc_vol_and_two_e_const()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_17py_calc_vol_and_two_e_const, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_vol_and_two_e_const, __pyx_t_2) < 0) __PYX_ERR(1, 199, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":202
 *     calc_vol_and_two_e_const()
 * 
 * def py_print_params():             # <<<<<<<<<<<<<<
 *     print_params()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_19py_print_params, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_print_params, __pyx_t_2) < 0) __PYX_ERR(1, 202, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":205
 *     print_params()
 * 
 * def py_calc_occ_states():             # <<<<<<<<<<<<<<
 *     calc_occ_states()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_21py_calc_occ_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_occ_states, __pyx_t_2) < 0) __PYX_ERR(1, 205, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":208
 *     calc_occ_states()
 * 
 * def py_calc_occ_energies():             # <<<<<<<<<<<<<<
 *     calc_occ_energies()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_23py_calc_occ_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_occ_energies, __pyx_t_2) < 0) __PYX_ERR(1, 208, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":211
 *     calc_occ_energies()
 * 
 * def py_calc_vir_energies():             # <<<<<<<<<<<<<<
 *     calc_vir_energies()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_25py_calc_vir_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_vir_energies, __pyx_t_2) < 0) __PYX_ERR(1, 211, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":214
 *     calc_vir_energies()
 * 
 * def py_calc_excitations():             # <<<<<<<<<<<<<<
 *     calc_excitations()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_27py_calc_excitations, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_excitations, __pyx_t_2) < 0) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":217
 *     calc_excitations()
 * 
 * def py_is_vir(float val):             # <<<<<<<<<<<<<<
 *     return is_vir(val)
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_29py_is_vir, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_is_vir, __pyx_t_2) < 0) __PYX_ERR(1, 217, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":220
 *     return is_vir(val)
 * 
 * def py_calc_exc_energy():             # <<<<<<<<<<<<<<
 *     calc_exc_energy()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_31py_calc_exc_energy, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_exc_energy, __pyx_t_2) < 0) __PYX_ERR(1, 220, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":223
 *     calc_exc_energy()
 * 
 * def py_calc_energies(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                      np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_33py_calc_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_energies, __pyx_t_2) < 0) __PYX_ERR(1, 223, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":229
 *     calc_energies(VAL1, VAL2)
 * 
 * def py_exchange(np.ndarray[long long unsigned int, ndim=2, mode="fortran"] val1,             # <<<<<<<<<<<<<<
 *                 int val2):
 *     VAL1 = numpy_to_umat_d(val1)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_35py_exchange, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_exchange, __pyx_t_2) < 0) __PYX_ERR(1, 229, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":234
 *     return exchange(VAL1, val2)
 * 
 * def py_two_electron(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=1] val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_37py_two_electron, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_two_electron, __pyx_t_2) < 0) __PYX_ERR(1, 234, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":240
 *     return two_electron(VAL1, VAL2)
 * 
 * def py_two_electron_check(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=1] val2,
 *                           np.ndarray[double, ndim=1] val3,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_39py_two_electron_check, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_two_electron_check, __pyx_t_2) < 0) __PYX_ERR(1, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":250
 *     return two_electron_check(VAL1, VAL2, VAL3, VAL4)
 * 
 * def py_calc_1B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1B(val1, val2)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_41py_calc_1B, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_1B, __pyx_t_2) < 0) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":254
 *     return calc_1B(val1, val2)
 * 
 * def py_calc_3B(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3B(val1, val2)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_43py_calc_3B, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_3B, __pyx_t_2) < 0) __PYX_ERR(1, 254, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":258
 *     return calc_3B(val1, val2)
 * 
 * def py_calc_1A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_1A(val1, val2)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_45py_calc_1A, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_1A, __pyx_t_2) < 0) __PYX_ERR(1, 258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":262
 *     return calc_1A(val1, val2)
 * 
 * def py_calc_3A(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3A(val1, val2)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_47py_calc_3A, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_3A, __pyx_t_2) < 0) __PYX_ERR(1, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":266
 *     return calc_3A(val1, val2)
 * 
 * def py_calc_3H(int val1,             # <<<<<<<<<<<<<<
 *                int val2):
 *     return calc_3H(val1, val2)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_49py_calc_3H, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_3H, __pyx_t_2) < 0) __PYX_ERR(1, 266, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":270
 *     return calc_3H(val1, val2)
 * 
 * def py_to_first_BZ(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     to_first_BZ(VAL1)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_51py_to_first_BZ, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_to_first_BZ, __pyx_t_2) < 0) __PYX_ERR(1, 270, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":274
 *     to_first_BZ(VAL1)
 * 
 * def py_calc_params():             # <<<<<<<<<<<<<<
 *     calc_params()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_53py_calc_params, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_params, __pyx_t_2) < 0) __PYX_ERR(1, 274, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":277
 *     calc_params()
 * 
 * def py_calc_inv_exc_map():             # <<<<<<<<<<<<<<
 *     calc_inv_exc_map()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_55py_calc_inv_exc_map, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_inv_exc_map, __pyx_t_2) < 0) __PYX_ERR(1, 277, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":280
 *     calc_inv_exc_map()
 * 
 * def py_calc_vir_N_to_1_map():             # <<<<<<<<<<<<<<
 *     calc_vir_N_to_1_map()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_57py_calc_vir_N_to_1_map, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_calc_vir_N_to_1_map, __pyx_t_2) < 0) __PYX_ERR(1, 280, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":283
 *     calc_vir_N_to_1_map()
 * 
 * def py_k_to_index(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return uvec_to_numpy(k_to_index(VAL1))
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_59py_k_to_index, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_k_to_index, __pyx_t_2) < 0) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":287
 *     return uvec_to_numpy(k_to_index(VAL1))
 * 
 * def py_k_to_index(np.ndarray[double, ndim=2, mode="fortran"] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_mat_d(val1)
 *     return umat_to_numpy(k_to_index(VAL1))
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_61py_k_to_index, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_k_to_index, __pyx_t_2) < 0) __PYX_ERR(1, 287, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":291
 *     return umat_to_numpy(k_to_index(VAL1))
 * 
 * def py_build_mattest():             # <<<<<<<<<<<<<<
 *     build_mattest()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_63py_build_mattest, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_build_mattest, __pyx_t_2) < 0) __PYX_ERR(1, 291, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":294
 *     build_mattest()
 * 
 * def py_matvec_prod_me():             # <<<<<<<<<<<<<<
 *     matvec_prod_me()
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_65py_matvec_prod_me, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_matvec_prod_me, __pyx_t_2) < 0) __PYX_ERR(1, 294, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":297
 *     matvec_prod_me()
 * 
 * def py_matvec_prod_3H(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_67py_matvec_prod_3H, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_matvec_prod_3H, __pyx_t_2) < 0) __PYX_ERR(1, 297, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":301
 *     return vec_to_numpy(matvec_prod_3H(VAL1))
 * 
 * def py_davidson_wrapper(int val1,             # <<<<<<<<<<<<<<
 *                         int val2,
 *                         int val3,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_69py_davidson_wrapper, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_davidson_wrapper, __pyx_t_2) < 0) __PYX_ERR(1, 301, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":311
 *     davidson_wrapper(val1, val2, val3, val4, VAL5, val6, val7)
 * 
 * def py_kb_j_to_t(np.ndarray[double, ndim=1] val1,             # <<<<<<<<<<<<<<
 *                  int val2):
 *     VAL1 = numpy_to_vec_d(val1)
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_71py_kb_j_to_t, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_kb_j_to_t, __pyx_t_2) < 0) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":316
 *     return kb_j_to_t(VAL1, val2)
 * 
 * def py_matvec_prod_3A(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_73py_matvec_prod_3A, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_matvec_prod_3A, __pyx_t_2) < 0) __PYX_ERR(1, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":320
 *     return vec_to_numpy(matvec_prod_3A(VAL1))
 * 
 * def py_matvec_prod_3B(np.ndarray[double, ndim=1] val1):             # <<<<<<<<<<<<<<
 *     VAL1 = numpy_to_vec_d(val1)
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_75py_matvec_prod_3B, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_matvec_prod_3B, __pyx_t_2) < 0) __PYX_ERR(1, 320, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":324
 *     return vec_to_numpy(matvec_prod_3B(VAL1))
 * 
 * def py_occ_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_77py_occ_idx_to_k, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_occ_idx_to_k, __pyx_t_2) < 0) __PYX_ERR(1, 324, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":327
 *     return vec_to_numpy(occ_idx_to_k(val))
 * 
 * def py_vir_idx_to_k(int val):             # <<<<<<<<<<<<<<
 *     return vec_to_numpy(vir_idx_to_k(val))
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_79py_vir_idx_to_k, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_py_vir_idx_to_k, __pyx_t_2) < 0) __PYX_ERR(1, 327, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":335
 * #                         Generated Properties                         #
 * ########################################################################
 * def get_bzone_length():             # <<<<<<<<<<<<<<
 *     """(float) Get bzone_length"""
 *     global bzone_length
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_81get_bzone_length, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_bzone_length, __pyx_t_2) < 0) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":339
 *     global bzone_length
 *     return bzone_length
 * def set_bzone_length(value):             # <<<<<<<<<<<<<<
 *     """(o) Set bzone_length"""
 *     global bzone_length
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_83set_bzone_length, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_bzone_length, __pyx_t_2) < 0) __PYX_ERR(1, 339, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":345
 * 
 * 
 * def get_vol():             # <<<<<<<<<<<<<<
 *     """(float) Get vol"""
 *     global vol
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_85get_vol, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_vol, __pyx_t_2) < 0) __PYX_ERR(1, 345, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":349
 *     global vol
 *     return vol
 * def set_vol(value):             # <<<<<<<<<<<<<<
 *     """(o) Set vol"""
 *     global vol
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_87set_vol, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_vol, __pyx_t_2) < 0) __PYX_ERR(1, 349, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":355
 * 
 * 
 * def get_rs():             # <<<<<<<<<<<<<<
 *     """(float) Get rs"""
 *     global rs
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_89get_rs, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_rs, __pyx_t_2) < 0) __PYX_ERR(1, 355, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":359
 *     global rs
 *     return rs
 * def set_rs(value):             # <<<<<<<<<<<<<<
 *     """(o) Set rs"""
 *     global rs
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_91set_rs, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_rs, __pyx_t_2) < 0) __PYX_ERR(1, 359, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":365
 * 
 * 
 * def get_kf():             # <<<<<<<<<<<<<<
 *     """(float) Get kf"""
 *     global kf
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_93get_kf, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_kf, __pyx_t_2) < 0) __PYX_ERR(1, 365, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":369
 *     global kf
 *     return kf
 * def set_kf(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kf"""
 *     global kf
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_95set_kf, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_kf, __pyx_t_2) < 0) __PYX_ERR(1, 369, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":375
 * 
 * 
 * def get_kmax():             # <<<<<<<<<<<<<<
 *     """(float) Get kmax"""
 *     global kmax
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_97get_kmax, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_kmax, __pyx_t_2) < 0) __PYX_ERR(1, 375, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":379
 *     global kmax
 *     return kmax
 * def set_kmax(value):             # <<<<<<<<<<<<<<
 *     """(o) Set kmax"""
 *     global kmax
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_99set_kmax, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_kmax, __pyx_t_2) < 0) __PYX_ERR(1, 379, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":385
 * 
 * 
 * def get_fermi_energy():             # <<<<<<<<<<<<<<
 *     """(float) Get fermi_energy"""
 *     global fermi_energy
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_101get_fermi_energy, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_fermi_energy, __pyx_t_2) < 0) __PYX_ERR(1, 385, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":389
 *     global fermi_energy
 *     return fermi_energy
 * def set_fermi_energy(value):             # <<<<<<<<<<<<<<
 *     """(o) Set fermi_energy"""
 *     global fermi_energy
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_103set_fermi_energy, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_fermi_energy, __pyx_t_2) < 0) __PYX_ERR(1, 389, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":395
 * 
 * 
 * def get_two_e_const():             # <<<<<<<<<<<<<<
 *     """(float) Get two_e_const"""
 *     global two_e_const
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_105get_two_e_const, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_two_e_const, __pyx_t_2) < 0) __PYX_ERR(1, 395, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":399
 *     global two_e_const
 *     return two_e_const
 * def set_two_e_const(value):             # <<<<<<<<<<<<<<
 *     """(o) Set two_e_const"""
 *     global two_e_const
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_107set_two_e_const, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_two_e_const, __pyx_t_2) < 0) __PYX_ERR(1, 399, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":405
 * 
 * 
 * def get_deltaK():             # <<<<<<<<<<<<<<
 *     """(float) Get deltaK"""
 *     global deltaK
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_109get_deltaK, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_deltaK, __pyx_t_2) < 0) __PYX_ERR(1, 405, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":409
 *     global deltaK
 *     return deltaK
 * def set_deltaK(value):             # <<<<<<<<<<<<<<
 *     """(o) Set deltaK"""
 *     global deltaK
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_111set_deltaK, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_deltaK, __pyx_t_2) < 0) __PYX_ERR(1, 409, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":415
 * 
 * 
 * def get_Nocc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nocc"""
 *     global Nocc
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_113get_Nocc, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 415, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_Nocc, __pyx_t_2) < 0) __PYX_ERR(1, 415, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":419
 *     global Nocc
 *     return Nocc
 * def set_Nocc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nocc"""
 *     global Nocc
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_115set_Nocc, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_Nocc, __pyx_t_2) < 0) __PYX_ERR(1, 419, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":425
 * 
 * 
 * def get_Nvir():             # <<<<<<<<<<<<<<
 *     """(int) Get Nvir"""
 *     global Nvir
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_117get_Nvir, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_Nvir, __pyx_t_2) < 0) __PYX_ERR(1, 425, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":429
 *     global Nvir
 *     return Nvir
 * def set_Nvir(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nvir"""
 *     global Nvir
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_119set_Nvir, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_Nvir, __pyx_t_2) < 0) __PYX_ERR(1, 429, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":435
 * 
 * 
 * def get_Nexc():             # <<<<<<<<<<<<<<
 *     """(int) Get Nexc"""
 *     global Nexc
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_121get_Nexc, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_Nexc, __pyx_t_2) < 0) __PYX_ERR(1, 435, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":439
 *     global Nexc
 *     return Nexc
 * def set_Nexc(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nexc"""
 *     global Nexc
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_123set_Nexc, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_Nexc, __pyx_t_2) < 0) __PYX_ERR(1, 439, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":445
 * 
 * 
 * def get_N_elec():             # <<<<<<<<<<<<<<
 *     """(int) Get N_elec"""
 *     global N_elec
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_125get_N_elec, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_N_elec, __pyx_t_2) < 0) __PYX_ERR(1, 445, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":449
 *     global N_elec
 *     return N_elec
 * def set_N_elec(value):             # <<<<<<<<<<<<<<
 *     """(t) Set N_elec"""
 *     global N_elec
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_127set_N_elec, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_N_elec, __pyx_t_2) < 0) __PYX_ERR(1, 449, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":455
 * 
 * 
 * def get_Nk():             # <<<<<<<<<<<<<<
 *     """(int) Get Nk"""
 *     global Nk
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_129get_Nk, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 455, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_Nk, __pyx_t_2) < 0) __PYX_ERR(1, 455, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":459
 *     global Nk
 *     return Nk
 * def set_Nk(value):             # <<<<<<<<<<<<<<
 *     """(t) Set Nk"""
 *     global Nk
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_131set_Nk, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_Nk, __pyx_t_2) < 0) __PYX_ERR(1, 459, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":465
 * 
 * 
 * def get_ndim():             # <<<<<<<<<<<<<<
 *     """(int) Get ndim"""
 *     global ndim
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_133get_ndim, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_ndim, __pyx_t_2) < 0) __PYX_ERR(1, 465, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":469
 *     global ndim
 *     return ndim
 * def set_ndim(value):             # <<<<<<<<<<<<<<
 *     """(t) Set ndim"""
 *     global ndim
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_135set_ndim, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_ndim, __pyx_t_2) < 0) __PYX_ERR(1, 469, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":475
 * 
 * 
 * def get_occ_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get occ_energies"""
 *     global occ_energies
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_137get_occ_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_occ_energies, __pyx_t_2) < 0) __PYX_ERR(1, 475, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":479
 *     global occ_energies
 *     return vec_to_numpy(occ_energies)
 * def set_occ_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set occ_energies"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_139set_occ_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_occ_energies, __pyx_t_2) < 0) __PYX_ERR(1, 479, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":486
 * 
 * 
 * def get_vir_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get vir_energies"""
 *     global vir_energies
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_141get_vir_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_vir_energies, __pyx_t_2) < 0) __PYX_ERR(1, 486, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":490
 *     global vir_energies
 *     return vec_to_numpy(vir_energies)
 * def set_vir_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set vir_energies"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_143set_vir_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_vir_energies, __pyx_t_2) < 0) __PYX_ERR(1, 490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":497
 * 
 * 
 * def get_exc_energies():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get exc_energies"""
 *     global exc_energies
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_145get_exc_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_exc_energies, __pyx_t_2) < 0) __PYX_ERR(1, 497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":501
 *     global exc_energies
 *     return vec_to_numpy(exc_energies)
 * def set_exc_energies(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set exc_energies"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_147set_exc_energies, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_exc_energies, __pyx_t_2) < 0) __PYX_ERR(1, 501, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":508
 * 
 * 
 * def get_kgrid():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get kgrid"""
 *     global kgrid
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_149get_kgrid, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_kgrid, __pyx_t_2) < 0) __PYX_ERR(1, 508, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":512
 *     global kgrid
 *     return vec_to_numpy(kgrid)
 * def set_kgrid(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set kgrid"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_151set_kgrid, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_kgrid, __pyx_t_2) < 0) __PYX_ERR(1, 512, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":519
 * 
 * 
 * def get_inp_test_vec():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get inp_test_vec"""
 *     global inp_test_vec
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_153get_inp_test_vec, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_inp_test_vec, __pyx_t_2) < 0) __PYX_ERR(1, 519, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":523
 *     global inp_test_vec
 *     return vec_to_numpy(inp_test_vec)
 * def set_inp_test_vec(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set inp_test_vec"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_155set_inp_test_vec, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_inp_test_vec, __pyx_t_2) < 0) __PYX_ERR(1, 523, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":530
 * 
 * 
 * def get_out_vec1():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec1"""
 *     global out_vec1
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_157get_out_vec1, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_out_vec1, __pyx_t_2) < 0) __PYX_ERR(1, 530, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":534
 *     global out_vec1
 *     return vec_to_numpy(out_vec1)
 * def set_out_vec1(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec1"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_159set_out_vec1, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_out_vec1, __pyx_t_2) < 0) __PYX_ERR(1, 534, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":541
 * 
 * 
 * def get_out_vec2():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get out_vec2"""
 *     global out_vec2
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_161get_out_vec2, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_out_vec2, __pyx_t_2) < 0) __PYX_ERR(1, 541, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":545
 *     global out_vec2
 *     return vec_to_numpy(out_vec2)
 * def set_out_vec2(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set out_vec2"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_163set_out_vec2, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_out_vec2, __pyx_t_2) < 0) __PYX_ERR(1, 545, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":552
 * 
 * 
 * def get_mattest():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get mattest"""
 *     global mattest
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_165get_mattest, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_mattest, __pyx_t_2) < 0) __PYX_ERR(1, 552, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":556
 *     global mattest
 *     return mat_to_numpy(mattest)
 * def set_mattest(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set mattest"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_167set_mattest, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_mattest, __pyx_t_2) < 0) __PYX_ERR(1, 556, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":563
 * 
 * 
 * def get_occ_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get occ_states"""
 *     global occ_states
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_169get_occ_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_occ_states, __pyx_t_2) < 0) __PYX_ERR(1, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":567
 *     global occ_states
 *     return umat_to_numpy(occ_states)
 * def set_occ_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set occ_states"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_171set_occ_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_occ_states, __pyx_t_2) < 0) __PYX_ERR(1, 567, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":574
 * 
 * 
 * def get_vir_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get vir_states"""
 *     global vir_states
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_173get_vir_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_vir_states, __pyx_t_2) < 0) __PYX_ERR(1, 574, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":578
 *     global vir_states
 *     return umat_to_numpy(vir_states)
 * def set_vir_states(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set vir_states"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_175set_vir_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_vir_states, __pyx_t_2) < 0) __PYX_ERR(1, 578, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":585
 * 
 * 
 * def get_excitations():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Get excitations"""
 *     global excitations
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_177get_excitations, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_excitations, __pyx_t_2) < 0) __PYX_ERR(1, 585, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":589
 *     global excitations
 *     return umat_to_numpy(excitations)
 * def set_excitations(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=2, mode="fortran"]) Set excitations"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_179set_excitations, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_excitations, __pyx_t_2) < 0) __PYX_ERR(1, 589, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":596
 * 
 * 
 * def get_dav_vals():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=1]) Get dav_vals"""
 *     global dav_vals
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_181get_dav_vals, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_dav_vals, __pyx_t_2) < 0) __PYX_ERR(1, 596, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":600
 *     global dav_vals
 *     return vec_to_numpy(dav_vals)
 * def set_dav_vals(np.ndarray[double, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=1]) Set dav_vals"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_183set_dav_vals, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_dav_vals, __pyx_t_2) < 0) __PYX_ERR(1, 600, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":607
 * 
 * 
 * def get_dav_vecs():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get dav_vecs"""
 *     global dav_vecs
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_185get_dav_vecs, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_dav_vecs, __pyx_t_2) < 0) __PYX_ERR(1, 607, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":611
 *     global dav_vecs
 *     return mat_to_numpy(dav_vecs)
 * def set_dav_vecs(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set dav_vecs"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_187set_dav_vecs, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_dav_vecs, __pyx_t_2) < 0) __PYX_ERR(1, 611, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":618
 * 
 * 
 * def get_states():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Get states"""
 *     global states
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_189get_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_states, __pyx_t_2) < 0) __PYX_ERR(1, 618, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":622
 *     global states
 *     return mat_to_numpy(states)
 * def set_states(np.ndarray[double, ndim=2, mode="fortran"]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[double, ndim=2, mode="fortran"]) Set states"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_191set_states, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_states, __pyx_t_2) < 0) __PYX_ERR(1, 622, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":629
 * 
 * 
 * def get_dav_its():             # <<<<<<<<<<<<<<
 *     """(int) Get dav_its"""
 *     global dav_its
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_193get_dav_its, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_dav_its, __pyx_t_2) < 0) __PYX_ERR(1, 629, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":633
 *     global dav_its
 *     return dav_its
 * def set_dav_its(value):             # <<<<<<<<<<<<<<
 *     """(t) Set dav_its"""
 *     global dav_its
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_195set_dav_its, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_dav_its, __pyx_t_2) < 0) __PYX_ERR(1, 633, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":639
 * 
 * 
 * def get_dav_message():             # <<<<<<<<<<<<<<
 *     """(str) Get dav_message"""
 *     global dav_message
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_197get_dav_message, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_dav_message, __pyx_t_2) < 0) __PYX_ERR(1, 639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":643
 *     global dav_message
 *     return dav_message
 * def set_dav_message(value):             # <<<<<<<<<<<<<<
 *     """(r) Set dav_message"""
 *     global dav_message
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_199set_dav_message, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_dav_message, __pyx_t_2) < 0) __PYX_ERR(1, 643, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":649
 * 
 * 
 * def get_inv_exc_map_test():             # <<<<<<<<<<<<<<
 *     """(np.ndarray[long long unsigned int, ndim=1]) Get inv_exc_map_test"""
 *     global inv_exc_map_test
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_201get_inv_exc_map_test, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_inv_exc_map_test, __pyx_t_2) < 0) __PYX_ERR(1, 649, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":653
 *     global inv_exc_map_test
 *     return uvec_to_numpy(inv_exc_map_test)
 * def set_inv_exc_map_test(np.ndarray[long long unsigned int, ndim=1]             # <<<<<<<<<<<<<<
 *                      value not None):
 *     """(np.ndarray[long long unsigned int, ndim=1]) Set inv_exc_map_test"""
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_19HFS_CythonGenerated_203set_inv_exc_map_test, NULL, __pyx_n_s_HFS_CythonGenerated); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_inv_exc_map_test, __pyx_t_2) < 0) __PYX_ERR(1, 653, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "HFS_CythonGenerated.pyx":1
 * # This File was automatically generated by CppClassWrapper             # <<<<<<<<<<<<<<
 * ########################################################################
 * #                             .pyx Header                              #
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init HFS_CythonGenerated", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init HFS_CythonGenerated");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* BufferFormatCheck */
static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static CYTHON_INLINE PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}
static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static CYTHON_INLINE int __Pyx_GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  if (obj == Py_None || obj == NULL) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

/* PyObjectCall */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* ExtTypeTest */
  static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* BufferFallbackError */
  static void __Pyx_RaiseBufferFallbackError(void) {
  PyErr_SetString(PyExc_ValueError,
     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
}

/* PyErrFetchRestore */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
  static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* PyObjectCallMethO */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
  #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
    #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* GetModuleGlobalName */
      static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* PyFloatBinop */
        #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_DivideCObj(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double a = floatval;
    double b, result;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? __Pyx_PyNumber_InPlaceDivide(op1, op2) : __Pyx_PyNumber_Divide(op1, op2));
    }
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyFloatBinop */
          #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_SubtractCObj(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double a = floatval;
    double b, result;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
    }
        PyFPE_START_PROTECT("subtract", return NULL)
        result = a - b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyFloatBinop */
            #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_AddCObj(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double a = floatval;
    double b, result;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: b = 0.0; break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) (1L<<53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
    }
        PyFPE_START_PROTECT("add", return NULL)
        result = a + b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyIntBinop */
              #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_SubtractCObj(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long x;
        long b = PyInt_AS_LONG(op2);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            b = likely(size) ? digits[0] : 0;
            if (size == -1) b = -b;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
        double b = PyFloat_AS_DOUBLE(op2);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* PyIntBinop */
              #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddCObj(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long x;
        long b = PyInt_AS_LONG(op2);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            b = likely(size) ? digits[0] : 0;
            if (size == -1) b = -b;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
        double b = PyFloat_AS_DOUBLE(op2);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyIntBinop */
              #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                #if PyLong_SHIFT < 30 && PyLong_SHIFT != 15
                default: return PyLong_Type.tp_richcompare(op1, op2, Py_EQ);
                #else
                default: Py_RETURN_FALSE;
                #endif
            }
        }
            if (a == b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            if ((double)a == (double)b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    return PyObject_RichCompare(op1, op2, Py_EQ);
}
#endif

/* PyFloatBinop */
              #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyFloat_DivideObjC(PyObject *op1, PyObject *op2, double floatval, CYTHON_UNUSED int inplace) {
    const double b = floatval;
    double a, result;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) (1L<<53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) (1L<<53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) (1L<<53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        }
    } else {
        return (inplace ? __Pyx_PyNumber_InPlaceDivide(op1, op2) : __Pyx_PyNumber_Divide(op1, op2));
    }
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* RaiseDoubleKeywords */
                static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
                static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
                static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* GetItemInt */
                static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ArgTypeTest */
                static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* pyobject_as_double */
                static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
#if CYTHON_COMPILING_IN_PYPY
    float_value = PyNumber_Float(obj);  if (0) goto bad;
#else
    PyNumberMethods *nb = Py_TYPE(obj)->tp_as_number;
    if (likely(nb) && likely(nb->nb_float)) {
        float_value = nb->nb_float(obj);
        if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {
            PyErr_Format(PyExc_TypeError,
                "__float__ returned non-float (type %.200s)",
                Py_TYPE(float_value)->tp_name);
            Py_DECREF(float_value);
            goto bad;
        }
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
#endif
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

/* RaiseException */
                #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* RaiseTooManyValuesToUnpack */
                  static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
                  static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseNoneIterError */
                  static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* Import */
                  static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
                  static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CodeObjectCache */
                  static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
                  #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) { __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view); return; }
    Py_DECREF(obj);
    view->obj = NULL;
}
#endif


                  /* CIntFromPyVerify */
                  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
                  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
                  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_PY_LONG_LONG(unsigned PY_LONG_LONG value) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG) -1, const_zero = (unsigned PY_LONG_LONG) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned PY_LONG_LONG) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(unsigned PY_LONG_LONG) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned PY_LONG_LONG),
                                     little, !is_unsigned);
    }
}

/* None */
                  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* None */
                  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* None */
                  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* None */
                  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
                  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
                  static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
                  static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_As_unsigned_PY_LONG_LONG(PyObject *x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG) -1, const_zero = (unsigned PY_LONG_LONG) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned PY_LONG_LONG) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned PY_LONG_LONG) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned PY_LONG_LONG) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned PY_LONG_LONG) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) >= 2 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned PY_LONG_LONG) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) >= 3 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned PY_LONG_LONG) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) >= 4 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned PY_LONG_LONG) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned PY_LONG_LONG, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned PY_LONG_LONG, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned PY_LONG_LONG) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) (((unsigned PY_LONG_LONG)-1)*(((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned PY_LONG_LONG) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) ((((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) (((unsigned PY_LONG_LONG)-1)*(((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned PY_LONG_LONG) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) ((((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) (((unsigned PY_LONG_LONG)-1)*(((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned PY_LONG_LONG) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned PY_LONG_LONG, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned PY_LONG_LONG) ((((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned PY_LONG_LONG) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned PY_LONG_LONG, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned PY_LONG_LONG, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned PY_LONG_LONG val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned PY_LONG_LONG) -1;
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned PY_LONG_LONG) -1;
        val = __Pyx_PyInt_As_unsigned_PY_LONG_LONG(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned PY_LONG_LONG");
    return (unsigned PY_LONG_LONG) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned PY_LONG_LONG");
    return (unsigned PY_LONG_LONG) -1;
}

/* CIntFromPy */
                  static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CheckBinaryVersion */
                  static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
                  #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
                  #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
                  static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
